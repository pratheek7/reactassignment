{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport '../TextArea/TextArea.Skeleton.js';\nimport TextArea from '../TextArea/TextArea.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nvar _excluded = [\"className\"];\nfunction FluidTextArea(_ref) {\n  var className = _ref.className,\n    other = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var classNames = cx(\"\".concat(prefix, \"--text-area--fluid\"), className);\n  return /*#__PURE__*/React__default.createElement(FormContext.Provider, {\n    value: {\n      isFluid: true\n    }\n  }, /*#__PURE__*/React__default.createElement(TextArea, _extends({\n    className: classNames\n  }, other)));\n}\nFluidTextArea.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<textarea>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the `cols` attribute for the underlying `<textarea>` node\n   */\n  cols: PropTypes.number,\n  /**\n   * Optionally provide the default value of the `<textarea>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify whether to display the character counter\n   */\n  enableCounter: PropTypes.bool,\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether you want the underlying label to be visually hidden\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Provide a unique identifier for the control\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `FluidTextArea` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Max character count allowed for the textarea. This is needed in order for enableCounter to display\n   */\n  maxCount: PropTypes.number,\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<textarea>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<textarea>` is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the placeholder attribute for the `<textarea>`\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Specify the rows attribute for the `<textarea>`\n   */\n  rows: PropTypes.number,\n  /**\n   * Provide the current value of the `<textarea>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nexport { FluidTextArea as default };","map":{"version":3,"names":["objectWithoutProperties","_objectWithoutProperties","extends","_extends","PropTypes","React__default","cx","TextArea","deprecate","usePrefix","FormContext","_excluded","FluidTextArea","_ref","className","other","prefix","classNames","concat","createElement","Provider","value","isFluid","propTypes","string","cols","number","defaultValue","oneOfType","disabled","bool","enableCounter","helperText","node","hideLabel","id","invalid","invalidText","labelText","isRequired","light","maxCount","onChange","func","onClick","placeholder","rows","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/FluidTextArea/FluidTextArea.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport '../TextArea/TextArea.Skeleton.js';\nimport TextArea from '../TextArea/TextArea.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\n\nvar _excluded = [\"className\"];\n\nfunction FluidTextArea(_ref) {\n  var className = _ref.className,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var classNames = cx(\"\".concat(prefix, \"--text-area--fluid\"), className);\n  return /*#__PURE__*/React__default.createElement(FormContext.Provider, {\n    value: {\n      isFluid: true\n    }\n  }, /*#__PURE__*/React__default.createElement(TextArea, _extends({\n    className: classNames\n  }, other)));\n}\n\nFluidTextArea.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<textarea>` node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the `cols` attribute for the underlying `<textarea>` node\n   */\n  cols: PropTypes.number,\n\n  /**\n   * Optionally provide the default value of the `<textarea>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify whether to display the character counter\n   */\n  enableCounter: PropTypes.bool,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify whether you want the underlying label to be visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide a unique identifier for the control\n   */\n  id: PropTypes.string,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `FluidTextArea` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n\n  /**\n   * Max character count allowed for the textarea. This is needed in order for enableCounter to display\n   */\n  maxCount: PropTypes.number,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<textarea>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<textarea>` is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the `<textarea>`\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Specify the rows attribute for the `<textarea>`\n   */\n  rows: PropTypes.number,\n\n  /**\n   * Provide the current value of the `<textarea>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport { FluidTextArea as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}