{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@carbon/icons-react';\nimport { usePrefix } from '../../../internal/usePrefix.js';\nvar _excluded = [\"isOpen\", \"translateWithId\"];\nvar _defaultTranslations, _ChevronDown;\nvar translationIds = {\n  'close.menu': 'close.menu',\n  'open.menu': 'open.menu'\n};\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['close.menu'], 'Close'), _defineProperty(_defaultTranslations, translationIds['open.menu'], 'Open'), _defaultTranslations);\n/**\n * `ListBoxTrigger` is used to orient the icon up or down depending on the\n * state of the menu for a given `ListBox`\n */\n\nvar ListBoxTrigger = function ListBoxTrigger(_ref) {\n  var _cx;\n  var isOpen = _ref.isOpen,\n    t = _ref.translateWithId,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--list-box__menu-icon\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--list-box__menu-icon--open\"), isOpen), _cx));\n  var description = isOpen ? t('close.menu') : t('open.menu');\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    \"aria-label\": description,\n    title: description,\n    className: className,\n    type: \"button\",\n    tabIndex: \"-1\"\n  }), _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null)));\n};\nListBoxTrigger.propTypes = {\n  /**\n   * Specify whether the menu is currently open, which will influence the\n   * direction of the menu icon\n   */\n  isOpen: PropTypes.bool.isRequired,\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxTrigger.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\nexport { ListBoxTrigger as default, translationIds };","map":{"version":3,"names":["defineProperty","_defineProperty","objectWithoutProperties","_objectWithoutProperties","extends","_extends","cx","React__default","PropTypes","ChevronDown","usePrefix","_excluded","_defaultTranslations","_ChevronDown","translationIds","defaultTranslations","ListBoxTrigger","_ref","_cx","isOpen","t","translateWithId","rest","prefix","className","concat","description","createElement","title","type","tabIndex","propTypes","bool","isRequired","func","defaultProps","id","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/ListBox/next/ListBoxTrigger.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@carbon/icons-react';\nimport { usePrefix } from '../../../internal/usePrefix.js';\n\nvar _excluded = [\"isOpen\", \"translateWithId\"];\n\nvar _defaultTranslations, _ChevronDown;\nvar translationIds = {\n  'close.menu': 'close.menu',\n  'open.menu': 'open.menu'\n};\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['close.menu'], 'Close'), _defineProperty(_defaultTranslations, translationIds['open.menu'], 'Open'), _defaultTranslations);\n/**\n * `ListBoxTrigger` is used to orient the icon up or down depending on the\n * state of the menu for a given `ListBox`\n */\n\nvar ListBoxTrigger = function ListBoxTrigger(_ref) {\n  var _cx;\n\n  var isOpen = _ref.isOpen,\n      t = _ref.translateWithId,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--list-box__menu-icon\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--list-box__menu-icon--open\"), isOpen), _cx));\n  var description = isOpen ? t('close.menu') : t('open.menu');\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    \"aria-label\": description,\n    title: description,\n    className: className,\n    type: \"button\",\n    tabIndex: \"-1\"\n  }), _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null)));\n};\n\nListBoxTrigger.propTypes = {\n  /**\n   * Specify whether the menu is currently open, which will influence the\n   * direction of the menu icon\n   */\n  isOpen: PropTypes.bool.isRequired,\n\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxTrigger.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\n\nexport { ListBoxTrigger as default, translationIds };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,IAAIC,eAAe,EAAEC,uBAAuB,IAAIC,wBAAwB,EAAEC,OAAO,IAAIC,QAAQ,QAAQ,gDAAgD;AAC5K,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,SAAS,QAAQ,gCAAgC;AAE1D,IAAIC,SAAS,GAAG,CAAC,QAAQ,EAAE,iBAAiB,CAAC;AAE7C,IAAIC,oBAAoB,EAAEC,YAAY;AACtC,IAAIC,cAAc,GAAG;EACnB,YAAY,EAAE,YAAY;EAC1B,WAAW,EAAE;AACf,CAAC;AACD,IAAIC,mBAAmB,IAAIH,oBAAoB,GAAG,CAAC,CAAC,EAAEX,eAAe,CAACW,oBAAoB,EAAEE,cAAc,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,EAAEb,eAAe,CAACW,oBAAoB,EAAEE,cAAc,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,EAAEF,oBAAoB,CAAC;AACrO;AACA;AACA;AACA;;AAEA,IAAII,cAAc,GAAG,SAASA,cAAc,CAACC,IAAI,EAAE;EACjD,IAAIC,GAAG;EAEP,IAAIC,MAAM,GAAGF,IAAI,CAACE,MAAM;IACpBC,CAAC,GAAGH,IAAI,CAACI,eAAe;IACxBC,IAAI,GAAGnB,wBAAwB,CAACc,IAAI,EAAEN,SAAS,CAAC;EAEpD,IAAIY,MAAM,GAAGb,SAAS,EAAE;EACxB,IAAIc,SAAS,GAAGlB,EAAE,EAAEY,GAAG,GAAG,CAAC,CAAC,EAAEjB,eAAe,CAACiB,GAAG,EAAE,EAAE,CAACO,MAAM,CAACF,MAAM,EAAE,uBAAuB,CAAC,EAAE,IAAI,CAAC,EAAEtB,eAAe,CAACiB,GAAG,EAAE,EAAE,CAACO,MAAM,CAACF,MAAM,EAAE,6BAA6B,CAAC,EAAEJ,MAAM,CAAC,EAAED,GAAG,EAAE;EAC3L,IAAIQ,WAAW,GAAGP,MAAM,GAAGC,CAAC,CAAC,YAAY,CAAC,GAAGA,CAAC,CAAC,WAAW,CAAC;EAC3D,OAAO,aAAab,cAAc,CAACoB,aAAa,CAAC,QAAQ,EAAEtB,QAAQ,CAAC,CAAC,CAAC,EAAEiB,IAAI,EAAE;IAC5E,YAAY,EAAEI,WAAW;IACzBE,KAAK,EAAEF,WAAW;IAClBF,SAAS,EAAEA,SAAS;IACpBK,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC,CAAC,EAAEjB,YAAY,KAAKA,YAAY,GAAG,aAAaN,cAAc,CAACoB,aAAa,CAAClB,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;AACpG,CAAC;AAEDO,cAAc,CAACe,SAAS,GAAG;EACzB;AACF;AACA;AACA;EACEZ,MAAM,EAAEX,SAAS,CAACwB,IAAI,CAACC,UAAU;EAEjC;AACF;AACA;AACA;AACA;EACEZ,eAAe,EAAEb,SAAS,CAAC0B,IAAI,CAACD;AAClC,CAAC;AACDjB,cAAc,CAACmB,YAAY,GAAG;EAC5Bd,eAAe,EAAE,SAASA,eAAe,CAACe,EAAE,EAAE;IAC5C,OAAOrB,mBAAmB,CAACqB,EAAE,CAAC;EAChC;AACF,CAAC;AAED,SAASpB,cAAc,IAAIqB,OAAO,EAAEvB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}