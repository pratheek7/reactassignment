{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { useState, useRef, useCallback, useEffect } from 'react';\n\n/**\n * `useDelayedState` mirrors `useState` but also allows you to add a delay to\n * when your state updates. You can provide a second argument to `setState`,\n * `delayMs`, which will be the time in milliseconds after which the state is\n * updated.\n *\n * This hook will clean up pending timers in `useEffect` and will cancel any\n * pending timers when a `setState` is called before the state is updated from\n * a previous call\n */\n\nfunction useDelayedState(initialState) {\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var timeoutId = useRef(null); // We use `useCallback` to match the signature of React's `useState` which will\n  // always return the same reference for the `setState` updater\n\n  var setStateWithDelay = useCallback(function (stateToSet) {\n    var delayMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    clearTimeout(timeoutId.current);\n    timeoutId.current = null;\n    if (delayMs === 0) {\n      setState(stateToSet);\n      return;\n    }\n    timeoutId.current = setTimeout(function () {\n      setState(stateToSet);\n      timeoutId.current = null;\n    }, delayMs);\n  }, []);\n  useEffect(function () {\n    return function () {\n      clearTimeout(timeoutId.current);\n    };\n  }, []);\n  return [state, setStateWithDelay];\n}\nexport { useDelayedState };","map":{"version":3,"names":["slicedToArray","_slicedToArray","useState","useRef","useCallback","useEffect","useDelayedState","initialState","_useState","_useState2","state","setState","timeoutId","setStateWithDelay","stateToSet","delayMs","arguments","length","undefined","clearTimeout","current","setTimeout"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/internal/useDelayedState.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { useState, useRef, useCallback, useEffect } from 'react';\n\n/**\n * `useDelayedState` mirrors `useState` but also allows you to add a delay to\n * when your state updates. You can provide a second argument to `setState`,\n * `delayMs`, which will be the time in milliseconds after which the state is\n * updated.\n *\n * This hook will clean up pending timers in `useEffect` and will cancel any\n * pending timers when a `setState` is called before the state is updated from\n * a previous call\n */\n\nfunction useDelayedState(initialState) {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var timeoutId = useRef(null); // We use `useCallback` to match the signature of React's `useState` which will\n  // always return the same reference for the `setState` updater\n\n  var setStateWithDelay = useCallback(function (stateToSet) {\n    var delayMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    clearTimeout(timeoutId.current);\n    timeoutId.current = null;\n\n    if (delayMs === 0) {\n      setState(stateToSet);\n      return;\n    }\n\n    timeoutId.current = setTimeout(function () {\n      setState(stateToSet);\n      timeoutId.current = null;\n    }, delayMs);\n  }, []);\n  useEffect(function () {\n    return function () {\n      clearTimeout(timeoutId.current);\n    };\n  }, []);\n  return [state, setStateWithDelay];\n}\n\nexport { useDelayedState };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,IAAIC,cAAc,QAAQ,0CAA0C;AAC1F,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAe,CAACC,YAAY,EAAE;EACrC,IAAIC,SAAS,GAAGN,QAAQ,CAACK,YAAY,CAAC;IAClCE,UAAU,GAAGR,cAAc,CAACO,SAAS,EAAE,CAAC,CAAC;IACzCE,KAAK,GAAGD,UAAU,CAAC,CAAC,CAAC;IACrBE,QAAQ,GAAGF,UAAU,CAAC,CAAC,CAAC;EAE5B,IAAIG,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9B;;EAEA,IAAIU,iBAAiB,GAAGT,WAAW,CAAC,UAAUU,UAAU,EAAE;IACxD,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;IACnFG,YAAY,CAACP,SAAS,CAACQ,OAAO,CAAC;IAC/BR,SAAS,CAACQ,OAAO,GAAG,IAAI;IAExB,IAAIL,OAAO,KAAK,CAAC,EAAE;MACjBJ,QAAQ,CAACG,UAAU,CAAC;MACpB;IACF;IAEAF,SAAS,CAACQ,OAAO,GAAGC,UAAU,CAAC,YAAY;MACzCV,QAAQ,CAACG,UAAU,CAAC;MACpBF,SAAS,CAACQ,OAAO,GAAG,IAAI;IAC1B,CAAC,EAAEL,OAAO,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACNV,SAAS,CAAC,YAAY;IACpB,OAAO,YAAY;MACjBc,YAAY,CAACP,SAAS,CAACQ,OAAO,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACV,KAAK,EAAEG,iBAAiB,CAAC;AACnC;AAEA,SAASP,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}