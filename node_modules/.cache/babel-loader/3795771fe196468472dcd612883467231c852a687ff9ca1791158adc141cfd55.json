{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useRef, useCallback, useEffect } from 'react';\nimport cx from 'classnames';\nimport useResizeObserver from '../../node_modules/use-resize-observer/polyfilled.js';\nimport { ChevronDown } from '@carbon/icons-react';\nimport Copy from '../Copy/Copy.js';\nimport '../Button/Button.Skeleton.js';\nimport Button from '../Button/Button.js';\nimport CopyButton from '../CopyButton/CopyButton.js';\nimport uniqueId from '../../tools/uniqueId.js';\nimport copy from 'copy-to-clipboard';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar _excluded = [\"className\", \"type\", \"children\", \"disabled\", \"feedback\", \"feedbackTimeout\", \"onClick\", \"ariaLabel\", \"copyText\", \"copyButtonDescription\", \"light\", \"showMoreText\", \"showLessText\", \"hideCopyButton\", \"wrapText\", \"maxCollapsedNumberOfRows\", \"maxExpandedNumberOfRows\", \"minCollapsedNumberOfRows\", \"minExpandedNumberOfRows\"];\nvar rowHeightInPixels = 16;\nvar defaultMaxCollapsedNumberOfRows = 15;\nvar defaultMaxExpandedNumberOfRows = 0;\nvar defaultMinCollapsedNumberOfRows = 3;\nvar defaultMinExpandedNumberOfRows = 16;\nfunction CodeSnippet(_ref) {\n  var _classNames;\n  var className = _ref.className,\n    type = _ref.type,\n    children = _ref.children,\n    disabled = _ref.disabled,\n    feedback = _ref.feedback,\n    feedbackTimeout = _ref.feedbackTimeout,\n    onClick = _ref.onClick,\n    ariaLabel = _ref.ariaLabel,\n    copyText = _ref.copyText,\n    copyButtonDescription = _ref.copyButtonDescription,\n    light = _ref.light,\n    showMoreText = _ref.showMoreText,\n    showLessText = _ref.showLessText,\n    hideCopyButton = _ref.hideCopyButton,\n    wrapText = _ref.wrapText,\n    _ref$maxCollapsedNumb = _ref.maxCollapsedNumberOfRows,\n    maxCollapsedNumberOfRows = _ref$maxCollapsedNumb === void 0 ? defaultMaxCollapsedNumberOfRows : _ref$maxCollapsedNumb,\n    _ref$maxExpandedNumbe = _ref.maxExpandedNumberOfRows,\n    maxExpandedNumberOfRows = _ref$maxExpandedNumbe === void 0 ? defaultMaxExpandedNumberOfRows : _ref$maxExpandedNumbe,\n    _ref$minCollapsedNumb = _ref.minCollapsedNumberOfRows,\n    minCollapsedNumberOfRows = _ref$minCollapsedNumb === void 0 ? defaultMinCollapsedNumberOfRows : _ref$minCollapsedNumb,\n    _ref$minExpandedNumbe = _ref.minExpandedNumberOfRows,\n    minExpandedNumberOfRows = _ref$minExpandedNumbe === void 0 ? defaultMinExpandedNumberOfRows : _ref$minExpandedNumbe,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    expandedCode = _useState2[0],\n    setExpandedCode = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    shouldShowMoreLessBtn = _useState4[0],\n    setShouldShowMoreLessBtn = _useState4[1];\n  var _useRef = useRef(uniqueId()),\n    uid = _useRef.current;\n  var codeContentRef = useRef();\n  var codeContainerRef = useRef();\n  var innerCodeRef = useRef();\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    hasLeftOverflow = _useState6[0],\n    setHasLeftOverflow = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hasRightOverflow = _useState8[0],\n    setHasRightOverflow = _useState8[1];\n  var getCodeRef = useCallback(function () {\n    if (type === 'single') {\n      return codeContainerRef;\n    }\n    if (type === 'multi') {\n      return codeContentRef;\n    }\n  }, [type]);\n  var prefix = usePrefix();\n  var getCodeRefDimensions = useCallback(function () {\n    var _getCodeRef$current = getCodeRef().current,\n      codeClientWidth = _getCodeRef$current.clientWidth,\n      codeScrollLeft = _getCodeRef$current.scrollLeft,\n      codeScrollWidth = _getCodeRef$current.scrollWidth;\n    return {\n      horizontalOverflow: codeScrollWidth > codeClientWidth,\n      codeClientWidth: codeClientWidth,\n      codeScrollWidth: codeScrollWidth,\n      codeScrollLeft: codeScrollLeft\n    };\n  }, [getCodeRef]);\n  var handleScroll = useCallback(function () {\n    if (type === 'inline' || type === 'single' && !(codeContainerRef !== null && codeContainerRef !== void 0 && codeContainerRef.current) || type === 'multi' && !(codeContentRef !== null && codeContentRef !== void 0 && codeContentRef.current)) {\n      return;\n    }\n    var _getCodeRefDimensions = getCodeRefDimensions(),\n      horizontalOverflow = _getCodeRefDimensions.horizontalOverflow,\n      codeClientWidth = _getCodeRefDimensions.codeClientWidth,\n      codeScrollWidth = _getCodeRefDimensions.codeScrollWidth,\n      codeScrollLeft = _getCodeRefDimensions.codeScrollLeft;\n    setHasLeftOverflow(horizontalOverflow && !!codeScrollLeft);\n    setHasRightOverflow(horizontalOverflow && codeScrollLeft + codeClientWidth !== codeScrollWidth);\n  }, [type, getCodeRefDimensions]);\n  useResizeObserver({\n    ref: getCodeRef(),\n    onResize: function onResize() {\n      if (codeContentRef !== null && codeContentRef !== void 0 && codeContentRef.current && type === 'multi') {\n        var _codeContentRef$curre = codeContentRef.current.getBoundingClientRect(),\n          height = _codeContentRef$curre.height;\n        if (maxCollapsedNumberOfRows > 0 && (maxExpandedNumberOfRows <= 0 || maxExpandedNumberOfRows > maxCollapsedNumberOfRows) && height > maxCollapsedNumberOfRows * rowHeightInPixels) {\n          setShouldShowMoreLessBtn(true);\n        } else {\n          setShouldShowMoreLessBtn(false);\n        }\n        if (expandedCode && minExpandedNumberOfRows > 0 && height <= minExpandedNumberOfRows * rowHeightInPixels) {\n          setExpandedCode(false);\n        }\n      }\n      if (codeContentRef !== null && codeContentRef !== void 0 && codeContentRef.current && type === 'multi' || codeContainerRef !== null && codeContainerRef !== void 0 && codeContainerRef.current && type === 'single') {\n        handleScroll();\n      }\n    }\n  });\n  useEffect(function () {\n    handleScroll();\n  }, [handleScroll]);\n  var handleCopyClick = function handleCopyClick(evt) {\n    if (copyText || innerCodeRef !== null && innerCodeRef !== void 0 && innerCodeRef.current) {\n      var _innerCodeRef$current;\n      copy(copyText !== null && copyText !== void 0 ? copyText : innerCodeRef === null || innerCodeRef === void 0 ? void 0 : (_innerCodeRef$current = innerCodeRef.current) === null || _innerCodeRef$current === void 0 ? void 0 : _innerCodeRef$current.innerText);\n    }\n    if (onClick) {\n      onClick(evt);\n    }\n  };\n  var codeSnippetClasses = cx(className, \"\".concat(prefix, \"--snippet\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--disabled\"), type !== 'inline' && disabled), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--expand\"), expandedCode), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--no-copy\"), hideCopyButton), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--wraptext\"), wrapText), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--has-right-overflow\"), type == 'multi' && hasRightOverflow), _classNames));\n  var expandCodeBtnText = expandedCode ? showLessText : showMoreText;\n  if (type === 'inline') {\n    if (hideCopyButton) {\n      return /*#__PURE__*/React__default.createElement(\"span\", {\n        className: codeSnippetClasses\n      }, /*#__PURE__*/React__default.createElement(\"code\", {\n        id: uid,\n        ref: innerCodeRef\n      }, children));\n    }\n    return /*#__PURE__*/React__default.createElement(Copy, _extends({}, rest, {\n      onClick: handleCopyClick,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": uid,\n      className: codeSnippetClasses,\n      feedback: feedback,\n      feedbackTimeout: feedbackTimeout\n    }), /*#__PURE__*/React__default.createElement(\"code\", {\n      id: uid,\n      ref: innerCodeRef\n    }, children));\n  }\n  var containerStyle = {};\n  if (type === 'multi') {\n    var styles = {};\n    if (expandedCode) {\n      if (maxExpandedNumberOfRows > 0) {\n        styles.maxHeight = maxExpandedNumberOfRows * rowHeightInPixels;\n      }\n      if (minExpandedNumberOfRows > 0) {\n        styles.minHeight = minExpandedNumberOfRows * rowHeightInPixels;\n      }\n    } else {\n      if (maxCollapsedNumberOfRows > 0) {\n        styles.maxHeight = maxCollapsedNumberOfRows * rowHeightInPixels;\n      }\n      if (minCollapsedNumberOfRows > 0) {\n        styles.minHeight = minCollapsedNumberOfRows * rowHeightInPixels;\n      }\n    }\n    if (Object.keys(styles).length) {\n      containerStyle.style = styles;\n    }\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    className: codeSnippetClasses\n  }), /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: codeContainerRef,\n    role: type === 'single' ? 'textbox' : null,\n    tabIndex: type === 'single' && !disabled ? 0 : null,\n    className: \"\".concat(prefix, \"--snippet-container\"),\n    \"aria-label\": ariaLabel || 'code-snippet',\n    onScroll: type === 'single' && handleScroll || null\n  }, containerStyle), /*#__PURE__*/React__default.createElement(\"pre\", {\n    ref: codeContentRef,\n    onScroll: type === 'multi' && handleScroll || null\n  }, /*#__PURE__*/React__default.createElement(\"code\", {\n    ref: innerCodeRef\n  }, children))), hasLeftOverflow && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--snippet__overflow-indicator--left\")\n  }), hasRightOverflow && type !== 'multi' && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--snippet__overflow-indicator--right\")\n  }), !hideCopyButton && /*#__PURE__*/React__default.createElement(CopyButton, {\n    disabled: disabled,\n    onClick: handleCopyClick,\n    feedback: feedback,\n    feedbackTimeout: feedbackTimeout,\n    iconDescription: copyButtonDescription\n  }), shouldShowMoreLessBtn && /*#__PURE__*/React__default.createElement(Button, {\n    kind: \"ghost\",\n    size: \"sm\",\n    className: \"\".concat(prefix, \"--snippet-btn--expand\"),\n    disabled: disabled,\n    onClick: function onClick() {\n      return setExpandedCode(!expandedCode);\n    }\n  }, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--snippet-btn--text\")\n  }, expandCodeBtnText), /*#__PURE__*/React__default.createElement(ChevronDown, {\n    className: \"\".concat(prefix, \"--icon-chevron--down \").concat(prefix, \"--snippet__icon\"),\n    name: \"chevron--down\",\n    role: \"img\"\n  })));\n}\nCodeSnippet.propTypes = {\n  /**\n   * Specify a label to be read by screen readers on the containing <textbox>\n   * node\n   */\n  ariaLabel: PropTypes.string,\n  /**\n   * Provide the content of your CodeSnippet as a node or string\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the description for the Copy Button\n   */\n  copyButtonDescription: PropTypes.string,\n  /**\n   * Optional text to copy. If not specified, the `children` node's `innerText`\n   * will be used as the copy value.\n   */\n  copyText: PropTypes.string,\n  /**\n   * Specify whether or not the CodeSnippet should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify the string displayed when the snippet is copied\n   */\n  feedback: PropTypes.string,\n  /**\n   * Specify the time it takes for the feedback message to timeout\n   */\n  feedbackTimeout: PropTypes.number,\n  /**\n   * Specify whether or not a copy button should be used/rendered.\n   */\n  hideCopyButton: PropTypes.bool,\n  /**\n   * Specify whether you are using the light variant of the Code Snippet,\n   * typically used for inline snippet to display an alternate color\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `CodeSnippet` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Specify the maximum number of rows to be shown when in collapsed view\n   */\n  maxCollapsedNumberOfRows: PropTypes.number,\n  /**\n   * Specify the maximum number of rows to be shown when in expanded view\n   */\n  maxExpandedNumberOfRows: PropTypes.number,\n  /**\n   * Specify the minimum number of rows to be shown when in collapsed view\n   */\n  minCollapsedNumberOfRows: PropTypes.number,\n  /**\n   * Specify the minimum number of rows to be shown when in expanded view\n   */\n  minExpandedNumberOfRows: PropTypes.number,\n  /**\n   * An optional handler to listen to the `onClick` even fired by the Copy\n   * Button\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify a string that is displayed when the Code Snippet has been\n   * interacted with to show more lines\n   */\n  showLessText: PropTypes.string,\n  /**\n   * Specify a string that is displayed when the Code Snippet text is more\n   * than 15 lines\n   */\n  showMoreText: PropTypes.string,\n  /**\n   * Provide the type of Code Snippet\n   */\n  type: PropTypes.oneOf(['single', 'inline', 'multi']),\n  /**\n   * Specify whether or not to wrap the text.\n   */\n  wrapText: PropTypes.bool\n};\nCodeSnippet.defaultProps = {\n  ariaLabel: 'Copy to clipboard',\n  type: 'single',\n  showMoreText: 'Show more',\n  showLessText: 'Show less',\n  wrapText: false\n};\nexport { CodeSnippet as default };","map":{"version":3,"names":["objectWithoutProperties","_objectWithoutProperties","slicedToArray","_slicedToArray","defineProperty","_defineProperty","extends","_extends","PropTypes","React__default","useState","useRef","useCallback","useEffect","cx","useResizeObserver","ChevronDown","Copy","Button","CopyButton","uniqueId","copy","deprecate","usePrefix","_excluded","rowHeightInPixels","defaultMaxCollapsedNumberOfRows","defaultMaxExpandedNumberOfRows","defaultMinCollapsedNumberOfRows","defaultMinExpandedNumberOfRows","CodeSnippet","_ref","_classNames","className","type","children","disabled","feedback","feedbackTimeout","onClick","ariaLabel","copyText","copyButtonDescription","light","showMoreText","showLessText","hideCopyButton","wrapText","_ref$maxCollapsedNumb","maxCollapsedNumberOfRows","_ref$maxExpandedNumbe","maxExpandedNumberOfRows","_ref$minCollapsedNumb","minCollapsedNumberOfRows","_ref$minExpandedNumbe","minExpandedNumberOfRows","rest","_useState","_useState2","expandedCode","setExpandedCode","_useState3","_useState4","shouldShowMoreLessBtn","setShouldShowMoreLessBtn","_useRef","uid","current","codeContentRef","codeContainerRef","innerCodeRef","_useState5","_useState6","hasLeftOverflow","setHasLeftOverflow","_useState7","_useState8","hasRightOverflow","setHasRightOverflow","getCodeRef","prefix","getCodeRefDimensions","_getCodeRef$current","codeClientWidth","clientWidth","codeScrollLeft","scrollLeft","codeScrollWidth","scrollWidth","horizontalOverflow","handleScroll","_getCodeRefDimensions","ref","onResize","_codeContentRef$curre","getBoundingClientRect","height","handleCopyClick","evt","_innerCodeRef$current","innerText","codeSnippetClasses","concat","expandCodeBtnText","createElement","id","containerStyle","styles","maxHeight","minHeight","Object","keys","length","style","role","tabIndex","onScroll","iconDescription","kind","size","name","propTypes","string","node","bool","number","func","oneOf","defaultProps","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/CodeSnippet/CodeSnippet.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useRef, useCallback, useEffect } from 'react';\nimport cx from 'classnames';\nimport useResizeObserver from '../../node_modules/use-resize-observer/polyfilled.js';\nimport { ChevronDown } from '@carbon/icons-react';\nimport Copy from '../Copy/Copy.js';\nimport '../Button/Button.Skeleton.js';\nimport Button from '../Button/Button.js';\nimport CopyButton from '../CopyButton/CopyButton.js';\nimport uniqueId from '../../tools/uniqueId.js';\nimport copy from 'copy-to-clipboard';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar _excluded = [\"className\", \"type\", \"children\", \"disabled\", \"feedback\", \"feedbackTimeout\", \"onClick\", \"ariaLabel\", \"copyText\", \"copyButtonDescription\", \"light\", \"showMoreText\", \"showLessText\", \"hideCopyButton\", \"wrapText\", \"maxCollapsedNumberOfRows\", \"maxExpandedNumberOfRows\", \"minCollapsedNumberOfRows\", \"minExpandedNumberOfRows\"];\nvar rowHeightInPixels = 16;\nvar defaultMaxCollapsedNumberOfRows = 15;\nvar defaultMaxExpandedNumberOfRows = 0;\nvar defaultMinCollapsedNumberOfRows = 3;\nvar defaultMinExpandedNumberOfRows = 16;\n\nfunction CodeSnippet(_ref) {\n  var _classNames;\n\n  var className = _ref.className,\n      type = _ref.type,\n      children = _ref.children,\n      disabled = _ref.disabled,\n      feedback = _ref.feedback,\n      feedbackTimeout = _ref.feedbackTimeout,\n      onClick = _ref.onClick,\n      ariaLabel = _ref.ariaLabel,\n      copyText = _ref.copyText,\n      copyButtonDescription = _ref.copyButtonDescription,\n      light = _ref.light,\n      showMoreText = _ref.showMoreText,\n      showLessText = _ref.showLessText,\n      hideCopyButton = _ref.hideCopyButton,\n      wrapText = _ref.wrapText,\n      _ref$maxCollapsedNumb = _ref.maxCollapsedNumberOfRows,\n      maxCollapsedNumberOfRows = _ref$maxCollapsedNumb === void 0 ? defaultMaxCollapsedNumberOfRows : _ref$maxCollapsedNumb,\n      _ref$maxExpandedNumbe = _ref.maxExpandedNumberOfRows,\n      maxExpandedNumberOfRows = _ref$maxExpandedNumbe === void 0 ? defaultMaxExpandedNumberOfRows : _ref$maxExpandedNumbe,\n      _ref$minCollapsedNumb = _ref.minCollapsedNumberOfRows,\n      minCollapsedNumberOfRows = _ref$minCollapsedNumb === void 0 ? defaultMinCollapsedNumberOfRows : _ref$minCollapsedNumb,\n      _ref$minExpandedNumbe = _ref.minExpandedNumberOfRows,\n      minExpandedNumberOfRows = _ref$minExpandedNumbe === void 0 ? defaultMinExpandedNumberOfRows : _ref$minExpandedNumbe,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedCode = _useState2[0],\n      setExpandedCode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      shouldShowMoreLessBtn = _useState4[0],\n      setShouldShowMoreLessBtn = _useState4[1];\n\n  var _useRef = useRef(uniqueId()),\n      uid = _useRef.current;\n\n  var codeContentRef = useRef();\n  var codeContainerRef = useRef();\n  var innerCodeRef = useRef();\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hasLeftOverflow = _useState6[0],\n      setHasLeftOverflow = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hasRightOverflow = _useState8[0],\n      setHasRightOverflow = _useState8[1];\n\n  var getCodeRef = useCallback(function () {\n    if (type === 'single') {\n      return codeContainerRef;\n    }\n\n    if (type === 'multi') {\n      return codeContentRef;\n    }\n  }, [type]);\n  var prefix = usePrefix();\n  var getCodeRefDimensions = useCallback(function () {\n    var _getCodeRef$current = getCodeRef().current,\n        codeClientWidth = _getCodeRef$current.clientWidth,\n        codeScrollLeft = _getCodeRef$current.scrollLeft,\n        codeScrollWidth = _getCodeRef$current.scrollWidth;\n    return {\n      horizontalOverflow: codeScrollWidth > codeClientWidth,\n      codeClientWidth: codeClientWidth,\n      codeScrollWidth: codeScrollWidth,\n      codeScrollLeft: codeScrollLeft\n    };\n  }, [getCodeRef]);\n  var handleScroll = useCallback(function () {\n    if (type === 'inline' || type === 'single' && !(codeContainerRef !== null && codeContainerRef !== void 0 && codeContainerRef.current) || type === 'multi' && !(codeContentRef !== null && codeContentRef !== void 0 && codeContentRef.current)) {\n      return;\n    }\n\n    var _getCodeRefDimensions = getCodeRefDimensions(),\n        horizontalOverflow = _getCodeRefDimensions.horizontalOverflow,\n        codeClientWidth = _getCodeRefDimensions.codeClientWidth,\n        codeScrollWidth = _getCodeRefDimensions.codeScrollWidth,\n        codeScrollLeft = _getCodeRefDimensions.codeScrollLeft;\n\n    setHasLeftOverflow(horizontalOverflow && !!codeScrollLeft);\n    setHasRightOverflow(horizontalOverflow && codeScrollLeft + codeClientWidth !== codeScrollWidth);\n  }, [type, getCodeRefDimensions]);\n  useResizeObserver({\n    ref: getCodeRef(),\n    onResize: function onResize() {\n      if (codeContentRef !== null && codeContentRef !== void 0 && codeContentRef.current && type === 'multi') {\n        var _codeContentRef$curre = codeContentRef.current.getBoundingClientRect(),\n            height = _codeContentRef$curre.height;\n\n        if (maxCollapsedNumberOfRows > 0 && (maxExpandedNumberOfRows <= 0 || maxExpandedNumberOfRows > maxCollapsedNumberOfRows) && height > maxCollapsedNumberOfRows * rowHeightInPixels) {\n          setShouldShowMoreLessBtn(true);\n        } else {\n          setShouldShowMoreLessBtn(false);\n        }\n\n        if (expandedCode && minExpandedNumberOfRows > 0 && height <= minExpandedNumberOfRows * rowHeightInPixels) {\n          setExpandedCode(false);\n        }\n      }\n\n      if (codeContentRef !== null && codeContentRef !== void 0 && codeContentRef.current && type === 'multi' || codeContainerRef !== null && codeContainerRef !== void 0 && codeContainerRef.current && type === 'single') {\n        handleScroll();\n      }\n    }\n  });\n  useEffect(function () {\n    handleScroll();\n  }, [handleScroll]);\n\n  var handleCopyClick = function handleCopyClick(evt) {\n    if (copyText || innerCodeRef !== null && innerCodeRef !== void 0 && innerCodeRef.current) {\n      var _innerCodeRef$current;\n\n      copy(copyText !== null && copyText !== void 0 ? copyText : innerCodeRef === null || innerCodeRef === void 0 ? void 0 : (_innerCodeRef$current = innerCodeRef.current) === null || _innerCodeRef$current === void 0 ? void 0 : _innerCodeRef$current.innerText);\n    }\n\n    if (onClick) {\n      onClick(evt);\n    }\n  };\n\n  var codeSnippetClasses = cx(className, \"\".concat(prefix, \"--snippet\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--disabled\"), type !== 'inline' && disabled), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--expand\"), expandedCode), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--no-copy\"), hideCopyButton), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--wraptext\"), wrapText), _defineProperty(_classNames, \"\".concat(prefix, \"--snippet--has-right-overflow\"), type == 'multi' && hasRightOverflow), _classNames));\n  var expandCodeBtnText = expandedCode ? showLessText : showMoreText;\n\n  if (type === 'inline') {\n    if (hideCopyButton) {\n      return /*#__PURE__*/React__default.createElement(\"span\", {\n        className: codeSnippetClasses\n      }, /*#__PURE__*/React__default.createElement(\"code\", {\n        id: uid,\n        ref: innerCodeRef\n      }, children));\n    }\n\n    return /*#__PURE__*/React__default.createElement(Copy, _extends({}, rest, {\n      onClick: handleCopyClick,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": uid,\n      className: codeSnippetClasses,\n      feedback: feedback,\n      feedbackTimeout: feedbackTimeout\n    }), /*#__PURE__*/React__default.createElement(\"code\", {\n      id: uid,\n      ref: innerCodeRef\n    }, children));\n  }\n\n  var containerStyle = {};\n\n  if (type === 'multi') {\n    var styles = {};\n\n    if (expandedCode) {\n      if (maxExpandedNumberOfRows > 0) {\n        styles.maxHeight = maxExpandedNumberOfRows * rowHeightInPixels;\n      }\n\n      if (minExpandedNumberOfRows > 0) {\n        styles.minHeight = minExpandedNumberOfRows * rowHeightInPixels;\n      }\n    } else {\n      if (maxCollapsedNumberOfRows > 0) {\n        styles.maxHeight = maxCollapsedNumberOfRows * rowHeightInPixels;\n      }\n\n      if (minCollapsedNumberOfRows > 0) {\n        styles.minHeight = minCollapsedNumberOfRows * rowHeightInPixels;\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      containerStyle.style = styles;\n    }\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    className: codeSnippetClasses\n  }), /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: codeContainerRef,\n    role: type === 'single' ? 'textbox' : null,\n    tabIndex: type === 'single' && !disabled ? 0 : null,\n    className: \"\".concat(prefix, \"--snippet-container\"),\n    \"aria-label\": ariaLabel || 'code-snippet',\n    onScroll: type === 'single' && handleScroll || null\n  }, containerStyle), /*#__PURE__*/React__default.createElement(\"pre\", {\n    ref: codeContentRef,\n    onScroll: type === 'multi' && handleScroll || null\n  }, /*#__PURE__*/React__default.createElement(\"code\", {\n    ref: innerCodeRef\n  }, children))), hasLeftOverflow && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--snippet__overflow-indicator--left\")\n  }), hasRightOverflow && type !== 'multi' && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--snippet__overflow-indicator--right\")\n  }), !hideCopyButton && /*#__PURE__*/React__default.createElement(CopyButton, {\n    disabled: disabled,\n    onClick: handleCopyClick,\n    feedback: feedback,\n    feedbackTimeout: feedbackTimeout,\n    iconDescription: copyButtonDescription\n  }), shouldShowMoreLessBtn && /*#__PURE__*/React__default.createElement(Button, {\n    kind: \"ghost\",\n    size: \"sm\",\n    className: \"\".concat(prefix, \"--snippet-btn--expand\"),\n    disabled: disabled,\n    onClick: function onClick() {\n      return setExpandedCode(!expandedCode);\n    }\n  }, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--snippet-btn--text\")\n  }, expandCodeBtnText), /*#__PURE__*/React__default.createElement(ChevronDown, {\n    className: \"\".concat(prefix, \"--icon-chevron--down \").concat(prefix, \"--snippet__icon\"),\n    name: \"chevron--down\",\n    role: \"img\"\n  })));\n}\n\nCodeSnippet.propTypes = {\n  /**\n   * Specify a label to be read by screen readers on the containing <textbox>\n   * node\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Provide the content of your CodeSnippet as a node or string\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the description for the Copy Button\n   */\n  copyButtonDescription: PropTypes.string,\n\n  /**\n   * Optional text to copy. If not specified, the `children` node's `innerText`\n   * will be used as the copy value.\n   */\n  copyText: PropTypes.string,\n\n  /**\n   * Specify whether or not the CodeSnippet should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify the string displayed when the snippet is copied\n   */\n  feedback: PropTypes.string,\n\n  /**\n   * Specify the time it takes for the feedback message to timeout\n   */\n  feedbackTimeout: PropTypes.number,\n\n  /**\n   * Specify whether or not a copy button should be used/rendered.\n   */\n  hideCopyButton: PropTypes.bool,\n\n  /**\n   * Specify whether you are using the light variant of the Code Snippet,\n   * typically used for inline snippet to display an alternate color\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `CodeSnippet` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n\n  /**\n   * Specify the maximum number of rows to be shown when in collapsed view\n   */\n  maxCollapsedNumberOfRows: PropTypes.number,\n\n  /**\n   * Specify the maximum number of rows to be shown when in expanded view\n   */\n  maxExpandedNumberOfRows: PropTypes.number,\n\n  /**\n   * Specify the minimum number of rows to be shown when in collapsed view\n   */\n  minCollapsedNumberOfRows: PropTypes.number,\n\n  /**\n   * Specify the minimum number of rows to be shown when in expanded view\n   */\n  minExpandedNumberOfRows: PropTypes.number,\n\n  /**\n   * An optional handler to listen to the `onClick` even fired by the Copy\n   * Button\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify a string that is displayed when the Code Snippet has been\n   * interacted with to show more lines\n   */\n  showLessText: PropTypes.string,\n\n  /**\n   * Specify a string that is displayed when the Code Snippet text is more\n   * than 15 lines\n   */\n  showMoreText: PropTypes.string,\n\n  /**\n   * Provide the type of Code Snippet\n   */\n  type: PropTypes.oneOf(['single', 'inline', 'multi']),\n\n  /**\n   * Specify whether or not to wrap the text.\n   */\n  wrapText: PropTypes.bool\n};\nCodeSnippet.defaultProps = {\n  ariaLabel: 'Copy to clipboard',\n  type: 'single',\n  showMoreText: 'Show more',\n  showLessText: 'Show less',\n  wrapText: false\n};\n\nexport { CodeSnippet as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}