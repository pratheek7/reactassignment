{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { inherits as _inherits, createSuper as _createSuper, createClass as _createClass, defineProperty as _defineProperty, classCallCheck as _classCallCheck, assertThisInitialized as _assertThisInitialized } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\n\n/**\n * Generic component used for reacting to a click event happening outside of a\n * given `children` element.\n */\n\nvar ClickListener = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClickListener, _React$Component);\n  var _super = _createSuper(ClickListener);\n  function ClickListener(props) {\n    var _this;\n    _classCallCheck(this, ClickListener);\n    _this = _super.call(this, props); // We manually bind handlers in this Component, versus using class\n    // properties, so that we can properly test the `handleRef` handler with\n    // enzyme.\n\n    _this.handleRef = _this.handleRef.bind(_assertThisInitialized(_this));\n    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(ClickListener, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.handleDocumentClick);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('click', this.handleDocumentClick);\n    }\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(evt) {\n      if (this.element) {\n        if (this.element.contains && !this.element.contains(ClickListener.getEventTarget(evt))) {\n          this.props.onClickOutside(evt);\n        }\n      }\n    }\n  }, {\n    key: \"handleRef\",\n    value: function handleRef(el) {\n      var children = this.props.children;\n      this.element = el;\n      /**\n       * One important note, `children.ref` corresponds to a `ref` prop passed in\n       * directly to the child, not necessarily a `ref` defined in the component.\n       * This means that here we target the following `ref` location:\n       *\n       * <ClickListener onClickOutside={() => {}}>\n       *   <Child ref={targetedRefHere} />\n       * </ClickListener>\n       */\n\n      if (children.ref && typeof children.ref === 'function') {\n        children.ref(el);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React__default.cloneElement(this.props.children, {\n        ref: this.handleRef\n      });\n    }\n  }], [{\n    key: \"getEventTarget\",\n    value: function getEventTarget(evt) {\n      // support Shadow DOM\n      if (evt.composed && typeof evt.composedPath === 'function') {\n        return evt.composedPath()[0];\n      }\n      return evt.target;\n    }\n  }]);\n  return ClickListener;\n}(React__default.Component);\n_defineProperty(ClickListener, \"propTypes\", {\n  children: PropTypes.element.isRequired,\n  onClickOutside: PropTypes.func.isRequired\n});\nexport { ClickListener as default };","map":{"version":3,"names":["inherits","_inherits","createSuper","_createSuper","createClass","_createClass","defineProperty","_defineProperty","classCallCheck","_classCallCheck","assertThisInitialized","_assertThisInitialized","PropTypes","React__default","ClickListener","_React$Component","_super","props","_this","call","handleRef","bind","handleDocumentClick","key","value","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","evt","element","contains","getEventTarget","onClickOutside","el","children","ref","render","cloneElement","composed","composedPath","target","Component","isRequired","func","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/internal/ClickListener.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { inherits as _inherits, createSuper as _createSuper, createClass as _createClass, defineProperty as _defineProperty, classCallCheck as _classCallCheck, assertThisInitialized as _assertThisInitialized } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\n\n/**\n * Generic component used for reacting to a click event happening outside of a\n * given `children` element.\n */\n\nvar ClickListener = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClickListener, _React$Component);\n\n  var _super = _createSuper(ClickListener);\n\n  function ClickListener(props) {\n    var _this;\n\n    _classCallCheck(this, ClickListener);\n\n    _this = _super.call(this, props); // We manually bind handlers in this Component, versus using class\n    // properties, so that we can properly test the `handleRef` handler with\n    // enzyme.\n\n    _this.handleRef = _this.handleRef.bind(_assertThisInitialized(_this));\n    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ClickListener, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.handleDocumentClick);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('click', this.handleDocumentClick);\n    }\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(evt) {\n      if (this.element) {\n        if (this.element.contains && !this.element.contains(ClickListener.getEventTarget(evt))) {\n          this.props.onClickOutside(evt);\n        }\n      }\n    }\n  }, {\n    key: \"handleRef\",\n    value: function handleRef(el) {\n      var children = this.props.children;\n      this.element = el;\n      /**\n       * One important note, `children.ref` corresponds to a `ref` prop passed in\n       * directly to the child, not necessarily a `ref` defined in the component.\n       * This means that here we target the following `ref` location:\n       *\n       * <ClickListener onClickOutside={() => {}}>\n       *   <Child ref={targetedRefHere} />\n       * </ClickListener>\n       */\n\n      if (children.ref && typeof children.ref === 'function') {\n        children.ref(el);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React__default.cloneElement(this.props.children, {\n        ref: this.handleRef\n      });\n    }\n  }], [{\n    key: \"getEventTarget\",\n    value: function getEventTarget(evt) {\n      // support Shadow DOM\n      if (evt.composed && typeof evt.composedPath === 'function') {\n        return evt.composedPath()[0];\n      }\n\n      return evt.target;\n    }\n  }]);\n\n  return ClickListener;\n}(React__default.Component);\n\n_defineProperty(ClickListener, \"propTypes\", {\n  children: PropTypes.element.isRequired,\n  onClickOutside: PropTypes.func.isRequired\n});\n\nexport { ClickListener as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}