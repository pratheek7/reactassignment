{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectSpread2 as _objectSpread2, objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { CARBON_SIDENAV_ITEMS } from './_utils.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar _excluded = [\"expanded\", \"defaultExpanded\", \"isChildOfHeader\", \"aria-label\", \"aria-labelledby\", \"children\", \"onToggle\", \"className\", \"isFixedNav\", \"isRail\", \"isPersistent\", \"addFocusListeners\", \"addMouseListeners\", \"onOverlayClick\"];\n// import SideNavFooter from './SideNavFooter';\n\nvar SideNav = /*#__PURE__*/React__default.forwardRef(function SideNav(props, ref) {\n  var _cx, _cx2;\n  var expandedProp = props.expanded,\n    defaultExpanded = props.defaultExpanded,\n    isChildOfHeader = props.isChildOfHeader,\n    ariaLabel = props['aria-label'],\n    ariaLabelledBy = props['aria-labelledby'],\n    children = props.children,\n    onToggle = props.onToggle,\n    customClassName = props.className,\n    isFixedNav = props.isFixedNav,\n    isRail = props.isRail,\n    isPersistent = props.isPersistent,\n    addFocusListeners = props.addFocusListeners,\n    addMouseListeners = props.addMouseListeners,\n    onOverlayClick = props.onOverlayClick,\n    other = _objectWithoutProperties(props, _excluded);\n  var prefix = usePrefix();\n  var _useRef = useRef(expandedProp !== undefined),\n    controlled = _useRef.current;\n  var _useState = useState(defaultExpanded),\n    _useState2 = _slicedToArray(_useState, 2),\n    expandedState = _useState2[0],\n    setExpandedState = _useState2[1];\n  var _useState3 = useState(defaultExpanded),\n    _useState4 = _slicedToArray(_useState3, 2),\n    expandedViaHoverState = _useState4[0],\n    setExpandedViaHoverState = _useState4[1];\n  var expanded = controlled ? expandedProp : expandedState;\n  var handleToggle = function handleToggle(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n    if (!controlled) {\n      setExpandedState(value);\n    }\n    if (onToggle) {\n      onToggle(event, value);\n    }\n    if (controlled || isRail) {\n      setExpandedViaHoverState(value);\n    }\n  };\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  }; // TO-DO: comment back in when footer is added for rails\n  // const assistiveText = expanded\n  //   ? t('carbon.sidenav.state.open')\n  //   : t('carbon.sidenav.state.closed');\n\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--expanded\"), expanded || expandedViaHoverState), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--collapsed\"), !expanded && isFixedNav), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--rail\"), isRail), _defineProperty(_cx, customClassName, !!customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--ux\"), isChildOfHeader), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--hidden\"), !isPersistent), _cx));\n  var overlayClassName = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--side-nav__overlay\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--side-nav__overlay-active\"), expanded || expandedViaHoverState), _cx2));\n  var childrenToRender = children; // if a rail, pass the expansion state as a prop, so children can update themselves to match\n\n  if (isRail) {\n    childrenToRender = React__default.Children.map(children, function (child) {\n      var _child$type$displayNa, _child$type, _child$type2;\n\n      // if we are controlled, check for if we have hovered over or the expanded state, else just use the expanded state (uncontrolled)\n      var currentExpansionState = controlled ? expandedViaHoverState || expanded : expanded; // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children\n\n      return /*#__PURE__*/React__default.cloneElement(child, _objectSpread2({}, CARBON_SIDENAV_ITEMS.includes((_child$type$displayNa = (_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) !== null && _child$type$displayNa !== void 0 ? _child$type$displayNa : (_child$type2 = child.type) === null || _child$type2 === void 0 ? void 0 : _child$type2.name) ? {\n        isSideNavExpanded: currentExpansionState\n      } : {}));\n    });\n  }\n  var eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onFocus = function (event) {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, true);\n      }\n    };\n    eventHandlers.onBlur = function (event) {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, false);\n      }\n    };\n  }\n  if (addMouseListeners && isRail) {\n    eventHandlers.onMouseEnter = function () {\n      return handleToggle(true, true);\n    };\n    eventHandlers.onMouseLeave = function () {\n      return handleToggle(false, false);\n    };\n  }\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, isFixedNav ? null : /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n  React__default.createElement(\"div\", {\n    className: overlayClassName,\n    onClick: onOverlayClick\n  }), /*#__PURE__*/React__default.createElement(\"nav\", _extends({\n    ref: ref,\n    className: \"\".concat(prefix, \"--side-nav__navigation \").concat(className)\n  }, accessibilityLabel, eventHandlers, other), childrenToRender));\n});\nSideNav.displayName = 'SideNav';\nSideNav.defaultProps = {\n  // TO-DO: comment back in when footer is added for rails\n  // translateById: (id) => {\n  //   const translations = {\n  //     'carbon.sidenav.state.open': 'Close',\n  //     'carbon.sidenav.state.closed': 'Open',\n  //   };\n  //   return translations[id];\n  // },\n  defaultExpanded: false,\n  isChildOfHeader: true,\n  isFixedNav: false,\n  isPersistent: true,\n  addFocusListeners: true,\n  addMouseListeners: true\n};\nSideNav.propTypes = _objectSpread2(_objectSpread2({}, AriaLabelPropType), {}, {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * Specify whether mouse entry/exit listeners are added. They are by default.\n   */\n  addMouseListeners: PropTypes.bool,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the SideNav will be open on initial render.\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * If `true`, the SideNav will be expanded, otherwise it will be collapsed.\n   * Using this prop causes SideNav to become a controled component.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  isChildOfHeader: PropTypes.bool,\n  /**\n   * Specify if sideNav is standalone\n   */\n  isFixedNav: PropTypes.bool,\n  /**\n   * Specify if the sideNav will be persistent above the lg breakpoint\n   */\n  isPersistent: PropTypes.bool,\n  /**\n   * Optional prop to display the side nav rail.\n   */\n  isRail: PropTypes.bool,\n  /**\n   * An optional listener that is called when the SideNav overlay is clicked\n   *\n   * @param {object} event\n   */\n  onOverlayClick: PropTypes.func,\n  /**\n   * An optional listener that is called when an event that would cause\n   * toggling the SideNav occurs.\n   *\n   * @param {object} event\n   * @param {boolean} value\n   */\n  onToggle: PropTypes.func\n  /**\n   * Provide a custom function for translating all message ids within this\n   * component. This function will take in two arguments: the mesasge Id and the\n   * state of the component. From this, you should return a string representing\n   * the label you want displayed or read by screen readers.\n   */\n  // translateById: PropTypes.func,\n});\n\nexport { SideNav as default };","map":{"version":3,"names":["objectSpread2","_objectSpread2","objectWithoutProperties","_objectWithoutProperties","slicedToArray","_slicedToArray","defineProperty","_defineProperty","extends","_extends","React__default","useRef","useState","cx","PropTypes","AriaLabelPropType","CARBON_SIDENAV_ITEMS","usePrefix","_excluded","SideNav","forwardRef","props","ref","_cx","_cx2","expandedProp","expanded","defaultExpanded","isChildOfHeader","ariaLabel","ariaLabelledBy","children","onToggle","customClassName","className","isFixedNav","isRail","isPersistent","addFocusListeners","addMouseListeners","onOverlayClick","other","prefix","_useRef","undefined","controlled","current","_useState","_useState2","expandedState","setExpandedState","_useState3","_useState4","expandedViaHoverState","setExpandedViaHoverState","handleToggle","event","value","arguments","length","accessibilityLabel","concat","overlayClassName","childrenToRender","Children","map","child","_child$type$displayNa","_child$type","_child$type2","currentExpansionState","cloneElement","includes","type","displayName","name","isSideNavExpanded","eventHandlers","onFocus","currentTarget","contains","relatedTarget","onBlur","onMouseEnter","onMouseLeave","createElement","Fragment","onClick","defaultProps","propTypes","bool","string","func","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/UIShell/SideNav.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectSpread2 as _objectSpread2, objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { CARBON_SIDENAV_ITEMS } from './_utils.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar _excluded = [\"expanded\", \"defaultExpanded\", \"isChildOfHeader\", \"aria-label\", \"aria-labelledby\", \"children\", \"onToggle\", \"className\", \"isFixedNav\", \"isRail\", \"isPersistent\", \"addFocusListeners\", \"addMouseListeners\", \"onOverlayClick\"];\n// import SideNavFooter from './SideNavFooter';\n\nvar SideNav = /*#__PURE__*/React__default.forwardRef(function SideNav(props, ref) {\n  var _cx, _cx2;\n\n  var expandedProp = props.expanded,\n      defaultExpanded = props.defaultExpanded,\n      isChildOfHeader = props.isChildOfHeader,\n      ariaLabel = props['aria-label'],\n      ariaLabelledBy = props['aria-labelledby'],\n      children = props.children,\n      onToggle = props.onToggle,\n      customClassName = props.className,\n      isFixedNav = props.isFixedNav,\n      isRail = props.isRail,\n      isPersistent = props.isPersistent,\n      addFocusListeners = props.addFocusListeners,\n      addMouseListeners = props.addMouseListeners,\n      onOverlayClick = props.onOverlayClick,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useRef = useRef(expandedProp !== undefined),\n      controlled = _useRef.current;\n\n  var _useState = useState(defaultExpanded),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedState = _useState2[0],\n      setExpandedState = _useState2[1];\n\n  var _useState3 = useState(defaultExpanded),\n      _useState4 = _slicedToArray(_useState3, 2),\n      expandedViaHoverState = _useState4[0],\n      setExpandedViaHoverState = _useState4[1];\n\n  var expanded = controlled ? expandedProp : expandedState;\n\n  var handleToggle = function handleToggle(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n\n    if (!controlled) {\n      setExpandedState(value);\n    }\n\n    if (onToggle) {\n      onToggle(event, value);\n    }\n\n    if (controlled || isRail) {\n      setExpandedViaHoverState(value);\n    }\n  };\n\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  }; // TO-DO: comment back in when footer is added for rails\n  // const assistiveText = expanded\n  //   ? t('carbon.sidenav.state.open')\n  //   : t('carbon.sidenav.state.closed');\n\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--expanded\"), expanded || expandedViaHoverState), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--collapsed\"), !expanded && isFixedNav), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--rail\"), isRail), _defineProperty(_cx, customClassName, !!customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--ux\"), isChildOfHeader), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--hidden\"), !isPersistent), _cx));\n  var overlayClassName = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--side-nav__overlay\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--side-nav__overlay-active\"), expanded || expandedViaHoverState), _cx2));\n  var childrenToRender = children; // if a rail, pass the expansion state as a prop, so children can update themselves to match\n\n  if (isRail) {\n    childrenToRender = React__default.Children.map(children, function (child) {\n      var _child$type$displayNa, _child$type, _child$type2;\n\n      // if we are controlled, check for if we have hovered over or the expanded state, else just use the expanded state (uncontrolled)\n      var currentExpansionState = controlled ? expandedViaHoverState || expanded : expanded; // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children\n\n      return /*#__PURE__*/React__default.cloneElement(child, _objectSpread2({}, CARBON_SIDENAV_ITEMS.includes((_child$type$displayNa = (_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) !== null && _child$type$displayNa !== void 0 ? _child$type$displayNa : (_child$type2 = child.type) === null || _child$type2 === void 0 ? void 0 : _child$type2.name) ? {\n        isSideNavExpanded: currentExpansionState\n      } : {}));\n    });\n  }\n\n  var eventHandlers = {};\n\n  if (addFocusListeners) {\n    eventHandlers.onFocus = function (event) {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, true);\n      }\n    };\n\n    eventHandlers.onBlur = function (event) {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, false);\n      }\n    };\n  }\n\n  if (addMouseListeners && isRail) {\n    eventHandlers.onMouseEnter = function () {\n      return handleToggle(true, true);\n    };\n\n    eventHandlers.onMouseLeave = function () {\n      return handleToggle(false, false);\n    };\n  }\n\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, isFixedNav ? null :\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n  React__default.createElement(\"div\", {\n    className: overlayClassName,\n    onClick: onOverlayClick\n  }), /*#__PURE__*/React__default.createElement(\"nav\", _extends({\n    ref: ref,\n    className: \"\".concat(prefix, \"--side-nav__navigation \").concat(className)\n  }, accessibilityLabel, eventHandlers, other), childrenToRender));\n});\nSideNav.displayName = 'SideNav';\nSideNav.defaultProps = {\n  // TO-DO: comment back in when footer is added for rails\n  // translateById: (id) => {\n  //   const translations = {\n  //     'carbon.sidenav.state.open': 'Close',\n  //     'carbon.sidenav.state.closed': 'Open',\n  //   };\n  //   return translations[id];\n  // },\n  defaultExpanded: false,\n  isChildOfHeader: true,\n  isFixedNav: false,\n  isPersistent: true,\n  addFocusListeners: true,\n  addMouseListeners: true\n};\nSideNav.propTypes = _objectSpread2(_objectSpread2({}, AriaLabelPropType), {}, {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n\n  /**\n   * Specify whether mouse entry/exit listeners are added. They are by default.\n   */\n  addMouseListeners: PropTypes.bool,\n\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the SideNav will be open on initial render.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the SideNav will be expanded, otherwise it will be collapsed.\n   * Using this prop causes SideNav to become a controled component.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  isChildOfHeader: PropTypes.bool,\n\n  /**\n   * Specify if sideNav is standalone\n   */\n  isFixedNav: PropTypes.bool,\n\n  /**\n   * Specify if the sideNav will be persistent above the lg breakpoint\n   */\n  isPersistent: PropTypes.bool,\n\n  /**\n   * Optional prop to display the side nav rail.\n   */\n  isRail: PropTypes.bool,\n\n  /**\n   * An optional listener that is called when the SideNav overlay is clicked\n   *\n   * @param {object} event\n   */\n  onOverlayClick: PropTypes.func,\n\n  /**\n   * An optional listener that is called when an event that would cause\n   * toggling the SideNav occurs.\n   *\n   * @param {object} event\n   * @param {boolean} value\n   */\n  onToggle: PropTypes.func\n  /**\n   * Provide a custom function for translating all message ids within this\n   * component. This function will take in two arguments: the mesasge Id and the\n   * state of the component. From this, you should return a string representing\n   * the label you want displayed or read by screen readers.\n   */\n  // translateById: PropTypes.func,\n\n});\n\nexport { SideNav as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}