{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useId } from '../../internal/useId.js';\nvar _ChevronDown;\nvar SideNavSwitcher = /*#__PURE__*/React__default.forwardRef(function SideNavSwitcher(props, ref) {\n  var id = useId('side-nav-switcher');\n  var prefix = usePrefix();\n  var customClassName = props.className,\n    labelText = props.labelText,\n    onChange = props.onChange,\n    options = props.options;\n  var className = cx(\"\".concat(prefix, \"--side-nav__switcher\"), customClassName); // Note for usage around `onBlur`: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, labelText), /*#__PURE__*/React__default.createElement(\"select\", {\n    id: id,\n    className: \"\".concat(prefix, \"--side-nav__select\"),\n    defaultValue: \"\",\n    onBlur: onChange,\n    onChange: onChange,\n    ref: ref\n  }, /*#__PURE__*/React__default.createElement(\"option\", {\n    className: \"\".concat(prefix, \"--side-nav__option\"),\n    disabled: true,\n    hidden: true,\n    value: \"\"\n  }, labelText), options.map(function (option) {\n    return /*#__PURE__*/React__default.createElement(\"option\", {\n      key: option,\n      className: \"\".concat(prefix, \"--side-nav__option\"),\n      value: option\n    }, option);\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__switcher-chevron\")\n  }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, {\n    size: 20\n  }))));\n});\nSideNavSwitcher.displayName = 'SideNavSwitcher';\nSideNavSwitcher.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide the label for the switcher. This will be the first visible option\n   * when someone views this control\n   */\n  labelText: PropTypes.string.isRequired,\n  /**\n   * Provide a callback function that is called whenever the switcher value is\n   * updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide an array of options to be rendered in the switcher as an\n   * `<option>`. The text value will be what is displayed to the user and is set\n   * as the `value` prop for each `<option>`.\n   */\n  options: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport { SideNavSwitcher as default };","map":{"version":3,"names":["ChevronDown","cx","PropTypes","React__default","usePrefix","useId","_ChevronDown","SideNavSwitcher","forwardRef","props","ref","id","prefix","customClassName","className","labelText","onChange","options","concat","createElement","htmlFor","defaultValue","onBlur","disabled","hidden","value","map","option","key","size","displayName","propTypes","string","isRequired","func","arrayOf","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/UIShell/SideNavSwitcher.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useId } from '../../internal/useId.js';\n\nvar _ChevronDown;\nvar SideNavSwitcher = /*#__PURE__*/React__default.forwardRef(function SideNavSwitcher(props, ref) {\n  var id = useId('side-nav-switcher');\n  var prefix = usePrefix();\n  var customClassName = props.className,\n      labelText = props.labelText,\n      onChange = props.onChange,\n      options = props.options;\n  var className = cx(\"\".concat(prefix, \"--side-nav__switcher\"), customClassName); // Note for usage around `onBlur`: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, labelText), /*#__PURE__*/React__default.createElement(\"select\", {\n    id: id,\n    className: \"\".concat(prefix, \"--side-nav__select\"),\n    defaultValue: \"\",\n    onBlur: onChange,\n    onChange: onChange,\n    ref: ref\n  }, /*#__PURE__*/React__default.createElement(\"option\", {\n    className: \"\".concat(prefix, \"--side-nav__option\"),\n    disabled: true,\n    hidden: true,\n    value: \"\"\n  }, labelText), options.map(function (option) {\n    return /*#__PURE__*/React__default.createElement(\"option\", {\n      key: option,\n      className: \"\".concat(prefix, \"--side-nav__option\"),\n      value: option\n    }, option);\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__switcher-chevron\")\n  }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, {\n    size: 20\n  }))));\n});\nSideNavSwitcher.displayName = 'SideNavSwitcher';\nSideNavSwitcher.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide the label for the switcher. This will be the first visible option\n   * when someone views this control\n   */\n  labelText: PropTypes.string.isRequired,\n\n  /**\n   * Provide a callback function that is called whenever the switcher value is\n   * updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide an array of options to be rendered in the switcher as an\n   * `<option>`. The text value will be what is displayed to the user and is set\n   * as the `value` prop for each `<option>`.\n   */\n  options: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport { SideNavSwitcher as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}