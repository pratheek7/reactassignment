{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport InlineCheckbox from '../InlineCheckbox/InlineCheckbox.js';\nimport RadioButton from '../RadioButton/RadioButton.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar TableSelectRow = function TableSelectRow(_ref) {\n  var _classNames;\n  var ariaLabel = _ref.ariaLabel,\n    checked = _ref.checked,\n    id = _ref.id,\n    name = _ref.name,\n    onSelect = _ref.onSelect,\n    onChange = _ref.onChange,\n    disabled = _ref.disabled,\n    radio = _ref.radio,\n    className = _ref.className;\n  var prefix = usePrefix();\n  var selectionInputProps = {\n    id: id,\n    name: name,\n    onClick: onSelect,\n    onChange: onChange,\n    checked: checked,\n    disabled: disabled\n  };\n  var InlineInputComponent = radio ? RadioButton : InlineCheckbox;\n  var tableSelectRowClasses = cx(\"\".concat(prefix, \"--table-column-checkbox\"), (_classNames = {}, _defineProperty(_classNames, className, className), _defineProperty(_classNames, \"\".concat(prefix, \"--table-column-radio\"), radio), _classNames));\n  return /*#__PURE__*/React__default.createElement(\"td\", {\n    className: tableSelectRowClasses\n  }, /*#__PURE__*/React__default.createElement(InlineInputComponent, _extends({}, selectionInputProps, radio && {\n    labelText: ariaLabel,\n    hideLabel: true\n  }, !radio && {\n    ariaLabel: ariaLabel\n  })));\n};\nTableSelectRow.propTypes = {\n  /**\n   * Specify the aria label for the underlying input control\n   */\n  ariaLabel: PropTypes.string.isRequired,\n  /**\n   * Specify whether all items are selected, or not\n   */\n  checked: PropTypes.bool.isRequired,\n  /**\n   * The CSS class names of the cell that wraps the underlying input control\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide a handler to listen to when a user initiates a selection request\n   */\n  onSelect: PropTypes.func.isRequired,\n  /**\n   * Specify whether the control should be a radio button or inline checkbox\n   */\n  radio: PropTypes.bool\n};\nexport { TableSelectRow as default };","map":{"version":3,"names":["defineProperty","_defineProperty","extends","_extends","PropTypes","React__default","cx","InlineCheckbox","RadioButton","usePrefix","TableSelectRow","_ref","_classNames","ariaLabel","checked","id","name","onSelect","onChange","disabled","radio","className","prefix","selectionInputProps","onClick","InlineInputComponent","tableSelectRowClasses","concat","createElement","labelText","hideLabel","propTypes","string","isRequired","bool","func","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/DataTable/TableSelectRow.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport InlineCheckbox from '../InlineCheckbox/InlineCheckbox.js';\nimport RadioButton from '../RadioButton/RadioButton.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar TableSelectRow = function TableSelectRow(_ref) {\n  var _classNames;\n\n  var ariaLabel = _ref.ariaLabel,\n      checked = _ref.checked,\n      id = _ref.id,\n      name = _ref.name,\n      onSelect = _ref.onSelect,\n      onChange = _ref.onChange,\n      disabled = _ref.disabled,\n      radio = _ref.radio,\n      className = _ref.className;\n  var prefix = usePrefix();\n  var selectionInputProps = {\n    id: id,\n    name: name,\n    onClick: onSelect,\n    onChange: onChange,\n    checked: checked,\n    disabled: disabled\n  };\n  var InlineInputComponent = radio ? RadioButton : InlineCheckbox;\n  var tableSelectRowClasses = cx(\"\".concat(prefix, \"--table-column-checkbox\"), (_classNames = {}, _defineProperty(_classNames, className, className), _defineProperty(_classNames, \"\".concat(prefix, \"--table-column-radio\"), radio), _classNames));\n  return /*#__PURE__*/React__default.createElement(\"td\", {\n    className: tableSelectRowClasses\n  }, /*#__PURE__*/React__default.createElement(InlineInputComponent, _extends({}, selectionInputProps, radio && {\n    labelText: ariaLabel,\n    hideLabel: true\n  }, !radio && {\n    ariaLabel: ariaLabel\n  })));\n};\n\nTableSelectRow.propTypes = {\n  /**\n   * Specify the aria label for the underlying input control\n   */\n  ariaLabel: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether all items are selected, or not\n   */\n  checked: PropTypes.bool.isRequired,\n\n  /**\n   * The CSS class names of the cell that wraps the underlying input control\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide a handler to listen to when a user initiates a selection request\n   */\n  onSelect: PropTypes.func.isRequired,\n\n  /**\n   * Specify whether the control should be a radio button or inline checkbox\n   */\n  radio: PropTypes.bool\n};\n\nexport { TableSelectRow as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}