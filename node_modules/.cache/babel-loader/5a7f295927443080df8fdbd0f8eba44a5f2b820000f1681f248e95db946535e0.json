{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronRight } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport '../Text/index.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { useId } from '../../internal/useId.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { Text } from '../Text/Text.js';\nvar _excluded = [\"children\", \"className\", \"iconDescription\", \"open\", \"onHeadingClick\", \"renderExpando\", \"renderToggle\", \"title\", \"disabled\"];\nvar defaultRenderToggle = function defaultRenderToggle(props) {\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n  }, props));\n};\nfunction AccordionItem(_ref) {\n  var _cx;\n  var children = _ref.children,\n    customClassName = _ref.className;\n  _ref.iconDescription;\n  var _ref$open = _ref.open,\n    open = _ref$open === void 0 ? false : _ref$open,\n    onHeadingClick = _ref.onHeadingClick,\n    _ref$renderExpando = _ref.renderExpando,\n    renderExpando = _ref$renderExpando === void 0 ? defaultRenderToggle : _ref$renderExpando,\n    renderToggle = _ref.renderToggle,\n    _ref$title = _ref.title,\n    title = _ref$title === void 0 ? 'title' : _ref$title,\n    disabled = _ref.disabled,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(open),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    setIsOpen = _useState2[1];\n  var _useState3 = useState(open),\n    _useState4 = _slicedToArray(_useState3, 2),\n    prevIsOpen = _useState4[0],\n    setPrevIsOpen = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    animation = _useState6[0],\n    setAnimation = _useState6[1];\n  var id = useId('accordion-item');\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--active\"), isOpen), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--\").concat(animation), animation), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--disabled\"), disabled), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n  var Toggle = renderToggle || renderExpando; // remove renderExpando in next major release\n\n  if (open !== prevIsOpen) {\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(open);\n    setPrevIsOpen(open);\n  } // When the AccordionItem heading is clicked, toggle the open state of the\n  // panel\n\n  function onClick(event) {\n    var nextValue = !isOpen;\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(nextValue);\n    if (onHeadingClick) {\n      // TODO: normalize signature, potentially:\n      // onHeadingClick :: (event: Event, state: { isOpen: Boolean }) => any\n      onHeadingClick({\n        isOpen: nextValue,\n        event: event\n      });\n    }\n  } // If the AccordionItem is open, and the user hits the ESC key, then close it\n\n  function onKeyDown(event) {\n    if (isOpen && match(event, Escape)) {\n      setIsOpen(false);\n    }\n  }\n  function handleAnimationEnd(event) {\n    if (rest.handleAnimationEnd) {\n      rest.handleAnimationEnd(event);\n    }\n    setAnimation('');\n  }\n  return /*#__PURE__*/React__default.createElement(\"li\", _extends({\n    className: className\n  }, rest, {\n    onAnimationEnd: handleAnimationEnd\n  }), /*#__PURE__*/React__default.createElement(Toggle, {\n    disabled: disabled,\n    \"aria-controls\": id,\n    \"aria-expanded\": isOpen,\n    className: \"\".concat(prefix, \"--accordion__heading\"),\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }, /*#__PURE__*/React__default.createElement(ChevronRight, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React__default.createElement(Text, {\n    as: \"div\",\n    className: \"\".concat(prefix, \"--accordion__title\")\n  }, title)), /*#__PURE__*/React__default.createElement(\"div\", {\n    id: id,\n    className: \"\".concat(prefix, \"--accordion__content\")\n  }, children));\n}\nAccordionItem.propTypes = {\n  /**\n   * Provide the contents of your AccordionItem\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether an individual AccordionItem should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The handler of the massaged `click` event.\n   */\n  onClick: PropTypes.func,\n  /**\n   * The handler of the massaged `click` event on the heading.\n   */\n  onHeadingClick: PropTypes.func,\n  /**\n   * `true` to open the expand.\n   */\n  open: PropTypes.bool,\n  /**\n   * The callback function to render the expand button.\n   * Can be a React component class.\n   */\n  renderExpando: deprecate(PropTypes.func, 'The `renderExpando` prop has been deprecated and will be removed in the next major release of Carbon. Use the `renderToggle` prop instead.'),\n  /**\n   * The callback function to render the expand button.\n   * Can be a React component class.\n   */\n  renderToggle: PropTypes.func,\n  /**\n   * The accordion title.\n   */\n  title: PropTypes.node\n};\nexport { AccordionItem as default };","map":{"version":3,"names":["objectWithoutProperties","_objectWithoutProperties","slicedToArray","_slicedToArray","defineProperty","_defineProperty","extends","_extends","ChevronRight","cx","PropTypes","React__default","useState","Escape","match","useId","deprecate","usePrefix","Text","_excluded","defaultRenderToggle","props","createElement","type","AccordionItem","_ref","_cx","children","customClassName","className","iconDescription","_ref$open","open","onHeadingClick","_ref$renderExpando","renderExpando","renderToggle","_ref$title","title","disabled","rest","_useState","_useState2","isOpen","setIsOpen","_useState3","_useState4","prevIsOpen","setPrevIsOpen","_useState5","_useState6","animation","setAnimation","id","prefix","concat","Toggle","onClick","event","nextValue","onKeyDown","handleAnimationEnd","onAnimationEnd","as","propTypes","node","string","bool","func","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/Accordion/AccordionItem.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronRight } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport '../Text/index.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { useId } from '../../internal/useId.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { Text } from '../Text/Text.js';\n\nvar _excluded = [\"children\", \"className\", \"iconDescription\", \"open\", \"onHeadingClick\", \"renderExpando\", \"renderToggle\", \"title\", \"disabled\"];\n\nvar defaultRenderToggle = function defaultRenderToggle(props) {\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n  }, props));\n};\n\nfunction AccordionItem(_ref) {\n  var _cx;\n\n  var children = _ref.children,\n      customClassName = _ref.className;\n      _ref.iconDescription;\n      var _ref$open = _ref.open,\n      open = _ref$open === void 0 ? false : _ref$open,\n      onHeadingClick = _ref.onHeadingClick,\n      _ref$renderExpando = _ref.renderExpando,\n      renderExpando = _ref$renderExpando === void 0 ? defaultRenderToggle : _ref$renderExpando,\n      renderToggle = _ref.renderToggle,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'title' : _ref$title,\n      disabled = _ref.disabled,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(open),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(open),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevIsOpen = _useState4[0],\n      setPrevIsOpen = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      animation = _useState6[0],\n      setAnimation = _useState6[1];\n\n  var id = useId('accordion-item');\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--active\"), isOpen), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--\").concat(animation), animation), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--disabled\"), disabled), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n  var Toggle = renderToggle || renderExpando; // remove renderExpando in next major release\n\n  if (open !== prevIsOpen) {\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(open);\n    setPrevIsOpen(open);\n  } // When the AccordionItem heading is clicked, toggle the open state of the\n  // panel\n\n\n  function onClick(event) {\n    var nextValue = !isOpen;\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(nextValue);\n\n    if (onHeadingClick) {\n      // TODO: normalize signature, potentially:\n      // onHeadingClick :: (event: Event, state: { isOpen: Boolean }) => any\n      onHeadingClick({\n        isOpen: nextValue,\n        event: event\n      });\n    }\n  } // If the AccordionItem is open, and the user hits the ESC key, then close it\n\n\n  function onKeyDown(event) {\n    if (isOpen && match(event, Escape)) {\n      setIsOpen(false);\n    }\n  }\n\n  function handleAnimationEnd(event) {\n    if (rest.handleAnimationEnd) {\n      rest.handleAnimationEnd(event);\n    }\n\n    setAnimation('');\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"li\", _extends({\n    className: className\n  }, rest, {\n    onAnimationEnd: handleAnimationEnd\n  }), /*#__PURE__*/React__default.createElement(Toggle, {\n    disabled: disabled,\n    \"aria-controls\": id,\n    \"aria-expanded\": isOpen,\n    className: \"\".concat(prefix, \"--accordion__heading\"),\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }, /*#__PURE__*/React__default.createElement(ChevronRight, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React__default.createElement(Text, {\n    as: \"div\",\n    className: \"\".concat(prefix, \"--accordion__title\")\n  }, title)), /*#__PURE__*/React__default.createElement(\"div\", {\n    id: id,\n    className: \"\".concat(prefix, \"--accordion__content\")\n  }, children));\n}\n\nAccordionItem.propTypes = {\n  /**\n   * Provide the contents of your AccordionItem\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether an individual AccordionItem should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The handler of the massaged `click` event.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The handler of the massaged `click` event on the heading.\n   */\n  onHeadingClick: PropTypes.func,\n\n  /**\n   * `true` to open the expand.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The callback function to render the expand button.\n   * Can be a React component class.\n   */\n  renderExpando: deprecate(PropTypes.func, 'The `renderExpando` prop has been deprecated and will be removed in the next major release of Carbon. Use the `renderToggle` prop instead.'),\n\n  /**\n   * The callback function to render the expand button.\n   * Can be a React component class.\n   */\n  renderToggle: PropTypes.func,\n\n  /**\n   * The accordion title.\n   */\n  title: PropTypes.node\n};\n\nexport { AccordionItem as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}