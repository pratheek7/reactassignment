{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generic helper used to consolidate all call sites for getting a cell id into\n * one method. The strategy currently is that a \"cellId\" is just the combination\n * of the row id and the header key used to access this field in a row.\n *\n * @param {string} rowId\n * @param {string} header\n * @returns {string}\n */\nvar getCellId = function getCellId(rowId, header) {\n  return \"\".concat(rowId, \":\").concat(header);\n};\nexport { getCellId };","map":{"version":3,"names":["getCellId","rowId","header","concat"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/DataTable/tools/cells.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generic helper used to consolidate all call sites for getting a cell id into\n * one method. The strategy currently is that a \"cellId\" is just the combination\n * of the row id and the header key used to access this field in a row.\n *\n * @param {string} rowId\n * @param {string} header\n * @returns {string}\n */\nvar getCellId = function getCellId(rowId, header) {\n  return \"\".concat(rowId, \":\").concat(header);\n};\n\nexport { getCellId };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAG,SAASA,SAAS,CAACC,KAAK,EAAEC,MAAM,EAAE;EAChD,OAAO,EAAE,CAACC,MAAM,CAACF,KAAK,EAAE,GAAG,CAAC,CAACE,MAAM,CAACD,MAAM,CAAC;AAC7C,CAAC;AAED,SAASF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}