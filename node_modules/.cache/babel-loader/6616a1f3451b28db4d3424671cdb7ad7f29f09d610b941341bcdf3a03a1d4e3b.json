{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectSpread2 as _objectSpread2, objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport '../Button/Button.Skeleton.js';\nimport Button from '../Button/Button.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar _excluded = [\"aria-label\", \"aria-labelledby\", \"children\", \"className\", \"onClick\", \"isActive\", \"tooltipAlignment\"];\n/**\n * HeaderGlobalAction is used as a part of the `HeaderGlobalBar`. It is\n * essentially an Icon Button with an additional state to indicate whether it is\n * \"active\". The active state comes from when a user clicks on the global action\n * which should trigger a panel to appear.\n *\n * Note: children passed to this component should be an Icon.\n */\n\nvar HeaderGlobalAction = /*#__PURE__*/React__default.forwardRef(function HeaderGlobalAction(_ref, ref) {\n  var _cx;\n  var ariaLabel = _ref['aria-label'],\n    ariaLabelledBy = _ref['aria-labelledby'],\n    children = _ref.children,\n    customClassName = _ref.className,\n    onClick = _ref.onClick,\n    isActive = _ref.isActive,\n    tooltipAlignment = _ref.tooltipAlignment,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, customClassName, !!customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--header__action\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--header__action--active\"), isActive), _cx));\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n  return /*#__PURE__*/React__default.createElement(Button, _extends({}, rest, accessibilityLabel, {\n    className: className,\n    onClick: onClick,\n    type: \"button\",\n    hasIconOnly: true,\n    iconDescription: ariaLabel,\n    tooltipPosition: \"bottom\",\n    tooltipAlignment: tooltipAlignment,\n    ref: ref\n  }), children);\n});\nHeaderGlobalAction.propTypes = _objectSpread2(_objectSpread2({}, AriaLabelPropType), {}, {\n  /**\n   * Provide a custom icon for this global action\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Optionally provide a custom class name that is applied to the underlying\n   * button\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the action is currently active\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Optionally provide an onClick handler that is called when the underlying\n   * button fires it's onclick event\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: PropTypes.oneOf(['start', 'center', 'end'])\n});\nHeaderGlobalAction.displayName = 'HeaderGlobalAction';\nexport { HeaderGlobalAction as default };","map":{"version":3,"names":["objectSpread2","_objectSpread2","objectWithoutProperties","_objectWithoutProperties","defineProperty","_defineProperty","extends","_extends","cx","React__default","PropTypes","AriaLabelPropType","Button","usePrefix","_excluded","HeaderGlobalAction","forwardRef","_ref","ref","_cx","ariaLabel","ariaLabelledBy","children","customClassName","className","onClick","isActive","tooltipAlignment","rest","prefix","concat","accessibilityLabel","createElement","type","hasIconOnly","iconDescription","tooltipPosition","propTypes","node","isRequired","string","bool","func","oneOf","displayName","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/UIShell/HeaderGlobalAction.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectSpread2 as _objectSpread2, objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport '../Button/Button.Skeleton.js';\nimport Button from '../Button/Button.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar _excluded = [\"aria-label\", \"aria-labelledby\", \"children\", \"className\", \"onClick\", \"isActive\", \"tooltipAlignment\"];\n/**\n * HeaderGlobalAction is used as a part of the `HeaderGlobalBar`. It is\n * essentially an Icon Button with an additional state to indicate whether it is\n * \"active\". The active state comes from when a user clicks on the global action\n * which should trigger a panel to appear.\n *\n * Note: children passed to this component should be an Icon.\n */\n\nvar HeaderGlobalAction = /*#__PURE__*/React__default.forwardRef(function HeaderGlobalAction(_ref, ref) {\n  var _cx;\n\n  var ariaLabel = _ref['aria-label'],\n      ariaLabelledBy = _ref['aria-labelledby'],\n      children = _ref.children,\n      customClassName = _ref.className,\n      onClick = _ref.onClick,\n      isActive = _ref.isActive,\n      tooltipAlignment = _ref.tooltipAlignment,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, customClassName, !!customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--header__action\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--header__action--active\"), isActive), _cx));\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n  return /*#__PURE__*/React__default.createElement(Button, _extends({}, rest, accessibilityLabel, {\n    className: className,\n    onClick: onClick,\n    type: \"button\",\n    hasIconOnly: true,\n    iconDescription: ariaLabel,\n    tooltipPosition: \"bottom\",\n    tooltipAlignment: tooltipAlignment,\n    ref: ref\n  }), children);\n});\nHeaderGlobalAction.propTypes = _objectSpread2(_objectSpread2({}, AriaLabelPropType), {}, {\n  /**\n   * Provide a custom icon for this global action\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Optionally provide a custom class name that is applied to the underlying\n   * button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the action is currently active\n   */\n  isActive: PropTypes.bool,\n\n  /**\n   * Optionally provide an onClick handler that is called when the underlying\n   * button fires it's onclick event\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: PropTypes.oneOf(['start', 'center', 'end'])\n});\nHeaderGlobalAction.displayName = 'HeaderGlobalAction';\n\nexport { HeaderGlobalAction as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}