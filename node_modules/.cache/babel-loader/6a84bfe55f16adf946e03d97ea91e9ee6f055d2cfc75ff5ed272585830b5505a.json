{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { Close } from '@carbon/icons-react';\nimport { Enter } from '../../internal/keyboard/keys.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar _Close, _Close2, _defaultTranslations;\n/**\n * `ListBoxSelection` is used to provide controls for clearing a selection, in\n * addition to conditionally rendering a badge if the control has more than one\n * selection.\n */\n\nfunction ListBoxSelection(_ref) {\n  var _cx;\n  var clearSelection = _ref.clearSelection,\n    selectionCount = _ref.selectionCount,\n    t = _ref.translateWithId,\n    disabled = _ref.disabled,\n    onClearSelection = _ref.onClearSelection,\n    readOnly = _ref.readOnly;\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--list-box__selection\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tag--filter\"), selectionCount), _defineProperty(_cx, \"\".concat(prefix, \"--list-box__selection--multi\"), selectionCount), _cx));\n  var handleOnClick = function handleOnClick(event) {\n    event.stopPropagation();\n    if (disabled || readOnly) {\n      return;\n    }\n    clearSelection(event);\n    if (onClearSelection) {\n      onClearSelection(event);\n    }\n  };\n  var handleOnKeyDown = function handleOnKeyDown(event) {\n    event.stopPropagation();\n    if (disabled || readOnly) {\n      return;\n    } // When a user hits ENTER, we'll clear the selection\n\n    if (match(event, Enter)) {\n      clearSelection(event);\n      if (onClearSelection) {\n        onClearSelection(event);\n      }\n    }\n  };\n  var description = selectionCount ? t('clear.all') : t('clear.selection');\n  var tagClasses = cx(\"\".concat(prefix, \"--tag\"), \"\".concat(prefix, \"--tag--filter\"), \"\".concat(prefix, \"--tag--high-contrast\"), _defineProperty({}, \"\".concat(prefix, \"--tag--disabled\"), disabled));\n  return selectionCount ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: tagClasses\n  }, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tag__label\"),\n    title: selectionCount\n  }, selectionCount), /*#__PURE__*/React__default.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: disabled ? -1 : 0,\n    className: \"\".concat(prefix, \"--tag__close-icon\"),\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    disabled: disabled,\n    \"aria-label\": t('clear.all'),\n    title: description,\n    \"aria-disabled\": readOnly ? true : undefined\n  }, _Close || (_Close = /*#__PURE__*/React__default.createElement(Close, null)))) : /*#__PURE__*/React__default.createElement(\"div\", {\n    role: \"button\",\n    className: className,\n    tabIndex: disabled ? -1 : 0,\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    \"aria-label\": description,\n    title: description\n  }, selectionCount, _Close2 || (_Close2 = /*#__PURE__*/React__default.createElement(Close, null)));\n}\nvar translationIds = {\n  'clear.all': 'clear.all',\n  'clear.selection': 'clear.selection'\n};\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['clear.all'], 'Clear all selected items'), _defineProperty(_defaultTranslations, translationIds['clear.selection'], 'Clear selected item'), _defaultTranslations);\nListBoxSelection.propTypes = {\n  /**\n   * Specify a function to be invoked when a user interacts with the clear\n   * selection element.\n   */\n  clearSelection: PropTypes.func.isRequired,\n  /**\n   * Specify whether or not the clear selection element should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify an optional `onClearSelection` handler that is called when the underlying\n   * element is cleared\n   */\n  onClearSelection: PropTypes.func,\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * clear selection element is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify an optional `onKeyDown` handler that is called when the underlying\n   * clear selection element fires a keydown event\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Whether or not the Dropdown is readonly\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Specify an optional `selectionCount` value that will be used to determine\n   * whether the selection should display a badge or a single clear icon.\n   */\n  selectionCount: PropTypes.number,\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxSelection.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\nexport { ListBoxSelection as default, translationIds };","map":{"version":3,"names":["defineProperty","_defineProperty","cx","React__default","PropTypes","Close","Enter","match","usePrefix","_Close","_Close2","_defaultTranslations","ListBoxSelection","_ref","_cx","clearSelection","selectionCount","t","translateWithId","disabled","onClearSelection","readOnly","prefix","className","concat","handleOnClick","event","stopPropagation","handleOnKeyDown","description","tagClasses","createElement","title","role","tabIndex","onClick","onKeyDown","undefined","translationIds","defaultTranslations","propTypes","func","isRequired","bool","number","defaultProps","id","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/ListBox/ListBoxSelection.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { Close } from '@carbon/icons-react';\nimport { Enter } from '../../internal/keyboard/keys.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar _Close, _Close2, _defaultTranslations;\n/**\n * `ListBoxSelection` is used to provide controls for clearing a selection, in\n * addition to conditionally rendering a badge if the control has more than one\n * selection.\n */\n\nfunction ListBoxSelection(_ref) {\n  var _cx;\n\n  var clearSelection = _ref.clearSelection,\n      selectionCount = _ref.selectionCount,\n      t = _ref.translateWithId,\n      disabled = _ref.disabled,\n      onClearSelection = _ref.onClearSelection,\n      readOnly = _ref.readOnly;\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--list-box__selection\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tag--filter\"), selectionCount), _defineProperty(_cx, \"\".concat(prefix, \"--list-box__selection--multi\"), selectionCount), _cx));\n\n  var handleOnClick = function handleOnClick(event) {\n    event.stopPropagation();\n\n    if (disabled || readOnly) {\n      return;\n    }\n\n    clearSelection(event);\n\n    if (onClearSelection) {\n      onClearSelection(event);\n    }\n  };\n\n  var handleOnKeyDown = function handleOnKeyDown(event) {\n    event.stopPropagation();\n\n    if (disabled || readOnly) {\n      return;\n    } // When a user hits ENTER, we'll clear the selection\n\n\n    if (match(event, Enter)) {\n      clearSelection(event);\n\n      if (onClearSelection) {\n        onClearSelection(event);\n      }\n    }\n  };\n\n  var description = selectionCount ? t('clear.all') : t('clear.selection');\n  var tagClasses = cx(\"\".concat(prefix, \"--tag\"), \"\".concat(prefix, \"--tag--filter\"), \"\".concat(prefix, \"--tag--high-contrast\"), _defineProperty({}, \"\".concat(prefix, \"--tag--disabled\"), disabled));\n  return selectionCount ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: tagClasses\n  }, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tag__label\"),\n    title: selectionCount\n  }, selectionCount), /*#__PURE__*/React__default.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: disabled ? -1 : 0,\n    className: \"\".concat(prefix, \"--tag__close-icon\"),\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    disabled: disabled,\n    \"aria-label\": t('clear.all'),\n    title: description,\n    \"aria-disabled\": readOnly ? true : undefined\n  }, _Close || (_Close = /*#__PURE__*/React__default.createElement(Close, null)))) : /*#__PURE__*/React__default.createElement(\"div\", {\n    role: \"button\",\n    className: className,\n    tabIndex: disabled ? -1 : 0,\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    \"aria-label\": description,\n    title: description\n  }, selectionCount, _Close2 || (_Close2 = /*#__PURE__*/React__default.createElement(Close, null)));\n}\n\nvar translationIds = {\n  'clear.all': 'clear.all',\n  'clear.selection': 'clear.selection'\n};\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['clear.all'], 'Clear all selected items'), _defineProperty(_defaultTranslations, translationIds['clear.selection'], 'Clear selected item'), _defaultTranslations);\nListBoxSelection.propTypes = {\n  /**\n   * Specify a function to be invoked when a user interacts with the clear\n   * selection element.\n   */\n  clearSelection: PropTypes.func.isRequired,\n\n  /**\n   * Specify whether or not the clear selection element should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify an optional `onClearSelection` handler that is called when the underlying\n   * element is cleared\n   */\n  onClearSelection: PropTypes.func,\n\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * clear selection element is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify an optional `onKeyDown` handler that is called when the underlying\n   * clear selection element fires a keydown event\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Whether or not the Dropdown is readonly\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Specify an optional `selectionCount` value that will be used to determine\n   * whether the selection should display a badge or a single clear icon.\n   */\n  selectionCount: PropTypes.number,\n\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxSelection.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\n\nexport { ListBoxSelection as default, translationIds };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}