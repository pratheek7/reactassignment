{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React__default from 'react';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport { usePrefix } from './usePrefix.js';\n\n/**\n * @typedef {object} InputProps\n * @property {string} id - The input's id\n * @property {boolean} readOnly - Whether the input should be readonly\n * @property {boolean} disabled - Whether the input should be disabled\n * @property {boolean} invalid - Whether the input should be marked as invalid\n * @property {string} invalidText - The validation message displayed in case the input is considered invalid\n * @property {boolean} warn - Whether the input should be in warning state\n * @property {string} warnText - The validation message displayed in case the input is in warning state\n */\n\n/**\n * @typedef {object} NormalizedInputProps\n * @property {boolean} disabled - Whether the input is disabled\n * @property {boolean} invalid - Whether the input is invalid (takes precedence over warn)\n * @property {string} invalidId - The invalid message's id\n * @property {boolean} warn - Whether the input is in warning state\n * @property {string} warnId - The warning message's id\n * @property {React.ReactNode | null} validation – React node rendering the appropriate validation message (if any)\n * @property {React.ReactNode | null} icon – React node rendering the appropriate accompanying icon (if any)\n */\n\n/**\n * Returns an object containing non-colliding props and additional, generated ones.\n * This hook ensures that only either \"invalid\" or \"warn\" is true but never both at\n * the same time. Regardless whether \"invalid\" or \"warn\", the appropriate validation\n * message is passed as \"validation\". If the input should be accompanied by an icon\n * (to visually represent a readonly, invalid or warning state), the appropriate icon\n * is passed as \"icon\".\n * It also ensure that neither \"invalid\", nor \"warn\", nor \"disabled\" are enabled when\n * \"readonly\" is passed as \"readonly\" takes precedence over these variants.\n *\n * @param {InputProps} props - The props passed to the component\n * @returns {NormalizedInputProps}\n */\n\nfunction useNormalizedInputProps(_ref) {\n  var id = _ref.id,\n    readOnly = _ref.readOnly,\n    disabled = _ref.disabled,\n    invalid = _ref.invalid,\n    invalidText = _ref.invalidText,\n    warn = _ref.warn,\n    warnText = _ref.warnText;\n  var prefix = usePrefix();\n  var normalizedProps = {\n    disabled: !readOnly && disabled,\n    invalid: !readOnly && invalid,\n    invalidId: \"\".concat(id, \"-error-msg\"),\n    warn: !readOnly && !invalid && warn,\n    warnId: \"\".concat(id, \"-warn-msg\"),\n    validation: null,\n    icon: null,\n    helperId: \"\".concat(id, \"-helper-text\")\n  };\n  if (normalizedProps.invalid) {\n    normalizedProps.icon = WarningFilled;\n    normalizedProps.validation = /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--form-requirement\"),\n      id: normalizedProps.invalidId\n    }, invalidText);\n  } else if (normalizedProps.warn) {\n    normalizedProps.icon = WarningAltFilled;\n    normalizedProps.validation = /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--form-requirement\"),\n      id: normalizedProps.warnId\n    }, warnText);\n  }\n  return normalizedProps;\n}\nexport { useNormalizedInputProps };","map":{"version":3,"names":["React__default","WarningFilled","WarningAltFilled","usePrefix","useNormalizedInputProps","_ref","id","readOnly","disabled","invalid","invalidText","warn","warnText","prefix","normalizedProps","invalidId","concat","warnId","validation","icon","helperId","createElement","className"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/internal/useNormalizedInputProps.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React__default from 'react';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport { usePrefix } from './usePrefix.js';\n\n/**\n * @typedef {object} InputProps\n * @property {string} id - The input's id\n * @property {boolean} readOnly - Whether the input should be readonly\n * @property {boolean} disabled - Whether the input should be disabled\n * @property {boolean} invalid - Whether the input should be marked as invalid\n * @property {string} invalidText - The validation message displayed in case the input is considered invalid\n * @property {boolean} warn - Whether the input should be in warning state\n * @property {string} warnText - The validation message displayed in case the input is in warning state\n */\n\n/**\n * @typedef {object} NormalizedInputProps\n * @property {boolean} disabled - Whether the input is disabled\n * @property {boolean} invalid - Whether the input is invalid (takes precedence over warn)\n * @property {string} invalidId - The invalid message's id\n * @property {boolean} warn - Whether the input is in warning state\n * @property {string} warnId - The warning message's id\n * @property {React.ReactNode | null} validation – React node rendering the appropriate validation message (if any)\n * @property {React.ReactNode | null} icon – React node rendering the appropriate accompanying icon (if any)\n */\n\n/**\n * Returns an object containing non-colliding props and additional, generated ones.\n * This hook ensures that only either \"invalid\" or \"warn\" is true but never both at\n * the same time. Regardless whether \"invalid\" or \"warn\", the appropriate validation\n * message is passed as \"validation\". If the input should be accompanied by an icon\n * (to visually represent a readonly, invalid or warning state), the appropriate icon\n * is passed as \"icon\".\n * It also ensure that neither \"invalid\", nor \"warn\", nor \"disabled\" are enabled when\n * \"readonly\" is passed as \"readonly\" takes precedence over these variants.\n *\n * @param {InputProps} props - The props passed to the component\n * @returns {NormalizedInputProps}\n */\n\nfunction useNormalizedInputProps(_ref) {\n  var id = _ref.id,\n      readOnly = _ref.readOnly,\n      disabled = _ref.disabled,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      warn = _ref.warn,\n      warnText = _ref.warnText;\n  var prefix = usePrefix();\n  var normalizedProps = {\n    disabled: !readOnly && disabled,\n    invalid: !readOnly && invalid,\n    invalidId: \"\".concat(id, \"-error-msg\"),\n    warn: !readOnly && !invalid && warn,\n    warnId: \"\".concat(id, \"-warn-msg\"),\n    validation: null,\n    icon: null,\n    helperId: \"\".concat(id, \"-helper-text\")\n  };\n\n  if (normalizedProps.invalid) {\n    normalizedProps.icon = WarningFilled;\n    normalizedProps.validation = /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--form-requirement\"),\n      id: normalizedProps.invalidId\n    }, invalidText);\n  } else if (normalizedProps.warn) {\n    normalizedProps.icon = WarningAltFilled;\n    normalizedProps.validation = /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--form-requirement\"),\n      id: normalizedProps.warnId\n    }, warnText);\n  }\n\n  return normalizedProps;\n}\n\nexport { useNormalizedInputProps };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,cAAc,MAAM,OAAO;AAClC,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,qBAAqB;AACrE,SAASC,SAAS,QAAQ,gBAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,uBAAuB,CAACC,IAAI,EAAE;EACrC,IAAIC,EAAE,GAAGD,IAAI,CAACC,EAAE;IACZC,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IACxBC,QAAQ,GAAGH,IAAI,CAACG,QAAQ;IACxBC,OAAO,GAAGJ,IAAI,CAACI,OAAO;IACtBC,WAAW,GAAGL,IAAI,CAACK,WAAW;IAC9BC,IAAI,GAAGN,IAAI,CAACM,IAAI;IAChBC,QAAQ,GAAGP,IAAI,CAACO,QAAQ;EAC5B,IAAIC,MAAM,GAAGV,SAAS,EAAE;EACxB,IAAIW,eAAe,GAAG;IACpBN,QAAQ,EAAE,CAACD,QAAQ,IAAIC,QAAQ;IAC/BC,OAAO,EAAE,CAACF,QAAQ,IAAIE,OAAO;IAC7BM,SAAS,EAAE,EAAE,CAACC,MAAM,CAACV,EAAE,EAAE,YAAY,CAAC;IACtCK,IAAI,EAAE,CAACJ,QAAQ,IAAI,CAACE,OAAO,IAAIE,IAAI;IACnCM,MAAM,EAAE,EAAE,CAACD,MAAM,CAACV,EAAE,EAAE,WAAW,CAAC;IAClCY,UAAU,EAAE,IAAI;IAChBC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,EAAE,CAACJ,MAAM,CAACV,EAAE,EAAE,cAAc;EACxC,CAAC;EAED,IAAIQ,eAAe,CAACL,OAAO,EAAE;IAC3BK,eAAe,CAACK,IAAI,GAAGlB,aAAa;IACpCa,eAAe,CAACI,UAAU,GAAG,aAAalB,cAAc,CAACqB,aAAa,CAAC,KAAK,EAAE;MAC5EC,SAAS,EAAE,EAAE,CAACN,MAAM,CAACH,MAAM,EAAE,oBAAoB,CAAC;MAClDP,EAAE,EAAEQ,eAAe,CAACC;IACtB,CAAC,EAAEL,WAAW,CAAC;EACjB,CAAC,MAAM,IAAII,eAAe,CAACH,IAAI,EAAE;IAC/BG,eAAe,CAACK,IAAI,GAAGjB,gBAAgB;IACvCY,eAAe,CAACI,UAAU,GAAG,aAAalB,cAAc,CAACqB,aAAa,CAAC,KAAK,EAAE;MAC5EC,SAAS,EAAE,EAAE,CAACN,MAAM,CAACH,MAAM,EAAE,oBAAoB,CAAC;MAClDP,EAAE,EAAEQ,eAAe,CAACG;IACtB,CAAC,EAAEL,QAAQ,CAAC;EACd;EAEA,OAAOE,eAAe;AACxB;AAEA,SAASV,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}