{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { CARBON_SIDENAV_ITEMS } from './_utils.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar SideNavItems = function SideNavItems(_ref) {\n  var customClassName = _ref.className,\n    children = _ref.children,\n    isSideNavExpanded = _ref.isSideNavExpanded;\n  var prefix = usePrefix();\n  var className = cx([\"\".concat(prefix, \"--side-nav__items\")], customClassName);\n  var childrenWithExpandedState = React__default.Children.map(children, function (child) {\n    if ( /*#__PURE__*/React__default.isValidElement(child)) {\n      var _child$type;\n\n      // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children\n      return /*#__PURE__*/React__default.cloneElement(child, _objectSpread2({}, CARBON_SIDENAV_ITEMS.includes((_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) ? {\n        isSideNavExpanded: isSideNavExpanded\n      } : {}));\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(\"ul\", {\n    className: className\n  }, childrenWithExpandedState);\n};\nSideNavItems.propTypes = {\n  /**\n   * Provide a single icon as the child to `SideNavIcon` to render in the\n   * container\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: PropTypes.bool\n};\nexport { SideNavItems as default };","map":{"version":3,"names":["objectSpread2","_objectSpread2","cx","PropTypes","React__default","CARBON_SIDENAV_ITEMS","usePrefix","SideNavItems","_ref","customClassName","className","children","isSideNavExpanded","prefix","concat","childrenWithExpandedState","Children","map","child","isValidElement","_child$type","cloneElement","includes","type","displayName","createElement","propTypes","node","isRequired","string","bool","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/UIShell/SideNavItems.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { CARBON_SIDENAV_ITEMS } from './_utils.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar SideNavItems = function SideNavItems(_ref) {\n  var customClassName = _ref.className,\n      children = _ref.children,\n      isSideNavExpanded = _ref.isSideNavExpanded;\n  var prefix = usePrefix();\n  var className = cx([\"\".concat(prefix, \"--side-nav__items\")], customClassName);\n  var childrenWithExpandedState = React__default.Children.map(children, function (child) {\n    if ( /*#__PURE__*/React__default.isValidElement(child)) {\n      var _child$type;\n\n      // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children\n      return /*#__PURE__*/React__default.cloneElement(child, _objectSpread2({}, CARBON_SIDENAV_ITEMS.includes((_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) ? {\n        isSideNavExpanded: isSideNavExpanded\n      } : {}));\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(\"ul\", {\n    className: className\n  }, childrenWithExpandedState);\n};\n\nSideNavItems.propTypes = {\n  /**\n   * Provide a single icon as the child to `SideNavIcon` to render in the\n   * container\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: PropTypes.bool\n};\n\nexport { SideNavItems as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,IAAIC,cAAc,QAAQ,6CAA6C;AAC7F,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,oBAAoB,QAAQ,aAAa;AAClD,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,IAAIC,YAAY,GAAG,SAASA,YAAY,CAACC,IAAI,EAAE;EAC7C,IAAIC,eAAe,GAAGD,IAAI,CAACE,SAAS;IAChCC,QAAQ,GAAGH,IAAI,CAACG,QAAQ;IACxBC,iBAAiB,GAAGJ,IAAI,CAACI,iBAAiB;EAC9C,IAAIC,MAAM,GAAGP,SAAS,EAAE;EACxB,IAAII,SAAS,GAAGR,EAAE,CAAC,CAAC,EAAE,CAACY,MAAM,CAACD,MAAM,EAAE,mBAAmB,CAAC,CAAC,EAAEJ,eAAe,CAAC;EAC7E,IAAIM,yBAAyB,GAAGX,cAAc,CAACY,QAAQ,CAACC,GAAG,CAACN,QAAQ,EAAE,UAAUO,KAAK,EAAE;IACrF,KAAK,aAAad,cAAc,CAACe,cAAc,CAACD,KAAK,CAAC,EAAE;MACtD,IAAIE,WAAW;;MAEf;MACA,OAAO,aAAahB,cAAc,CAACiB,YAAY,CAACH,KAAK,EAAEjB,cAAc,CAAC,CAAC,CAAC,EAAEI,oBAAoB,CAACiB,QAAQ,CAAC,CAACF,WAAW,GAAGF,KAAK,CAACK,IAAI,MAAM,IAAI,IAAIH,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACI,WAAW,CAAC,GAAG;QAC1MZ,iBAAiB,EAAEA;MACrB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACV;EACF,CAAC,CAAC;EACF,OAAO,aAAaR,cAAc,CAACqB,aAAa,CAAC,IAAI,EAAE;IACrDf,SAAS,EAAEA;EACb,CAAC,EAAEK,yBAAyB,CAAC;AAC/B,CAAC;AAEDR,YAAY,CAACmB,SAAS,GAAG;EACvB;AACF;AACA;AACA;EACEf,QAAQ,EAAER,SAAS,CAACwB,IAAI,CAACC,UAAU;EAEnC;AACF;AACA;EACElB,SAAS,EAAEP,SAAS,CAAC0B,MAAM;EAE3B;AACF;AACA;AACA;EACEjB,iBAAiB,EAAET,SAAS,CAAC2B;AAC/B,CAAC;AAED,SAASvB,YAAY,IAAIwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}