{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { slicedToArray as _slicedToArray, defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport cx from 'classnames';\nimport { Legend } from '../Text/index.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar RadioButtonGroup = /*#__PURE__*/React__default.forwardRef(function RadioButtonGroup(_ref, ref) {\n  var _classNames;\n  var children = _ref.children,\n    className = _ref.className,\n    defaultSelected = _ref.defaultSelected,\n    disabled = _ref.disabled,\n    _ref$labelPosition = _ref.labelPosition,\n    labelPosition = _ref$labelPosition === void 0 ? 'right' : _ref$labelPosition,\n    legendText = _ref.legendText,\n    name = _ref.name,\n    _ref$onChange = _ref.onChange,\n    onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n    _ref$orientation = _ref.orientation,\n    orientation = _ref$orientation === void 0 ? 'horizontal' : _ref$orientation,\n    readOnly = _ref.readOnly,\n    valueSelected = _ref.valueSelected;\n  var prefix = usePrefix();\n  var _useState = useState(valueSelected !== null && valueSelected !== void 0 ? valueSelected : defaultSelected),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n  var _useState3 = useState(valueSelected),\n    _useState4 = _slicedToArray(_useState3, 2),\n    prevValueSelected = _useState4[0],\n    setPrevValueSelected = _useState4[1];\n  /**\n   * prop + state alignment - getDerivedStateFromProps\n   * only update if selected prop changes\n   */\n\n  if (valueSelected !== prevValueSelected) {\n    setSelected(valueSelected);\n    setPrevValueSelected(valueSelected);\n  }\n  function getRadioButtons() {\n    var mappedChildren = React__default.Children.map(children, function (radioButton) {\n      var value = radioButton.props.value;\n      var newProps = {\n        name: name,\n        key: value,\n        value: value,\n        onChange: handleOnChange,\n        checked: value === selected\n      };\n      if (!selected && radioButton.props.checked) {\n        newProps.checked = true;\n      }\n      return /*#__PURE__*/React__default.cloneElement(radioButton, newProps);\n    });\n    return mappedChildren;\n  }\n  function handleOnChange(newSelection, value, evt) {\n    if (!readOnly) {\n      if (newSelection !== selected) {\n        setSelected(newSelection);\n        onChange(newSelection, name, evt);\n      }\n    }\n  }\n  var fieldsetClasses = cx(\"\".concat(prefix, \"--radio-button-group\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--radio-button-group--\").concat(orientation), orientation === 'vertical'), _defineProperty(_classNames, \"\".concat(prefix, \"--radio-button-group--label-\").concat(labelPosition), labelPosition), _defineProperty(_classNames, \"\".concat(prefix, \"--radio-button-group--readonly\"), readOnly), _classNames));\n  var wrapperClasses = cx(\"\".concat(prefix, \"--form-item\"), className);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: wrapperClasses,\n    ref: ref\n  }, /*#__PURE__*/React__default.createElement(\"fieldset\", {\n    className: fieldsetClasses,\n    disabled: disabled,\n    \"aria-readonly\": readOnly\n  }, legendText && /*#__PURE__*/React__default.createElement(Legend, {\n    className: \"\".concat(prefix, \"--label\")\n  }, legendText), getRadioButtons()));\n});\nRadioButtonGroup.propTypes = {\n  /**\n   * Provide a collection of `<RadioButton>` components to render in the group\n   */\n  children: PropTypes.node,\n  /**\n   * Provide an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the `<RadioButton>` to be selected by default\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the group is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide where label text should be placed\n   */\n  labelPosition: PropTypes.oneOf(['left', 'right']),\n  /**\n   * Provide a legend to the RadioButtonGroup input that you are\n   * exposing to the user\n   */\n  legendText: PropTypes.node,\n  /**\n   * Specify the name of the underlying `<input>` nodes\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide an optional `onChange` hook that is called whenever the value of\n   * the group changes\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide where radio buttons should be placed\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * Whether the RadioButtonGroup should be read-only\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Specify the value that is currently selected in the group\n   */\n  valueSelected: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nexport { RadioButtonGroup as default };","map":{"version":3,"names":["slicedToArray","_slicedToArray","defineProperty","_defineProperty","PropTypes","React__default","useState","cx","Legend","usePrefix","RadioButtonGroup","forwardRef","_ref","ref","_classNames","children","className","defaultSelected","disabled","_ref$labelPosition","labelPosition","legendText","name","_ref$onChange","onChange","_ref$orientation","orientation","readOnly","valueSelected","prefix","_useState","_useState2","selected","setSelected","_useState3","_useState4","prevValueSelected","setPrevValueSelected","getRadioButtons","mappedChildren","Children","map","radioButton","value","props","newProps","key","handleOnChange","checked","cloneElement","newSelection","evt","fieldsetClasses","concat","wrapperClasses","createElement","propTypes","node","string","oneOfType","number","bool","oneOf","isRequired","func","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/RadioButtonGroup/RadioButtonGroup.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { slicedToArray as _slicedToArray, defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport cx from 'classnames';\nimport { Legend } from '../Text/index.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar RadioButtonGroup = /*#__PURE__*/React__default.forwardRef(function RadioButtonGroup(_ref, ref) {\n  var _classNames;\n\n  var children = _ref.children,\n      className = _ref.className,\n      defaultSelected = _ref.defaultSelected,\n      disabled = _ref.disabled,\n      _ref$labelPosition = _ref.labelPosition,\n      labelPosition = _ref$labelPosition === void 0 ? 'right' : _ref$labelPosition,\n      legendText = _ref.legendText,\n      name = _ref.name,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? 'horizontal' : _ref$orientation,\n      readOnly = _ref.readOnly,\n      valueSelected = _ref.valueSelected;\n  var prefix = usePrefix();\n\n  var _useState = useState(valueSelected !== null && valueSelected !== void 0 ? valueSelected : defaultSelected),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(valueSelected),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevValueSelected = _useState4[0],\n      setPrevValueSelected = _useState4[1];\n  /**\n   * prop + state alignment - getDerivedStateFromProps\n   * only update if selected prop changes\n   */\n\n\n  if (valueSelected !== prevValueSelected) {\n    setSelected(valueSelected);\n    setPrevValueSelected(valueSelected);\n  }\n\n  function getRadioButtons() {\n    var mappedChildren = React__default.Children.map(children, function (radioButton) {\n      var value = radioButton.props.value;\n      var newProps = {\n        name: name,\n        key: value,\n        value: value,\n        onChange: handleOnChange,\n        checked: value === selected\n      };\n\n      if (!selected && radioButton.props.checked) {\n        newProps.checked = true;\n      }\n\n      return /*#__PURE__*/React__default.cloneElement(radioButton, newProps);\n    });\n    return mappedChildren;\n  }\n\n  function handleOnChange(newSelection, value, evt) {\n    if (!readOnly) {\n      if (newSelection !== selected) {\n        setSelected(newSelection);\n        onChange(newSelection, name, evt);\n      }\n    }\n  }\n\n  var fieldsetClasses = cx(\"\".concat(prefix, \"--radio-button-group\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--radio-button-group--\").concat(orientation), orientation === 'vertical'), _defineProperty(_classNames, \"\".concat(prefix, \"--radio-button-group--label-\").concat(labelPosition), labelPosition), _defineProperty(_classNames, \"\".concat(prefix, \"--radio-button-group--readonly\"), readOnly), _classNames));\n  var wrapperClasses = cx(\"\".concat(prefix, \"--form-item\"), className);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: wrapperClasses,\n    ref: ref\n  }, /*#__PURE__*/React__default.createElement(\"fieldset\", {\n    className: fieldsetClasses,\n    disabled: disabled,\n    \"aria-readonly\": readOnly\n  }, legendText && /*#__PURE__*/React__default.createElement(Legend, {\n    className: \"\".concat(prefix, \"--label\")\n  }, legendText), getRadioButtons()));\n});\nRadioButtonGroup.propTypes = {\n  /**\n   * Provide a collection of `<RadioButton>` components to render in the group\n   */\n  children: PropTypes.node,\n\n  /**\n   * Provide an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the `<RadioButton>` to be selected by default\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the group is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide where label text should be placed\n   */\n  labelPosition: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * Provide a legend to the RadioButtonGroup input that you are\n   * exposing to the user\n   */\n  legendText: PropTypes.node,\n\n  /**\n   * Specify the name of the underlying `<input>` nodes\n   */\n  name: PropTypes.string.isRequired,\n\n  /**\n   * Provide an optional `onChange` hook that is called whenever the value of\n   * the group changes\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide where radio buttons should be placed\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * Whether the RadioButtonGroup should be read-only\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Specify the value that is currently selected in the group\n   */\n  valueSelected: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport { RadioButtonGroup as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}