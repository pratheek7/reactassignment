{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useEffect } from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nvar InlineCheckbox = /*#__PURE__*/React__default.forwardRef(function InlineCheckbox(props, forwardRef) {\n  var ariaLabel = props.ariaLabel,\n    _props$checked = props.checked,\n    checked = _props$checked === void 0 ? false : _props$checked,\n    disabled = props.disabled,\n    id = props.id,\n    indeterminate = props.indeterminate,\n    name = props.name,\n    _props$onChange = props.onChange,\n    _onChange = _props$onChange === void 0 ? function () {} : _props$onChange,\n    onClick = props.onClick,\n    onKeyDown = props.onKeyDown,\n    title = props.title;\n  var prefix = usePrefix();\n  var inputRef = useRef(null);\n  var ref = useMergedRefs([inputRef, forwardRef]);\n  var inputProps = {\n    checked: checked,\n    className: \"\".concat(prefix, \"--checkbox\"),\n    disabled: disabled,\n    id: id,\n    name: name,\n    onClick: onClick,\n    onChange: function onChange(evt) {\n      _onChange(evt.target.checked, id, evt);\n    },\n    onKeyDown: onKeyDown,\n    ref: ref,\n    type: 'checkbox'\n  };\n  if (indeterminate) {\n    inputProps.checked = false;\n  }\n  useEffect(function () {\n    inputRef.current.indeterminate = indeterminate;\n  }, [indeterminate]);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--checkbox--inline\")\n  }, /*#__PURE__*/React__default.createElement(\"input\", inputProps), /*#__PURE__*/\n\n  /* eslint-disable jsx-a11y/label-has-for,jsx-a11y/label-has-associated-control,jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions */\n  React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: \"\".concat(prefix, \"--checkbox-label\"),\n    \"aria-label\": ariaLabel,\n    title: title,\n    onClick: function onClick(evt) {\n      evt.stopPropagation();\n    }\n  }));\n});\nInlineCheckbox.propTypes = {\n  /**\n   * Specify the label for the control\n   */\n  ariaLabel: PropTypes.string.isRequired,\n  /**\n   * Specify whether the underlying control is checked, or not\n   */\n  checked: PropTypes.bool,\n  /**\n   * Specify whether the underlying input control should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the control is in an indterminate state\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide a handler that is invoked when a user clicks on the control\n   */\n  onClick: PropTypes.func,\n  /**\n   * Provide a handler that is invoked on the key down event for the control\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Provide an optional tooltip for the InlineCheckbox\n   */\n  title: PropTypes.string\n};\nexport { InlineCheckbox as default };","map":{"version":3,"names":["PropTypes","React__default","useRef","useEffect","usePrefix","useMergedRefs","InlineCheckbox","forwardRef","props","ariaLabel","_props$checked","checked","disabled","id","indeterminate","name","_props$onChange","onChange","_onChange","onClick","onKeyDown","title","prefix","inputRef","ref","inputProps","className","concat","evt","target","type","current","createElement","htmlFor","stopPropagation","propTypes","string","isRequired","bool","func","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/InlineCheckbox/InlineCheckbox.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useEffect } from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\n\nvar InlineCheckbox = /*#__PURE__*/React__default.forwardRef(function InlineCheckbox(props, forwardRef) {\n  var ariaLabel = props.ariaLabel,\n      _props$checked = props.checked,\n      checked = _props$checked === void 0 ? false : _props$checked,\n      disabled = props.disabled,\n      id = props.id,\n      indeterminate = props.indeterminate,\n      name = props.name,\n      _props$onChange = props.onChange,\n      _onChange = _props$onChange === void 0 ? function () {} : _props$onChange,\n      onClick = props.onClick,\n      onKeyDown = props.onKeyDown,\n      title = props.title;\n\n  var prefix = usePrefix();\n  var inputRef = useRef(null);\n  var ref = useMergedRefs([inputRef, forwardRef]);\n  var inputProps = {\n    checked: checked,\n    className: \"\".concat(prefix, \"--checkbox\"),\n    disabled: disabled,\n    id: id,\n    name: name,\n    onClick: onClick,\n    onChange: function onChange(evt) {\n      _onChange(evt.target.checked, id, evt);\n    },\n    onKeyDown: onKeyDown,\n    ref: ref,\n    type: 'checkbox'\n  };\n\n  if (indeterminate) {\n    inputProps.checked = false;\n  }\n\n  useEffect(function () {\n    inputRef.current.indeterminate = indeterminate;\n  }, [indeterminate]);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--checkbox--inline\")\n  }, /*#__PURE__*/React__default.createElement(\"input\", inputProps),\n  /*#__PURE__*/\n\n  /* eslint-disable jsx-a11y/label-has-for,jsx-a11y/label-has-associated-control,jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions */\n  React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: \"\".concat(prefix, \"--checkbox-label\"),\n    \"aria-label\": ariaLabel,\n    title: title,\n    onClick: function onClick(evt) {\n      evt.stopPropagation();\n    }\n  }));\n});\nInlineCheckbox.propTypes = {\n  /**\n   * Specify the label for the control\n   */\n  ariaLabel: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the underlying control is checked, or not\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Specify whether the underlying input control should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the control is in an indterminate state\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide a handler that is invoked when a user clicks on the control\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Provide a handler that is invoked on the key down event for the control\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Provide an optional tooltip for the InlineCheckbox\n   */\n  title: PropTypes.string\n};\n\nexport { InlineCheckbox as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}