{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { Close } from '@carbon/icons-react';\nimport { Enter } from '../../../internal/keyboard/keys.js';\nimport { match } from '../../../internal/keyboard/match.js';\nimport { usePrefix } from '../../../internal/usePrefix.js';\nvar _Close, _Close2, _defaultTranslations;\nvar _excluded = [\"clearSelection\", \"selectionCount\", \"translateWithId\", \"disabled\", \"onClearSelection\"];\n/**\n * `ListBoxSelection` is used to provide controls for clearing a selection, in\n * addition to conditionally rendering a badge if the control has more than one\n * selection.\n */\n\nfunction ListBoxSelection(_ref) {\n  var _cx;\n  var clearSelection = _ref.clearSelection,\n    selectionCount = _ref.selectionCount,\n    t = _ref.translateWithId,\n    disabled = _ref.disabled,\n    onClearSelection = _ref.onClearSelection,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--list-box__selection\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tag--filter\"), selectionCount), _defineProperty(_cx, \"\".concat(prefix, \"--list-box__selection--multi\"), selectionCount), _cx));\n  var description = selectionCount ? t('clear.all') : t('clear.selection');\n  var tagClasses = cx(\"\".concat(prefix, \"--tag\"), \"\".concat(prefix, \"--tag--filter\"), \"\".concat(prefix, \"--tag--high-contrast\"), _defineProperty({}, \"\".concat(prefix, \"--tag--disabled\"), disabled));\n  function onClick(event) {\n    event.stopPropagation();\n    if (disabled) {\n      return;\n    }\n    clearSelection(event);\n    if (onClearSelection) {\n      onClearSelection(event);\n    }\n  }\n  function onKeyDown(event) {\n    event.stopPropagation();\n    if (disabled) {\n      return;\n    } // When a user hits ENTER, we'll clear the selection\n\n    if (match(event, Enter)) {\n      clearSelection(event);\n      if (onClearSelection) {\n        onClearSelection(event);\n      }\n    }\n  }\n  if (selectionCount) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: tagClasses\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tag__label\"),\n      title: selectionCount\n    }, selectionCount), /*#__PURE__*/React__default.createElement(\"button\", {\n      \"aria-label\": description,\n      className: \"\".concat(prefix, \"--tag__close-icon\"),\n      disabled: disabled,\n      onClick: onClick,\n      onKeyDown: onKeyDown,\n      tabIndex: disabled ? -1 : 0,\n      title: description,\n      type: \"button\"\n    }, _Close || (_Close = /*#__PURE__*/React__default.createElement(Close, null))));\n  }\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    \"aria-label\": description,\n    className: className,\n    disabled: disabled,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    tabIndex: disabled ? -1 : 0,\n    title: description,\n    type: \"button\"\n  }), _Close2 || (_Close2 = /*#__PURE__*/React__default.createElement(Close, null)));\n}\nvar translationIds = {\n  'clear.all': 'clear.all',\n  'clear.selection': 'clear.selection'\n};\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['clear.all'], 'Clear all selected items'), _defineProperty(_defaultTranslations, translationIds['clear.selection'], 'Clear selected item'), _defaultTranslations);\nListBoxSelection.propTypes = {\n  /**\n   * Specify a function to be invoked when a user interacts with the clear\n   * selection element.\n   */\n  clearSelection: PropTypes.func.isRequired,\n  /**\n   * Specify whether or not the clear selection element should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify an optional `onClearSelection` handler that is called when the underlying\n   * element is cleared\n   */\n  onClearSelection: PropTypes.func,\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * clear selection element is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify an optional `onKeyDown` handler that is called when the underlying\n   * clear selection element fires a keydown event\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Specify an optional `selectionCount` value that will be used to determine\n   * whether the selection should display a badge or a single clear icon.\n   */\n  selectionCount: PropTypes.number,\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxSelection.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\nexport { ListBoxSelection as default, translationIds };","map":{"version":3,"names":["defineProperty","_defineProperty","objectWithoutProperties","_objectWithoutProperties","extends","_extends","cx","React__default","PropTypes","Close","Enter","match","usePrefix","_Close","_Close2","_defaultTranslations","_excluded","ListBoxSelection","_ref","_cx","clearSelection","selectionCount","t","translateWithId","disabled","onClearSelection","rest","prefix","className","concat","description","tagClasses","onClick","event","stopPropagation","onKeyDown","createElement","title","tabIndex","type","translationIds","defaultTranslations","propTypes","func","isRequired","bool","number","defaultProps","id","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/ListBox/next/ListBoxSelection.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { Close } from '@carbon/icons-react';\nimport { Enter } from '../../../internal/keyboard/keys.js';\nimport { match } from '../../../internal/keyboard/match.js';\nimport { usePrefix } from '../../../internal/usePrefix.js';\n\nvar _Close, _Close2, _defaultTranslations;\n\nvar _excluded = [\"clearSelection\", \"selectionCount\", \"translateWithId\", \"disabled\", \"onClearSelection\"];\n/**\n * `ListBoxSelection` is used to provide controls for clearing a selection, in\n * addition to conditionally rendering a badge if the control has more than one\n * selection.\n */\n\nfunction ListBoxSelection(_ref) {\n  var _cx;\n\n  var clearSelection = _ref.clearSelection,\n      selectionCount = _ref.selectionCount,\n      t = _ref.translateWithId,\n      disabled = _ref.disabled,\n      onClearSelection = _ref.onClearSelection,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--list-box__selection\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tag--filter\"), selectionCount), _defineProperty(_cx, \"\".concat(prefix, \"--list-box__selection--multi\"), selectionCount), _cx));\n  var description = selectionCount ? t('clear.all') : t('clear.selection');\n  var tagClasses = cx(\"\".concat(prefix, \"--tag\"), \"\".concat(prefix, \"--tag--filter\"), \"\".concat(prefix, \"--tag--high-contrast\"), _defineProperty({}, \"\".concat(prefix, \"--tag--disabled\"), disabled));\n\n  function onClick(event) {\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    }\n\n    clearSelection(event);\n\n    if (onClearSelection) {\n      onClearSelection(event);\n    }\n  }\n\n  function onKeyDown(event) {\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    } // When a user hits ENTER, we'll clear the selection\n\n\n    if (match(event, Enter)) {\n      clearSelection(event);\n\n      if (onClearSelection) {\n        onClearSelection(event);\n      }\n    }\n  }\n\n  if (selectionCount) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: tagClasses\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tag__label\"),\n      title: selectionCount\n    }, selectionCount), /*#__PURE__*/React__default.createElement(\"button\", {\n      \"aria-label\": description,\n      className: \"\".concat(prefix, \"--tag__close-icon\"),\n      disabled: disabled,\n      onClick: onClick,\n      onKeyDown: onKeyDown,\n      tabIndex: disabled ? -1 : 0,\n      title: description,\n      type: \"button\"\n    }, _Close || (_Close = /*#__PURE__*/React__default.createElement(Close, null))));\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    \"aria-label\": description,\n    className: className,\n    disabled: disabled,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    tabIndex: disabled ? -1 : 0,\n    title: description,\n    type: \"button\"\n  }), _Close2 || (_Close2 = /*#__PURE__*/React__default.createElement(Close, null)));\n}\n\nvar translationIds = {\n  'clear.all': 'clear.all',\n  'clear.selection': 'clear.selection'\n};\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['clear.all'], 'Clear all selected items'), _defineProperty(_defaultTranslations, translationIds['clear.selection'], 'Clear selected item'), _defaultTranslations);\nListBoxSelection.propTypes = {\n  /**\n   * Specify a function to be invoked when a user interacts with the clear\n   * selection element.\n   */\n  clearSelection: PropTypes.func.isRequired,\n\n  /**\n   * Specify whether or not the clear selection element should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify an optional `onClearSelection` handler that is called when the underlying\n   * element is cleared\n   */\n  onClearSelection: PropTypes.func,\n\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * clear selection element is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify an optional `onKeyDown` handler that is called when the underlying\n   * clear selection element fires a keydown event\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Specify an optional `selectionCount` value that will be used to determine\n   * whether the selection should display a badge or a single clear icon.\n   */\n  selectionCount: PropTypes.number,\n\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxSelection.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\n\nexport { ListBoxSelection as default, translationIds };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}