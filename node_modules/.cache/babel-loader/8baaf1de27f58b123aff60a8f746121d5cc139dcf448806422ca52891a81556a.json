{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, extends as _extends, defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useGridSettings, GridSettings } from './GridContext.js';\nvar _excluded = [\"as\", \"children\", \"className\", \"condensed\", \"fullWidth\", \"narrow\"],\n  _excluded2 = [\"as\", \"className\", \"children\", \"mode\"];\nfunction CSSGrid(_ref) {\n  var _cx;\n  var _ref$as = _ref.as,\n    BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n    children = _ref.children,\n    customClassName = _ref.className,\n    _ref$condensed = _ref.condensed,\n    condensed = _ref$condensed === void 0 ? false : _ref$condensed,\n    _ref$fullWidth = _ref.fullWidth,\n    fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n    _ref$narrow = _ref.narrow,\n    narrow = _ref$narrow === void 0 ? false : _ref$narrow,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var _useGridSettings = useGridSettings(),\n    subgrid = _useGridSettings.subgrid;\n  var mode = 'wide';\n  if (narrow) {\n    mode = 'narrow';\n  } else if (condensed) {\n    mode = 'condensed';\n  }\n  if (subgrid) {\n    return /*#__PURE__*/React__default.createElement(GridSettings, {\n      mode: \"css-grid\",\n      subgrid: true\n    }, /*#__PURE__*/React__default.createElement(Subgrid, _extends({\n      as: BaseComponent,\n      className: customClassName,\n      mode: mode\n    }, rest), children));\n  }\n  var className = cx(customClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--css-grid\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--condensed\"), mode === 'condensed'), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--narrow\"), mode === 'narrow'), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--full-width\"), fullWidth), _cx));\n  return /*#__PURE__*/React__default.createElement(GridSettings, {\n    mode: \"css-grid\",\n    subgrid: true\n  }, /*#__PURE__*/React__default.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children));\n}\nCSSGrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Pass in content that will be rendered within the `Grid`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify a custom className to be applied to the `Grid`\n   */\n  className: PropTypes.string,\n  /**\n   * Collapse the gutter to 1px. Useful for fluid layouts.\n   * Rows have 1px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n  /**\n   * Remove the default max width that the grid has set\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Container hangs 16px into the gutter. Useful for\n   * typographic alignment with and without containers.\n   */\n  narrow: PropTypes.bool\n};\nfunction Subgrid(_ref2) {\n  var _cx2;\n  var _ref2$as = _ref2.as,\n    BaseComponent = _ref2$as === void 0 ? 'div' : _ref2$as,\n    customClassName = _ref2.className,\n    children = _ref2.children,\n    mode = _ref2.mode,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  var prefix = usePrefix();\n  var className = cx(customClassName, (_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--condensed\"), mode === 'condensed'), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--narrow\"), mode === 'narrow'), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--wide\"), mode === 'wide'), _cx2));\n  return /*#__PURE__*/React__default.createElement(BaseComponent, _extends({}, rest, {\n    className: className\n  }), children);\n}\nSubgrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Pass in content that will be rendered within the `Subgrid`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify a custom className to be applied to the `Subgrid`\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the grid mode for the subgrid\n   */\n  mode: PropTypes.oneOf(['wide', 'narrow', 'condensed'])\n};\nexport { CSSGrid };","map":{"version":3,"names":["objectWithoutProperties","_objectWithoutProperties","extends","_extends","defineProperty","_defineProperty","cx","PropTypes","React__default","usePrefix","useGridSettings","GridSettings","_excluded","_excluded2","CSSGrid","_ref","_cx","_ref$as","as","BaseComponent","children","customClassName","className","_ref$condensed","condensed","_ref$fullWidth","fullWidth","_ref$narrow","narrow","rest","prefix","_useGridSettings","subgrid","mode","createElement","Subgrid","concat","propTypes","oneOfType","string","elementType","node","bool","_ref2","_cx2","_ref2$as","oneOf"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/Grid/CSSGrid.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, extends as _extends, defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useGridSettings, GridSettings } from './GridContext.js';\n\nvar _excluded = [\"as\", \"children\", \"className\", \"condensed\", \"fullWidth\", \"narrow\"],\n    _excluded2 = [\"as\", \"className\", \"children\", \"mode\"];\n\nfunction CSSGrid(_ref) {\n  var _cx;\n\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      children = _ref.children,\n      customClassName = _ref.className,\n      _ref$condensed = _ref.condensed,\n      condensed = _ref$condensed === void 0 ? false : _ref$condensed,\n      _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n      _ref$narrow = _ref.narrow,\n      narrow = _ref$narrow === void 0 ? false : _ref$narrow,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useGridSettings = useGridSettings(),\n      subgrid = _useGridSettings.subgrid;\n\n  var mode = 'wide';\n\n  if (narrow) {\n    mode = 'narrow';\n  } else if (condensed) {\n    mode = 'condensed';\n  }\n\n  if (subgrid) {\n    return /*#__PURE__*/React__default.createElement(GridSettings, {\n      mode: \"css-grid\",\n      subgrid: true\n    }, /*#__PURE__*/React__default.createElement(Subgrid, _extends({\n      as: BaseComponent,\n      className: customClassName,\n      mode: mode\n    }, rest), children));\n  }\n\n  var className = cx(customClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--css-grid\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--condensed\"), mode === 'condensed'), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--narrow\"), mode === 'narrow'), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--full-width\"), fullWidth), _cx));\n  return /*#__PURE__*/React__default.createElement(GridSettings, {\n    mode: \"css-grid\",\n    subgrid: true\n  }, /*#__PURE__*/React__default.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children));\n}\n\nCSSGrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `Grid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `Grid`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Collapse the gutter to 1px. Useful for fluid layouts.\n   * Rows have 1px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n\n  /**\n   * Remove the default max width that the grid has set\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Container hangs 16px into the gutter. Useful for\n   * typographic alignment with and without containers.\n   */\n  narrow: PropTypes.bool\n};\n\nfunction Subgrid(_ref2) {\n  var _cx2;\n\n  var _ref2$as = _ref2.as,\n      BaseComponent = _ref2$as === void 0 ? 'div' : _ref2$as,\n      customClassName = _ref2.className,\n      children = _ref2.children,\n      mode = _ref2.mode,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var prefix = usePrefix();\n  var className = cx(customClassName, (_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--condensed\"), mode === 'condensed'), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--narrow\"), mode === 'narrow'), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--wide\"), mode === 'wide'), _cx2));\n  return /*#__PURE__*/React__default.createElement(BaseComponent, _extends({}, rest, {\n    className: className\n  }), children);\n}\n\nSubgrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `Subgrid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `Subgrid`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the grid mode for the subgrid\n   */\n  mode: PropTypes.oneOf(['wide', 'narrow', 'condensed'])\n};\n\nexport { CSSGrid };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}