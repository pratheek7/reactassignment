{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\nerf\\\\src\\\\components\\\\pages\\\\Assemble.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import '../../App.scss';\n\n// export default function Assemble() {\n//   return <h1 className='products'>PRODUCTS</h1>;\n// }\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { useDrop } from \"react-dnd\";\nimport { Grid, Column, Button } from '@carbon/react';\nimport Picture from \"../Picture\";\nimport { updateBoard } from '../../actions';\nimport \"../../App.scss\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Assemble() {\n  _s();\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const selectedComponentsIndex = useSelector(state => state.components.data);\n  const allComponents = useSelector(state => state.components.completeSet);\n  const selectedComponents = allComponents.filter(component => selectedComponentsIndex.includes(component.id));\n  const [board, setBoard] = useState([]);\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"image\",\n    drop: item => addImageToBoard(item.id),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n  const addImageToBoard = id => {\n    const pictureList = selectedComponents.filter(picture => id === picture.id);\n    setBoard(board => [...board, pictureList[0]]);\n  };\n  const complete = () => {\n    console.log(board);\n    dispatch(updateBoard(board));\n    history.push(\"/final\");\n    // this.props.history.push('/final')\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Pictures\",\n          children: selectedComponents.map(picture => {\n            return /*#__PURE__*/_jsxDEV(Picture, {\n              url: picture.img,\n              id: picture.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Board\",\n          ref: drop,\n          children: board.map(picture => {\n            return /*#__PURE__*/_jsxDEV(Picture, {\n              url: picture.img,\n              id: picture.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, 2, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"components-btn\",\n      onClick: () => complete(),\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Assemble, \"FB1yahdmlPuGcnNvP67hFyjp2P4=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useDrop];\n});\n_c = Assemble;\nexport default Assemble;\nvar _c;\n$RefreshReg$(_c, \"Assemble\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","useHistory","useDrop","Grid","Column","Button","Picture","updateBoard","Assemble","dispatch","history","selectedComponentsIndex","state","components","data","allComponents","completeSet","selectedComponents","filter","component","includes","id","board","setBoard","isOver","drop","accept","item","addImageToBoard","collect","monitor","pictureList","picture","complete","console","log","push","map","img"],"sources":["C:/Users/Administrator/Desktop/nerf/src/components/pages/Assemble.js"],"sourcesContent":["// import React from 'react';\n// import '../../App.scss';\n\n// export default function Assemble() {\n//   return <h1 className='products'>PRODUCTS</h1>;\n// }\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { useDrop } from \"react-dnd\";\nimport {\n  Grid,\n  Column,\n  Button\n} from '@carbon/react';\nimport Picture from \"../Picture\";\nimport { updateBoard } from '../../actions';\nimport \"../../App.scss\";\n\nfunction Assemble() {\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const selectedComponentsIndex = useSelector((state) => state.components.data);\n  const allComponents = useSelector((state) => state.components.completeSet);\n  const selectedComponents = allComponents.filter((component) => selectedComponentsIndex.includes(component.id));\n  const [board, setBoard] = useState([]);\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: \"image\",\n    drop: (item) => addImageToBoard(item.id),\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }));\n\n  const addImageToBoard = (id) => {\n    const pictureList = selectedComponents.filter((picture) => id === picture.id);\n    setBoard((board) => [...board, pictureList[0]]);\n  };\n\n  const complete = () => {\n    console.log(board);\n    dispatch(updateBoard(board));\n    history.push(\"/final\"); \n    // this.props.history.push('/final')\n  }\n\n  return (\n    <>\n      <Grid\n        fullWidth={true}\n      >\n        <Column\n          key={1}\n          lg={3}\n        >\n          <div className=\"Pictures\">\n            {selectedComponents.map((picture) => {\n              return <Picture url={picture.img} id={picture.id} />;\n            })}\n          </div>\n        </Column>\n        <Column\n          key={2}\n        >\n          <div className=\"Board\" ref={drop}>\n            {board.map((picture) => {\n              return <Picture url={picture.img} id={picture.id} />;\n            })}\n          </div>\n        </Column>\n      </Grid>\n      <Button className='components-btn' onClick={() => complete()}>Complete</Button>\n    </>\n  );\n}\n\nexport default Assemble;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}