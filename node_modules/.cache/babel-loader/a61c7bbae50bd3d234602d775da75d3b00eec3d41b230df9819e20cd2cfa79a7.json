{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar _excluded = [\"paragraph\", \"lineCount\", \"width\", \"heading\", \"className\"];\nvar randoms = [0.973051493507435, 0.15334737213558558, 0.5671034553053769];\nfunction getRandomInt(min, max, n) {\n  return Math.floor(randoms[n % 3] * (max - min + 1)) + min;\n}\nvar SkeletonText = function SkeletonText(_ref) {\n  var _classNames;\n  var paragraph = _ref.paragraph,\n    lineCount = _ref.lineCount,\n    width = _ref.width,\n    heading = _ref.heading,\n    className = _ref.className,\n    other = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var skeletonTextClasses = cx((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__text\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__heading\"), heading), _defineProperty(_classNames, className, className), _classNames));\n  var widthNum = parseInt(width, 10);\n  var widthPx = width.includes('px');\n  var widthPercent = width.includes('%');\n  if (widthPercent && paragraph) {\n    var lines = [];\n    for (var i = 0; i < lineCount; i++) {\n      var randomWidth = getRandomInt(0, 75, i) + 'px';\n      lines.push( /*#__PURE__*/React__default.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: \"calc(\".concat(width, \" - \").concat(randomWidth, \")\")\n        },\n        key: i\n      }, other)));\n    }\n    return /*#__PURE__*/React__default.createElement(\"div\", null, lines);\n  }\n  if (widthPx && paragraph) {\n    var _lines = [];\n    for (var j = 0; j < lineCount; j++) {\n      var _randomWidth = getRandomInt(widthNum - 75, widthNum, j) + 'px';\n      _lines.push( /*#__PURE__*/React__default.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: _randomWidth\n        },\n        key: j\n      }, other)));\n    }\n    return /*#__PURE__*/React__default.createElement(\"div\", null, _lines);\n  }\n  return /*#__PURE__*/React__default.createElement(\"p\", _extends({\n    className: skeletonTextClasses,\n    style: {\n      width: width\n    }\n  }, other));\n};\nSkeletonText.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * generates skeleton text at a larger size\n   */\n  heading: PropTypes.bool,\n  /**\n   * the number of lines shown if paragraph is true\n   */\n  lineCount: PropTypes.number,\n  /**\n   * will generate multiple lines of text\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  width: PropTypes.string\n};\nSkeletonText.defaultProps = {\n  paragraph: false,\n  width: '100%',\n  heading: false,\n  lineCount: 3\n};\nexport { SkeletonText as default };","map":{"version":3,"names":["objectWithoutProperties","_objectWithoutProperties","defineProperty","_defineProperty","extends","_extends","PropTypes","React__default","cx","usePrefix","_excluded","randoms","getRandomInt","min","max","n","Math","floor","SkeletonText","_ref","_classNames","paragraph","lineCount","width","heading","className","other","prefix","skeletonTextClasses","concat","widthNum","parseInt","widthPx","includes","widthPercent","lines","i","randomWidth","push","createElement","style","key","_lines","j","_randomWidth","propTypes","string","bool","number","defaultProps","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/SkeletonText/SkeletonText.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar _excluded = [\"paragraph\", \"lineCount\", \"width\", \"heading\", \"className\"];\nvar randoms = [0.973051493507435, 0.15334737213558558, 0.5671034553053769];\n\nfunction getRandomInt(min, max, n) {\n  return Math.floor(randoms[n % 3] * (max - min + 1)) + min;\n}\n\nvar SkeletonText = function SkeletonText(_ref) {\n  var _classNames;\n\n  var paragraph = _ref.paragraph,\n      lineCount = _ref.lineCount,\n      width = _ref.width,\n      heading = _ref.heading,\n      className = _ref.className,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var skeletonTextClasses = cx((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__text\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__heading\"), heading), _defineProperty(_classNames, className, className), _classNames));\n  var widthNum = parseInt(width, 10);\n  var widthPx = width.includes('px');\n  var widthPercent = width.includes('%');\n\n  if (widthPercent && paragraph) {\n    var lines = [];\n\n    for (var i = 0; i < lineCount; i++) {\n      var randomWidth = getRandomInt(0, 75, i) + 'px';\n      lines.push( /*#__PURE__*/React__default.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: \"calc(\".concat(width, \" - \").concat(randomWidth, \")\")\n        },\n        key: i\n      }, other)));\n    }\n\n    return /*#__PURE__*/React__default.createElement(\"div\", null, lines);\n  }\n\n  if (widthPx && paragraph) {\n    var _lines = [];\n\n    for (var j = 0; j < lineCount; j++) {\n      var _randomWidth = getRandomInt(widthNum - 75, widthNum, j) + 'px';\n\n      _lines.push( /*#__PURE__*/React__default.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: _randomWidth\n        },\n        key: j\n      }, other)));\n    }\n\n    return /*#__PURE__*/React__default.createElement(\"div\", null, _lines);\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"p\", _extends({\n    className: skeletonTextClasses,\n    style: {\n      width: width\n    }\n  }, other));\n};\n\nSkeletonText.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * generates skeleton text at a larger size\n   */\n  heading: PropTypes.bool,\n\n  /**\n   * the number of lines shown if paragraph is true\n   */\n  lineCount: PropTypes.number,\n\n  /**\n   * will generate multiple lines of text\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  width: PropTypes.string\n};\nSkeletonText.defaultProps = {\n  paragraph: false,\n  width: '100%',\n  heading: false,\n  lineCount: 3\n};\n\nexport { SkeletonText as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}