{"ast":null,"code":"import { useContext } from 'react';\nimport { invariant } from '@react-dnd/invariant';\nimport { DndContext } from '../core/index.mjs';\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager() {\n  const {\n    dragDropManager\n  } = useContext(DndContext);\n  invariant(dragDropManager != null, 'Expected drag drop context');\n  return dragDropManager;\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,UAAU,QAAQ,mBAAkB;AAE7C;;;AAGA,OAAO,SAASC,kBAAkB,GAAoB;EACrD,MAAM;IAAEC;EAAe,CAAE,GAAGJ,UAAU,CAACE,UAAU,CAAC;EAClDD,SAAS,CAACG,eAAe,IAAI,IAAI,EAAE,4BAA4B,CAAC;EAChE,OAAOA,eAAe","names":["useContext","invariant","DndContext","useDragDropManager","dragDropManager"],"sources":["C:\\Users\\Administrator\\Desktop\\nerf\\node_modules\\react-dnd\\src\\hooks\\useDragDropManager.ts"],"sourcesContent":["import { useContext } from 'react'\nimport type { DragDropManager } from 'dnd-core'\nimport { invariant } from '@react-dnd/invariant'\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}