{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { AddFilled } from '@carbon/icons-react';\nimport '../Button/Button.Skeleton.js';\nimport Button from '../Button/Button.js';\nvar TableBatchAction = function TableBatchAction(props) {\n  return /*#__PURE__*/React__default.createElement(Button, props);\n};\nTableBatchAction.propTypes = {\n  /**\n   * Specify if the button is an icon-only button\n   */\n  hasIconOnly: PropTypes.bool,\n  /**\n   * If specifying the `renderIcon` prop, provide a description for that icon that can\n   * be read by screen readers\n   */\n  iconDescription: function iconDescription(props) {\n    if (props.renderIcon && !props.children && !props.iconDescription) {\n      return new Error('renderIcon property specified without also providing an iconDescription property.');\n    }\n    return undefined;\n  },\n  /**\n   * Optional function to render your own icon in the underlying button\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nTableBatchAction.defaultProps = {\n  renderIcon: AddFilled,\n  iconDescription: 'Add'\n};\nexport { TableBatchAction as default };","map":{"version":3,"names":["PropTypes","React__default","AddFilled","Button","TableBatchAction","props","createElement","propTypes","hasIconOnly","bool","iconDescription","renderIcon","children","Error","undefined","oneOfType","func","object","defaultProps","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/DataTable/TableBatchAction.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { AddFilled } from '@carbon/icons-react';\nimport '../Button/Button.Skeleton.js';\nimport Button from '../Button/Button.js';\n\nvar TableBatchAction = function TableBatchAction(props) {\n  return /*#__PURE__*/React__default.createElement(Button, props);\n};\n\nTableBatchAction.propTypes = {\n  /**\n   * Specify if the button is an icon-only button\n   */\n  hasIconOnly: PropTypes.bool,\n\n  /**\n   * If specifying the `renderIcon` prop, provide a description for that icon that can\n   * be read by screen readers\n   */\n  iconDescription: function iconDescription(props) {\n    if (props.renderIcon && !props.children && !props.iconDescription) {\n      return new Error('renderIcon property specified without also providing an iconDescription property.');\n    }\n\n    return undefined;\n  },\n\n  /**\n   * Optional function to render your own icon in the underlying button\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nTableBatchAction.defaultProps = {\n  renderIcon: AddFilled,\n  iconDescription: 'Add'\n};\n\nexport { TableBatchAction as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,OAAO,8BAA8B;AACrC,OAAOC,MAAM,MAAM,qBAAqB;AAExC,IAAIC,gBAAgB,GAAG,SAASA,gBAAgB,CAACC,KAAK,EAAE;EACtD,OAAO,aAAaJ,cAAc,CAACK,aAAa,CAACH,MAAM,EAAEE,KAAK,CAAC;AACjE,CAAC;AAEDD,gBAAgB,CAACG,SAAS,GAAG;EAC3B;AACF;AACA;EACEC,WAAW,EAAER,SAAS,CAACS,IAAI;EAE3B;AACF;AACA;AACA;EACEC,eAAe,EAAE,SAASA,eAAe,CAACL,KAAK,EAAE;IAC/C,IAAIA,KAAK,CAACM,UAAU,IAAI,CAACN,KAAK,CAACO,QAAQ,IAAI,CAACP,KAAK,CAACK,eAAe,EAAE;MACjE,OAAO,IAAIG,KAAK,CAAC,mFAAmF,CAAC;IACvG;IAEA,OAAOC,SAAS;EAClB,CAAC;EAED;AACF;AACA;EACEH,UAAU,EAAEX,SAAS,CAACe,SAAS,CAAC,CAACf,SAAS,CAACgB,IAAI,EAAEhB,SAAS,CAACiB,MAAM,CAAC;AACpE,CAAC;AACDb,gBAAgB,CAACc,YAAY,GAAG;EAC9BP,UAAU,EAAET,SAAS;EACrBQ,eAAe,EAAE;AACnB,CAAC;AAED,SAASN,gBAAgB,IAAIe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}