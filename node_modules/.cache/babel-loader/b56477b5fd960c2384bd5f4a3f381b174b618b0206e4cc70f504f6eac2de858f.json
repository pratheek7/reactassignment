{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport InlineCheckbox from '../InlineCheckbox/InlineCheckbox.js';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar TableSelectAll = function TableSelectAll(_ref) {\n  var ariaLabel = _ref.ariaLabel,\n    checked = _ref.checked,\n    id = _ref.id,\n    indeterminate = _ref.indeterminate,\n    name = _ref.name,\n    onSelect = _ref.onSelect,\n    disabled = _ref.disabled,\n    className = _ref.className;\n  var prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"th\", {\n    scope: \"col\",\n    className: cx(\"\".concat(prefix, \"--table-column-checkbox\"), className)\n  }, /*#__PURE__*/React__default.createElement(InlineCheckbox, {\n    ariaLabel: ariaLabel,\n    checked: checked,\n    id: id,\n    indeterminate: indeterminate,\n    name: name,\n    onClick: onSelect,\n    disabled: disabled\n  }));\n};\nTableSelectAll.propTypes = {\n  /**\n   * Specify the aria label for the underlying input control\n   */\n  ariaLabel: PropTypes.string.isRequired,\n  /**\n   * Specify whether all items are selected, or not\n   */\n  checked: PropTypes.bool.isRequired,\n  /**\n   * The CSS class names of the cell that wraps the underlying input control\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the checkbox input should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the selection only has a subset of all items\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide a handler to listen to when a user initiates a selection request\n   */\n  onSelect: PropTypes.func.isRequired\n};\nTableSelectAll.defaultProps = {\n  ariaLabel: 'Select all rows in the table'\n};\nexport { TableSelectAll as default };","map":{"version":3,"names":["PropTypes","React__default","InlineCheckbox","cx","usePrefix","TableSelectAll","_ref","ariaLabel","checked","id","indeterminate","name","onSelect","disabled","className","prefix","createElement","scope","concat","onClick","propTypes","string","isRequired","bool","func","defaultProps","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/DataTable/TableSelectAll.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport InlineCheckbox from '../InlineCheckbox/InlineCheckbox.js';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar TableSelectAll = function TableSelectAll(_ref) {\n  var ariaLabel = _ref.ariaLabel,\n      checked = _ref.checked,\n      id = _ref.id,\n      indeterminate = _ref.indeterminate,\n      name = _ref.name,\n      onSelect = _ref.onSelect,\n      disabled = _ref.disabled,\n      className = _ref.className;\n  var prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"th\", {\n    scope: \"col\",\n    className: cx(\"\".concat(prefix, \"--table-column-checkbox\"), className)\n  }, /*#__PURE__*/React__default.createElement(InlineCheckbox, {\n    ariaLabel: ariaLabel,\n    checked: checked,\n    id: id,\n    indeterminate: indeterminate,\n    name: name,\n    onClick: onSelect,\n    disabled: disabled\n  }));\n};\n\nTableSelectAll.propTypes = {\n  /**\n   * Specify the aria label for the underlying input control\n   */\n  ariaLabel: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether all items are selected, or not\n   */\n  checked: PropTypes.bool.isRequired,\n\n  /**\n   * The CSS class names of the cell that wraps the underlying input control\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the checkbox input should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the selection only has a subset of all items\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n\n  /**\n   * Provide a handler to listen to when a user initiates a selection request\n   */\n  onSelect: PropTypes.func.isRequired\n};\nTableSelectAll.defaultProps = {\n  ariaLabel: 'Select all rows in the table'\n};\n\nexport { TableSelectAll as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,cAAc,MAAM,qCAAqC;AAChE,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,IAAIC,cAAc,GAAG,SAASA,cAAc,CAACC,IAAI,EAAE;EACjD,IAAIC,SAAS,GAAGD,IAAI,CAACC,SAAS;IAC1BC,OAAO,GAAGF,IAAI,CAACE,OAAO;IACtBC,EAAE,GAAGH,IAAI,CAACG,EAAE;IACZC,aAAa,GAAGJ,IAAI,CAACI,aAAa;IAClCC,IAAI,GAAGL,IAAI,CAACK,IAAI;IAChBC,QAAQ,GAAGN,IAAI,CAACM,QAAQ;IACxBC,QAAQ,GAAGP,IAAI,CAACO,QAAQ;IACxBC,SAAS,GAAGR,IAAI,CAACQ,SAAS;EAC9B,IAAIC,MAAM,GAAGX,SAAS,EAAE;EACxB,OAAO,aAAaH,cAAc,CAACe,aAAa,CAAC,IAAI,EAAE;IACrDC,KAAK,EAAE,KAAK;IACZH,SAAS,EAAEX,EAAE,CAAC,EAAE,CAACe,MAAM,CAACH,MAAM,EAAE,yBAAyB,CAAC,EAAED,SAAS;EACvE,CAAC,EAAE,aAAab,cAAc,CAACe,aAAa,CAACd,cAAc,EAAE;IAC3DK,SAAS,EAAEA,SAAS;IACpBC,OAAO,EAAEA,OAAO;IAChBC,EAAE,EAAEA,EAAE;IACNC,aAAa,EAAEA,aAAa;IAC5BC,IAAI,EAAEA,IAAI;IACVQ,OAAO,EAAEP,QAAQ;IACjBC,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAAC;AACL,CAAC;AAEDR,cAAc,CAACe,SAAS,GAAG;EACzB;AACF;AACA;EACEb,SAAS,EAAEP,SAAS,CAACqB,MAAM,CAACC,UAAU;EAEtC;AACF;AACA;EACEd,OAAO,EAAER,SAAS,CAACuB,IAAI,CAACD,UAAU;EAElC;AACF;AACA;EACER,SAAS,EAAEd,SAAS,CAACqB,MAAM;EAE3B;AACF;AACA;EACER,QAAQ,EAAEb,SAAS,CAACuB,IAAI;EAExB;AACF;AACA;EACEd,EAAE,EAAET,SAAS,CAACqB,MAAM,CAACC,UAAU;EAE/B;AACF;AACA;EACEZ,aAAa,EAAEV,SAAS,CAACuB,IAAI;EAE7B;AACF;AACA;EACEZ,IAAI,EAAEX,SAAS,CAACqB,MAAM,CAACC,UAAU;EAEjC;AACF;AACA;EACEV,QAAQ,EAAEZ,SAAS,CAACwB,IAAI,CAACF;AAC3B,CAAC;AACDjB,cAAc,CAACoB,YAAY,GAAG;EAC5BlB,SAAS,EAAE;AACb,CAAC;AAED,SAASF,cAAc,IAAIqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}