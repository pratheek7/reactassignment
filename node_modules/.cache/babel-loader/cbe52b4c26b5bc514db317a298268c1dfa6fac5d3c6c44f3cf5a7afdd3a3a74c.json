{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport '../Button/Button.Skeleton.js';\nimport Button from '../Button/Button.js';\nimport TableActionList from './TableActionList.js';\nimport '../Text/index.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { Text } from '../Text/Text.js';\nvar _excluded = [\"className\", \"children\", \"shouldShowBatchActions\", \"totalSelected\", \"onCancel\", \"translateWithId\"];\nvar translationKeys = {\n  'carbon.table.batch.cancel': 'Cancel',\n  'carbon.table.batch.items.selected': 'items selected',\n  'carbon.table.batch.item.selected': 'item selected'\n};\nvar translateWithId = function translateWithId(id, state) {\n  if (id === 'carbon.table.batch.cancel') {\n    return translationKeys[id];\n  }\n  return \"\".concat(state.totalSelected, \" \").concat(translationKeys[id]);\n};\nvar TableBatchActions = function TableBatchActions(_ref) {\n  var _cx;\n  var className = _ref.className,\n    children = _ref.children,\n    shouldShowBatchActions = _ref.shouldShowBatchActions,\n    totalSelected = _ref.totalSelected,\n    onCancel = _ref.onCancel,\n    t = _ref.translateWithId,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React__default.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isScrolling = _React$useState2[0],\n    setIsScrolling = _React$useState2[1];\n  var prefix = usePrefix();\n  var batchActionsClasses = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--batch-actions\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--batch-actions--active\"), shouldShowBatchActions), _cx), className);\n  var batchSummaryClasses = cx(\"\".concat(prefix, \"--batch-summary\"), _defineProperty({}, \"\".concat(prefix, \"--batch-summary__scroll\"), isScrolling));\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    onScroll: function onScroll() {\n      setIsScrolling(!isScrolling);\n    },\n    \"aria-hidden\": !shouldShowBatchActions,\n    className: batchActionsClasses\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: batchSummaryClasses\n  }, /*#__PURE__*/React__default.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--batch-summary__para\")\n  }, /*#__PURE__*/React__default.createElement(Text, {\n    as: \"span\"\n  }, totalSelected > 1 || totalSelected === 0 ? t('carbon.table.batch.items.selected', {\n    totalSelected: totalSelected\n  }) : t('carbon.table.batch.item.selected', {\n    totalSelected: totalSelected\n  })))), /*#__PURE__*/React__default.createElement(TableActionList, null, children, /*#__PURE__*/React__default.createElement(Button, {\n    className: \"\".concat(prefix, \"--batch-summary__cancel\"),\n    tabIndex: shouldShowBatchActions ? 0 : -1,\n    onClick: onCancel\n  }, t('carbon.table.batch.cancel'))));\n};\nTableBatchActions.translationKeys = Object.keys(translationKeys);\nTableBatchActions.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Hook required to listen for when the user initiates a cancel request\n   * through this component\n   */\n  onCancel: PropTypes.func.isRequired,\n  /**\n   * Boolean specifier for whether or not the batch action bar should be\n   * displayed\n   */\n  shouldShowBatchActions: PropTypes.bool,\n  /**\n   * Numeric representation of the total number of items selected in a table.\n   * This number is used to derive the selection message\n   */\n  totalSelected: PropTypes.number.isRequired,\n  /**\n   * Supply a method to translate internal strings with your i18n tool of\n   * choice. Translation keys are available on the `translationKeys` field for\n   * this component.\n   */\n  translateWithId: PropTypes.func\n};\nTableBatchActions.defaultProps = {\n  translateWithId: translateWithId\n};\nexport { TableBatchActions as default };","map":{"version":3,"names":["objectWithoutProperties","_objectWithoutProperties","slicedToArray","_slicedToArray","defineProperty","_defineProperty","extends","_extends","cx","PropTypes","React__default","Button","TableActionList","usePrefix","Text","_excluded","translationKeys","translateWithId","id","state","concat","totalSelected","TableBatchActions","_ref","_cx","className","children","shouldShowBatchActions","onCancel","t","rest","_React$useState","useState","_React$useState2","isScrolling","setIsScrolling","prefix","batchActionsClasses","batchSummaryClasses","createElement","onScroll","as","tabIndex","onClick","Object","keys","propTypes","node","string","func","isRequired","bool","number","defaultProps","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/DataTable/TableBatchActions.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport '../Button/Button.Skeleton.js';\nimport Button from '../Button/Button.js';\nimport TableActionList from './TableActionList.js';\nimport '../Text/index.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { Text } from '../Text/Text.js';\n\nvar _excluded = [\"className\", \"children\", \"shouldShowBatchActions\", \"totalSelected\", \"onCancel\", \"translateWithId\"];\nvar translationKeys = {\n  'carbon.table.batch.cancel': 'Cancel',\n  'carbon.table.batch.items.selected': 'items selected',\n  'carbon.table.batch.item.selected': 'item selected'\n};\n\nvar translateWithId = function translateWithId(id, state) {\n  if (id === 'carbon.table.batch.cancel') {\n    return translationKeys[id];\n  }\n\n  return \"\".concat(state.totalSelected, \" \").concat(translationKeys[id]);\n};\n\nvar TableBatchActions = function TableBatchActions(_ref) {\n  var _cx;\n\n  var className = _ref.className,\n      children = _ref.children,\n      shouldShowBatchActions = _ref.shouldShowBatchActions,\n      totalSelected = _ref.totalSelected,\n      onCancel = _ref.onCancel,\n      t = _ref.translateWithId,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React__default.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isScrolling = _React$useState2[0],\n      setIsScrolling = _React$useState2[1];\n\n  var prefix = usePrefix();\n  var batchActionsClasses = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--batch-actions\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--batch-actions--active\"), shouldShowBatchActions), _cx), className);\n  var batchSummaryClasses = cx(\"\".concat(prefix, \"--batch-summary\"), _defineProperty({}, \"\".concat(prefix, \"--batch-summary__scroll\"), isScrolling));\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    onScroll: function onScroll() {\n      setIsScrolling(!isScrolling);\n    },\n    \"aria-hidden\": !shouldShowBatchActions,\n    className: batchActionsClasses\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: batchSummaryClasses\n  }, /*#__PURE__*/React__default.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--batch-summary__para\")\n  }, /*#__PURE__*/React__default.createElement(Text, {\n    as: \"span\"\n  }, totalSelected > 1 || totalSelected === 0 ? t('carbon.table.batch.items.selected', {\n    totalSelected: totalSelected\n  }) : t('carbon.table.batch.item.selected', {\n    totalSelected: totalSelected\n  })))), /*#__PURE__*/React__default.createElement(TableActionList, null, children, /*#__PURE__*/React__default.createElement(Button, {\n    className: \"\".concat(prefix, \"--batch-summary__cancel\"),\n    tabIndex: shouldShowBatchActions ? 0 : -1,\n    onClick: onCancel\n  }, t('carbon.table.batch.cancel'))));\n};\n\nTableBatchActions.translationKeys = Object.keys(translationKeys);\nTableBatchActions.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n\n  /**\n   * Hook required to listen for when the user initiates a cancel request\n   * through this component\n   */\n  onCancel: PropTypes.func.isRequired,\n\n  /**\n   * Boolean specifier for whether or not the batch action bar should be\n   * displayed\n   */\n  shouldShowBatchActions: PropTypes.bool,\n\n  /**\n   * Numeric representation of the total number of items selected in a table.\n   * This number is used to derive the selection message\n   */\n  totalSelected: PropTypes.number.isRequired,\n\n  /**\n   * Supply a method to translate internal strings with your i18n tool of\n   * choice. Translation keys are available on the `translationKeys` field for\n   * this component.\n   */\n  translateWithId: PropTypes.func\n};\nTableBatchActions.defaultProps = {\n  translateWithId: translateWithId\n};\n\nexport { TableBatchActions as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}