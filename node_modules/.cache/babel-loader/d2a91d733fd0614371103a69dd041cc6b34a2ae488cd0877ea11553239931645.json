{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport '../TextInput/index.js';\nimport '../TextInput/ControlledPasswordInput.js';\nimport PasswordInput from '../TextInput/PasswordInput.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nimport TextInput from '../TextInput/TextInput.js';\nvar _excluded = [\"className\", \"isPassword\"];\nfunction FluidTextInput(_ref) {\n  var className = _ref.className,\n    isPassword = _ref.isPassword,\n    other = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var classNames = cx(className, _defineProperty({}, \"\".concat(prefix, \"--text-input--fluid\"), !isPassword));\n  return /*#__PURE__*/React__default.createElement(FormContext.Provider, {\n    value: {\n      isFluid: true\n    }\n  }, isPassword ? /*#__PURE__*/React__default.createElement(PasswordInput, _extends({\n    className: classNames\n  }, other)) : /*#__PURE__*/React__default.createElement(TextInput, _extends({\n    className: classNames\n  }, other)));\n}\nFluidTextInput.propTypes = {\n  /**\n   * Specify an optional className to be applied to the outer FluidForm wrapper\n   */\n  className: PropTypes.string,\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the `<input>` should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify a custom `id` for the `<input>`\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Specify whether the control is a password input\n   */\n  isPassword: PropTypes.bool,\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<input>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<input>` is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the placeholder attribute for the `<input>`\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Specify the value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nexport { FluidTextInput as default };","map":{"version":3,"names":["objectWithoutProperties","_objectWithoutProperties","defineProperty","_defineProperty","extends","_extends","PropTypes","React__default","cx","PasswordInput","usePrefix","FormContext","TextInput","_excluded","FluidTextInput","_ref","className","isPassword","other","prefix","classNames","concat","createElement","Provider","value","isFluid","propTypes","string","defaultValue","oneOfType","number","disabled","bool","id","isRequired","invalid","invalidText","node","labelText","onChange","func","onClick","placeholder","warn","warnText","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/FluidTextInput/FluidTextInput.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport '../TextInput/index.js';\nimport '../TextInput/ControlledPasswordInput.js';\nimport PasswordInput from '../TextInput/PasswordInput.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nimport TextInput from '../TextInput/TextInput.js';\n\nvar _excluded = [\"className\", \"isPassword\"];\n\nfunction FluidTextInput(_ref) {\n  var className = _ref.className,\n      isPassword = _ref.isPassword,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var classNames = cx(className, _defineProperty({}, \"\".concat(prefix, \"--text-input--fluid\"), !isPassword));\n  return /*#__PURE__*/React__default.createElement(FormContext.Provider, {\n    value: {\n      isFluid: true\n    }\n  }, isPassword ? /*#__PURE__*/React__default.createElement(PasswordInput, _extends({\n    className: classNames\n  }, other)) : /*#__PURE__*/React__default.createElement(TextInput, _extends({\n    className: classNames\n  }, other)));\n}\n\nFluidTextInput.propTypes = {\n  /**\n   * Specify an optional className to be applied to the outer FluidForm wrapper\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the `<input>` should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify a custom `id` for the `<input>`\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Specify whether the control is a password input\n   */\n  isPassword: PropTypes.bool,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<input>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<input>` is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the `<input>`\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Specify the value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\n\nexport { FluidTextInput as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}