{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, objectWithoutProperties as _objectWithoutProperties, extends as _extends, slicedToArray as _slicedToArray } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport cx from 'classnames';\nimport { Close, ErrorFilled, CheckmarkFilled, WarningFilled, WarningAltFilled, InformationFilled, InformationSquareFilled } from '@carbon/icons-react';\nimport '../Button/Button.Skeleton.js';\nimport Button from '../Button/Button.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { useNoInteractiveChildren } from '../../internal/useNoInteractiveChildren.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useId } from '../../internal/useId.js';\nvar _iconTypes;\nvar _excluded = [\"children\", \"className\", \"onClick\", \"inline\"],\n  _excluded2 = [\"ariaLabel\", \"className\", \"type\", \"renderIcon\", \"name\", \"notificationType\"],\n  _excluded3 = [\"role\", \"onClose\", \"onCloseButtonClick\", \"statusIconDescription\", \"className\", \"children\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"timeout\", \"title\", \"caption\", \"subtitle\"],\n  _excluded4 = [\"children\", \"title\", \"subtitle\", \"role\", \"onClose\", \"onCloseButtonClick\", \"statusIconDescription\", \"className\", \"kind\", \"lowContrast\", \"hideCloseButton\"],\n  _excluded5 = [\"actionButtonLabel\", \"ariaLabel\", \"children\", \"role\", \"onActionButtonClick\", \"onClose\", \"onCloseButtonClick\", \"statusIconDescription\", \"className\", \"inline\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"hasFocus\", \"closeOnEscape\", \"title\", \"subtitle\"];\n/**\n * Conditionally call a callback when the escape key is pressed\n * @param {node} ref - ref of the container element to scope the functionality to\n * @param {func} callback - function to be called\n * @param {bool} override - escape hatch to conditionally call the callback\n */\n\nfunction useEscapeToClose(ref, callback) {\n  var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var handleKeyDown = function handleKeyDown(event) {\n    // The callback should only be called when focus is on or within the container\n    var elementContainsFocus = ref.current && document.activeElement === ref.current || ref.current.contains(document.activeElement);\n    if (matches(event, [Escape]) && override && elementContainsFocus) {\n      callback(event);\n    }\n  };\n  useIsomorphicEffect(function () {\n    document.addEventListener('keydown', handleKeyDown, false);\n    return function () {\n      return document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  });\n}\nfunction NotificationActionButton(_ref) {\n  var children = _ref.children,\n    customClassName = _ref.className,\n    onClick = _ref.onClick,\n    inline = _ref.inline,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var className = cx(customClassName, _defineProperty({}, \"\".concat(prefix, \"--actionable-notification__action-button\"), true));\n  return /*#__PURE__*/React__default.createElement(Button, _extends({\n    className: className,\n    kind: inline ? 'ghost' : 'tertiary',\n    onClick: onClick,\n    size: \"sm\"\n  }, rest), children);\n}\nNotificationActionButton.propTypes = {\n  /**\n   * Specify the content of the notification action button.\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the notification action button\n   */\n  className: PropTypes.string,\n  /**\n   * Specify if the visual treatment of the button should be for an inline notification\n   */\n  inline: PropTypes.bool,\n  /**\n   * Optionally specify a click handler for the notification action button.\n   */\n  onClick: PropTypes.func\n};\nfunction NotificationButton(_ref2) {\n  var ariaLabel = _ref2.ariaLabel,\n    className = _ref2.className,\n    type = _ref2.type,\n    IconTag = _ref2.renderIcon,\n    name = _ref2.name,\n    notificationType = _ref2.notificationType,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  var prefix = usePrefix();\n  var buttonClassName = cx(className, _defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-button\"), notificationType));\n  var iconClassName = cx(_defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-icon\"), notificationType));\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    // eslint-disable-next-line react/button-has-type\n    type: type,\n    \"aria-label\": ariaLabel,\n    title: ariaLabel,\n    className: buttonClassName\n  }), IconTag && /*#__PURE__*/React__default.createElement(IconTag, {\n    className: iconClassName,\n    name: name\n  }));\n}\nNotificationButton.propTypes = {\n  /**\n   * Specify a label to be read by screen readers on the notification button\n   */\n  ariaLabel: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the notification button\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional icon for the Button through a string,\n   * if something but regular \"close\" icon is desirable\n   */\n  name: PropTypes.string,\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline', 'actionable']),\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: PropTypes.string\n};\nNotificationButton.defaultProps = {\n  ariaLabel: 'close notification',\n  notificationType: 'toast',\n  type: 'button',\n  renderIcon: Close\n};\nvar iconTypes = (_iconTypes = {\n  error: ErrorFilled,\n  success: CheckmarkFilled,\n  warning: WarningFilled\n}, _defineProperty(_iconTypes, 'warning-alt', WarningAltFilled), _defineProperty(_iconTypes, \"info\", InformationFilled), _defineProperty(_iconTypes, 'info-square', InformationSquareFilled), _iconTypes);\nfunction NotificationIcon(_ref3) {\n  var iconDescription = _ref3.iconDescription,\n    kind = _ref3.kind,\n    notificationType = _ref3.notificationType;\n  var prefix = usePrefix();\n  var IconForKind = iconTypes[kind];\n  if (!IconForKind) {\n    return null;\n  }\n  return /*#__PURE__*/React__default.createElement(IconForKind, {\n    className: \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__icon\"),\n    size: 20\n  }, /*#__PURE__*/React__default.createElement(\"title\", null, iconDescription));\n}\nNotificationIcon.propTypes = {\n  iconDescription: PropTypes.string.isRequired,\n  kind: PropTypes.oneOf(['error', 'success', 'warning', 'warning-alt', 'info', 'info-square']).isRequired,\n  notificationType: PropTypes.oneOf(['inline', 'toast']).isRequired\n};\nfunction ToastNotification(_ref4) {\n  var _cx4;\n  var role = _ref4.role,\n    onClose = _ref4.onClose,\n    onCloseButtonClick = _ref4.onCloseButtonClick,\n    statusIconDescription = _ref4.statusIconDescription,\n    className = _ref4.className,\n    children = _ref4.children,\n    kind = _ref4.kind,\n    lowContrast = _ref4.lowContrast,\n    hideCloseButton = _ref4.hideCloseButton,\n    timeout = _ref4.timeout,\n    title = _ref4.title,\n    caption = _ref4.caption,\n    subtitle = _ref4.subtitle,\n    rest = _objectWithoutProperties(_ref4, _excluded3);\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    setIsOpen = _useState2[1];\n  var prefix = usePrefix();\n  var containerClassName = cx(className, (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--toast-notification\"), true), _defineProperty(_cx4, \"\".concat(prefix, \"--toast-notification--low-contrast\"), lowContrast), _defineProperty(_cx4, \"\".concat(prefix, \"--toast-notification--\").concat(kind), kind), _cx4));\n  var contentRef = useRef(null);\n  useNoInteractiveChildren(contentRef);\n  var handleClose = function handleClose(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  };\n  var ref = useRef(null);\n  function handleCloseButtonClick(event) {\n    onCloseButtonClick(event);\n    handleClose(event);\n  }\n  var savedOnClose = useRef(onClose);\n  useEffect(function () {\n    savedOnClose.current = onClose;\n  });\n  useEffect(function () {\n    if (!timeout) {\n      return;\n    }\n    var timeoutId = window.setTimeout(function (event) {\n      setIsOpen(false);\n      if (savedOnClose.current) {\n        savedOnClose.current(event);\n      }\n    }, timeout);\n    return function () {\n      window.clearTimeout(timeoutId);\n    };\n  }, [timeout]);\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: ref\n  }, rest, {\n    role: role,\n    className: containerClassName\n  }), /*#__PURE__*/React__default.createElement(NotificationIcon, {\n    notificationType: \"toast\",\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: contentRef,\n    className: \"\".concat(prefix, \"--toast-notification__details\")\n  }, title && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--toast-notification__title\")\n  }, title), subtitle && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--toast-notification__subtitle\")\n  }, subtitle), caption && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--toast-notification__caption\")\n  }, caption), children), !hideCloseButton && /*#__PURE__*/React__default.createElement(NotificationButton, {\n    notificationType: \"toast\",\n    onClick: handleCloseButtonClick,\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\"\n  }));\n}\nToastNotification.propTypes = {\n  /**\n   * Provide a description for \"close\" icon button that can be read by screen readers\n   */\n  ariaLabel: PropTypes.string,\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.string,\n  /**\n   * Specify the content\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']),\n  /**\n   * Specify whether you are using the low contrast variant of the ToastNotification.\n   */\n  lowContrast: PropTypes.bool,\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onClose: PropTypes.func,\n  /**\n   * Provide a function that is called when the close button is clicked\n   */\n  onCloseButtonClick: PropTypes.func,\n  /**\n   * By default, this value is \"status\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.oneOf(['alert', 'log', 'status']),\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.string,\n  /**\n   * Specify an optional duration the notification should be closed in\n   */\n  timeout: PropTypes.number,\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string\n};\nToastNotification.defaultProps = {\n  kind: 'error',\n  role: 'status',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  timeout: 0\n};\nfunction InlineNotification(_ref5) {\n  var _cx5;\n  var children = _ref5.children,\n    title = _ref5.title,\n    subtitle = _ref5.subtitle,\n    role = _ref5.role,\n    onClose = _ref5.onClose,\n    onCloseButtonClick = _ref5.onCloseButtonClick,\n    statusIconDescription = _ref5.statusIconDescription,\n    className = _ref5.className,\n    kind = _ref5.kind,\n    lowContrast = _ref5.lowContrast,\n    hideCloseButton = _ref5.hideCloseButton,\n    rest = _objectWithoutProperties(_ref5, _excluded4);\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isOpen = _useState4[0],\n    setIsOpen = _useState4[1];\n  var prefix = usePrefix();\n  var containerClassName = cx(className, (_cx5 = {}, _defineProperty(_cx5, \"\".concat(prefix, \"--inline-notification\"), true), _defineProperty(_cx5, \"\".concat(prefix, \"--inline-notification--low-contrast\"), lowContrast), _defineProperty(_cx5, \"\".concat(prefix, \"--inline-notification--\").concat(kind), kind), _defineProperty(_cx5, \"\".concat(prefix, \"--inline-notification--hide-close-button\"), hideCloseButton), _cx5));\n  var contentRef = useRef(null);\n  useNoInteractiveChildren(contentRef);\n  var handleClose = function handleClose(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  };\n  var ref = useRef(null);\n  function handleCloseButtonClick(event) {\n    onCloseButtonClick(event);\n    handleClose(event);\n  }\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: ref\n  }, rest, {\n    role: role,\n    className: containerClassName\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__details\")\n  }, /*#__PURE__*/React__default.createElement(NotificationIcon, {\n    notificationType: \"inline\",\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: contentRef,\n    className: \"\".concat(prefix, \"--inline-notification__text-wrapper\")\n  }, title && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__title\")\n  }, title), subtitle && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__subtitle\")\n  }, subtitle), children)), !hideCloseButton && /*#__PURE__*/React__default.createElement(NotificationButton, {\n    notificationType: \"inline\",\n    onClick: handleCloseButtonClick,\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\"\n  }));\n}\nInlineNotification.propTypes = {\n  /**\n   * Specify the content\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']),\n  /**\n   * Specify whether you are using the low contrast variant of the InlineNotification.\n   */\n  lowContrast: PropTypes.bool,\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onClose: PropTypes.func,\n  /**\n   * Provide a function that is called when the close button is clicked\n   */\n  onCloseButtonClick: PropTypes.func,\n  /**\n   * By default, this value is \"status\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side.\n   */\n  role: PropTypes.oneOf(['alert', 'log', 'status']),\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.string,\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string\n};\nInlineNotification.defaultProps = {\n  kind: 'error',\n  role: 'status',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false\n};\nfunction ActionableNotification(_ref6) {\n  var _cx6;\n  var actionButtonLabel = _ref6.actionButtonLabel,\n    ariaLabel = _ref6.ariaLabel,\n    children = _ref6.children,\n    role = _ref6.role,\n    onActionButtonClick = _ref6.onActionButtonClick,\n    onClose = _ref6.onClose,\n    onCloseButtonClick = _ref6.onCloseButtonClick,\n    statusIconDescription = _ref6.statusIconDescription,\n    className = _ref6.className,\n    inline = _ref6.inline,\n    kind = _ref6.kind,\n    lowContrast = _ref6.lowContrast,\n    hideCloseButton = _ref6.hideCloseButton,\n    hasFocus = _ref6.hasFocus,\n    closeOnEscape = _ref6.closeOnEscape,\n    title = _ref6.title,\n    subtitle = _ref6.subtitle,\n    rest = _objectWithoutProperties(_ref6, _excluded5);\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isOpen = _useState6[0],\n    setIsOpen = _useState6[1];\n  var prefix = usePrefix();\n  var id = useId('actionable-notification');\n  var containerClassName = cx(className, (_cx6 = {}, _defineProperty(_cx6, \"\".concat(prefix, \"--actionable-notification\"), true), _defineProperty(_cx6, \"\".concat(prefix, \"--actionable-notification--toast\"), !inline), _defineProperty(_cx6, \"\".concat(prefix, \"--actionable-notification--low-contrast\"), lowContrast), _defineProperty(_cx6, \"\".concat(prefix, \"--actionable-notification--\").concat(kind), kind), _defineProperty(_cx6, \"\".concat(prefix, \"--actionable-notification--hide-close-button\"), hideCloseButton), _cx6));\n  var ref = useRef(null);\n  useIsomorphicEffect(function () {\n    if (ref.current && hasFocus) {\n      ref.current.focus();\n    }\n  });\n  var handleClose = function handleClose(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  };\n  useEscapeToClose(ref, handleCloseButtonClick, closeOnEscape);\n  function handleCloseButtonClick(event) {\n    onCloseButtonClick(event);\n    handleClose(event);\n  }\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    ref: ref,\n    role: role,\n    className: containerClassName,\n    \"aria-labelledby\": title ? id : undefined\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--actionable-notification__details\")\n  }, /*#__PURE__*/React__default.createElement(NotificationIcon, {\n    notificationType: inline ? 'inline' : 'toast',\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--actionable-notification__text-wrapper\")\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--actionable-notification__content\")\n  }, title && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--actionable-notification__title\"),\n    id: id\n  }, title), subtitle && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--actionable-notification__subtitle\")\n  }, subtitle), children))), /*#__PURE__*/React__default.createElement(NotificationActionButton, {\n    onClick: onActionButtonClick,\n    inline: inline\n  }, actionButtonLabel), !hideCloseButton && /*#__PURE__*/React__default.createElement(NotificationButton, {\n    \"aria-label\": ariaLabel,\n    notificationType: \"actionable\",\n    onClick: handleCloseButtonClick\n  }));\n}\nActionableNotification.propTypes = {\n  /**\n   * Pass in the action button label that will be rendered within the ActionableNotification.\n   */\n  actionButtonLabel: PropTypes.string.isRequired,\n  /**\n   * Provide a description for \"close\" icon button that can be read by screen readers\n   */\n  ariaLabel: PropTypes.string,\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.string,\n  /**\n   * Specify the content\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n  /**\n   * Specify if pressing the escape key should close notifications\n   */\n  closeOnEscape: PropTypes.bool,\n  /**\n   * Specify if focus should be moved to the component when the notification contains actions\n   */\n  hasFocus: PropTypes.bool,\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n  /*\n   * Specify if the notification should have inline styling applied instead of toast\n   */\n  inline: PropTypes.bool,\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']).isRequired,\n  /**\n   * Specify whether you are using the low contrast variant of the ActionableNotification.\n   */\n  lowContrast: PropTypes.bool,\n  /**\n   * Provide a function that is called when the action is clicked\n   */\n  onActionButtonClick: PropTypes.func,\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onClose: PropTypes.func,\n  /**\n   * Provide a function that is called when the close button is clicked\n   */\n  onCloseButtonClick: PropTypes.func,\n  /**\n   * By default, this value is \"alertdialog\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side.\n   */\n  role: PropTypes.string,\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.string,\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string\n};\nActionableNotification.defaultProps = {\n  kind: 'error',\n  role: 'alertdialog',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  hasFocus: true,\n  closeOnEscape: true,\n  inline: false\n};\nexport { ActionableNotification, InlineNotification, NotificationActionButton, NotificationButton, ToastNotification };","map":{"version":3,"names":["defineProperty","_defineProperty","objectWithoutProperties","_objectWithoutProperties","extends","_extends","slicedToArray","_slicedToArray","PropTypes","React__default","useState","useRef","useEffect","cx","Close","ErrorFilled","CheckmarkFilled","WarningFilled","WarningAltFilled","InformationFilled","InformationSquareFilled","Button","useIsomorphicEffect","useNoInteractiveChildren","Escape","matches","usePrefix","useId","_iconTypes","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","useEscapeToClose","ref","callback","override","arguments","length","undefined","handleKeyDown","event","elementContainsFocus","current","document","activeElement","contains","addEventListener","removeEventListener","NotificationActionButton","_ref","children","customClassName","className","onClick","inline","rest","prefix","concat","createElement","kind","size","propTypes","node","string","bool","func","NotificationButton","_ref2","ariaLabel","type","IconTag","renderIcon","name","notificationType","buttonClassName","iconClassName","title","oneOf","oneOfType","object","defaultProps","iconTypes","error","success","warning","NotificationIcon","_ref3","iconDescription","IconForKind","isRequired","ToastNotification","_ref4","_cx4","role","onClose","onCloseButtonClick","statusIconDescription","lowContrast","hideCloseButton","timeout","caption","subtitle","_useState","_useState2","isOpen","setIsOpen","containerClassName","contentRef","handleClose","evt","handleCloseButtonClick","savedOnClose","timeoutId","window","setTimeout","clearTimeout","tabIndex","number","InlineNotification","_ref5","_cx5","_useState3","_useState4","ActionableNotification","_ref6","_cx6","actionButtonLabel","onActionButtonClick","hasFocus","closeOnEscape","_useState5","_useState6","id","focus"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/Notification/Notification.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, objectWithoutProperties as _objectWithoutProperties, extends as _extends, slicedToArray as _slicedToArray } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport cx from 'classnames';\nimport { Close, ErrorFilled, CheckmarkFilled, WarningFilled, WarningAltFilled, InformationFilled, InformationSquareFilled } from '@carbon/icons-react';\nimport '../Button/Button.Skeleton.js';\nimport Button from '../Button/Button.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { useNoInteractiveChildren } from '../../internal/useNoInteractiveChildren.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useId } from '../../internal/useId.js';\n\nvar _iconTypes;\n\nvar _excluded = [\"children\", \"className\", \"onClick\", \"inline\"],\n    _excluded2 = [\"ariaLabel\", \"className\", \"type\", \"renderIcon\", \"name\", \"notificationType\"],\n    _excluded3 = [\"role\", \"onClose\", \"onCloseButtonClick\", \"statusIconDescription\", \"className\", \"children\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"timeout\", \"title\", \"caption\", \"subtitle\"],\n    _excluded4 = [\"children\", \"title\", \"subtitle\", \"role\", \"onClose\", \"onCloseButtonClick\", \"statusIconDescription\", \"className\", \"kind\", \"lowContrast\", \"hideCloseButton\"],\n    _excluded5 = [\"actionButtonLabel\", \"ariaLabel\", \"children\", \"role\", \"onActionButtonClick\", \"onClose\", \"onCloseButtonClick\", \"statusIconDescription\", \"className\", \"inline\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"hasFocus\", \"closeOnEscape\", \"title\", \"subtitle\"];\n/**\n * Conditionally call a callback when the escape key is pressed\n * @param {node} ref - ref of the container element to scope the functionality to\n * @param {func} callback - function to be called\n * @param {bool} override - escape hatch to conditionally call the callback\n */\n\nfunction useEscapeToClose(ref, callback) {\n  var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The callback should only be called when focus is on or within the container\n    var elementContainsFocus = ref.current && document.activeElement === ref.current || ref.current.contains(document.activeElement);\n\n    if (matches(event, [Escape]) && override && elementContainsFocus) {\n      callback(event);\n    }\n  };\n\n  useIsomorphicEffect(function () {\n    document.addEventListener('keydown', handleKeyDown, false);\n    return function () {\n      return document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  });\n}\n\nfunction NotificationActionButton(_ref) {\n  var children = _ref.children,\n      customClassName = _ref.className,\n      onClick = _ref.onClick,\n      inline = _ref.inline,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(customClassName, _defineProperty({}, \"\".concat(prefix, \"--actionable-notification__action-button\"), true));\n  return /*#__PURE__*/React__default.createElement(Button, _extends({\n    className: className,\n    kind: inline ? 'ghost' : 'tertiary',\n    onClick: onClick,\n    size: \"sm\"\n  }, rest), children);\n}\nNotificationActionButton.propTypes = {\n  /**\n   * Specify the content of the notification action button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification action button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify if the visual treatment of the button should be for an inline notification\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * Optionally specify a click handler for the notification action button.\n   */\n  onClick: PropTypes.func\n};\nfunction NotificationButton(_ref2) {\n  var ariaLabel = _ref2.ariaLabel,\n      className = _ref2.className,\n      type = _ref2.type,\n      IconTag = _ref2.renderIcon,\n      name = _ref2.name,\n      notificationType = _ref2.notificationType,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var prefix = usePrefix();\n  var buttonClassName = cx(className, _defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-button\"), notificationType));\n  var iconClassName = cx(_defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-icon\"), notificationType));\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    // eslint-disable-next-line react/button-has-type\n    type: type,\n    \"aria-label\": ariaLabel,\n    title: ariaLabel,\n    className: buttonClassName\n  }), IconTag && /*#__PURE__*/React__default.createElement(IconTag, {\n    className: iconClassName,\n    name: name\n  }));\n}\nNotificationButton.propTypes = {\n  /**\n   * Specify a label to be read by screen readers on the notification button\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Specify an optional className to be applied to the notification button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify an optional icon for the Button through a string,\n   * if something but regular \"close\" icon is desirable\n   */\n  name: PropTypes.string,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline', 'actionable']),\n\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: PropTypes.string\n};\nNotificationButton.defaultProps = {\n  ariaLabel: 'close notification',\n  notificationType: 'toast',\n  type: 'button',\n  renderIcon: Close\n};\nvar iconTypes = (_iconTypes = {\n  error: ErrorFilled,\n  success: CheckmarkFilled,\n  warning: WarningFilled\n}, _defineProperty(_iconTypes, 'warning-alt', WarningAltFilled), _defineProperty(_iconTypes, \"info\", InformationFilled), _defineProperty(_iconTypes, 'info-square', InformationSquareFilled), _iconTypes);\n\nfunction NotificationIcon(_ref3) {\n  var iconDescription = _ref3.iconDescription,\n      kind = _ref3.kind,\n      notificationType = _ref3.notificationType;\n  var prefix = usePrefix();\n  var IconForKind = iconTypes[kind];\n\n  if (!IconForKind) {\n    return null;\n  }\n\n  return /*#__PURE__*/React__default.createElement(IconForKind, {\n    className: \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__icon\"),\n    size: 20\n  }, /*#__PURE__*/React__default.createElement(\"title\", null, iconDescription));\n}\n\nNotificationIcon.propTypes = {\n  iconDescription: PropTypes.string.isRequired,\n  kind: PropTypes.oneOf(['error', 'success', 'warning', 'warning-alt', 'info', 'info-square']).isRequired,\n  notificationType: PropTypes.oneOf(['inline', 'toast']).isRequired\n};\nfunction ToastNotification(_ref4) {\n  var _cx4;\n\n  var role = _ref4.role,\n      onClose = _ref4.onClose,\n      onCloseButtonClick = _ref4.onCloseButtonClick,\n      statusIconDescription = _ref4.statusIconDescription,\n      className = _ref4.className,\n      children = _ref4.children,\n      kind = _ref4.kind,\n      lowContrast = _ref4.lowContrast,\n      hideCloseButton = _ref4.hideCloseButton,\n      timeout = _ref4.timeout,\n      title = _ref4.title,\n      caption = _ref4.caption,\n      subtitle = _ref4.subtitle,\n      rest = _objectWithoutProperties(_ref4, _excluded3);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var prefix = usePrefix();\n  var containerClassName = cx(className, (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--toast-notification\"), true), _defineProperty(_cx4, \"\".concat(prefix, \"--toast-notification--low-contrast\"), lowContrast), _defineProperty(_cx4, \"\".concat(prefix, \"--toast-notification--\").concat(kind), kind), _cx4));\n  var contentRef = useRef(null);\n  useNoInteractiveChildren(contentRef);\n\n  var handleClose = function handleClose(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  };\n\n  var ref = useRef(null);\n\n  function handleCloseButtonClick(event) {\n    onCloseButtonClick(event);\n    handleClose(event);\n  }\n\n  var savedOnClose = useRef(onClose);\n  useEffect(function () {\n    savedOnClose.current = onClose;\n  });\n  useEffect(function () {\n    if (!timeout) {\n      return;\n    }\n\n    var timeoutId = window.setTimeout(function (event) {\n      setIsOpen(false);\n\n      if (savedOnClose.current) {\n        savedOnClose.current(event);\n      }\n    }, timeout);\n    return function () {\n      window.clearTimeout(timeoutId);\n    };\n  }, [timeout]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: ref\n  }, rest, {\n    role: role,\n    className: containerClassName\n  }), /*#__PURE__*/React__default.createElement(NotificationIcon, {\n    notificationType: \"toast\",\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: contentRef,\n    className: \"\".concat(prefix, \"--toast-notification__details\")\n  }, title && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--toast-notification__title\")\n  }, title), subtitle && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--toast-notification__subtitle\")\n  }, subtitle), caption && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--toast-notification__caption\")\n  }, caption), children), !hideCloseButton && /*#__PURE__*/React__default.createElement(NotificationButton, {\n    notificationType: \"toast\",\n    onClick: handleCloseButtonClick,\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\"\n  }));\n}\nToastNotification.propTypes = {\n  /**\n   * Provide a description for \"close\" icon button that can be read by screen readers\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.string,\n\n  /**\n   * Specify the content\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']),\n\n  /**\n   * Specify whether you are using the low contrast variant of the ToastNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Provide a function that is called when the close button is clicked\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"status\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.oneOf(['alert', 'log', 'status']),\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.string,\n\n  /**\n   * Specify an optional duration the notification should be closed in\n   */\n  timeout: PropTypes.number,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string\n};\nToastNotification.defaultProps = {\n  kind: 'error',\n  role: 'status',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  timeout: 0\n};\nfunction InlineNotification(_ref5) {\n  var _cx5;\n\n  var children = _ref5.children,\n      title = _ref5.title,\n      subtitle = _ref5.subtitle,\n      role = _ref5.role,\n      onClose = _ref5.onClose,\n      onCloseButtonClick = _ref5.onCloseButtonClick,\n      statusIconDescription = _ref5.statusIconDescription,\n      className = _ref5.className,\n      kind = _ref5.kind,\n      lowContrast = _ref5.lowContrast,\n      hideCloseButton = _ref5.hideCloseButton,\n      rest = _objectWithoutProperties(_ref5, _excluded4);\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1];\n\n  var prefix = usePrefix();\n  var containerClassName = cx(className, (_cx5 = {}, _defineProperty(_cx5, \"\".concat(prefix, \"--inline-notification\"), true), _defineProperty(_cx5, \"\".concat(prefix, \"--inline-notification--low-contrast\"), lowContrast), _defineProperty(_cx5, \"\".concat(prefix, \"--inline-notification--\").concat(kind), kind), _defineProperty(_cx5, \"\".concat(prefix, \"--inline-notification--hide-close-button\"), hideCloseButton), _cx5));\n  var contentRef = useRef(null);\n  useNoInteractiveChildren(contentRef);\n\n  var handleClose = function handleClose(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  };\n\n  var ref = useRef(null);\n\n  function handleCloseButtonClick(event) {\n    onCloseButtonClick(event);\n    handleClose(event);\n  }\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: ref\n  }, rest, {\n    role: role,\n    className: containerClassName\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__details\")\n  }, /*#__PURE__*/React__default.createElement(NotificationIcon, {\n    notificationType: \"inline\",\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: contentRef,\n    className: \"\".concat(prefix, \"--inline-notification__text-wrapper\")\n  }, title && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__title\")\n  }, title), subtitle && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__subtitle\")\n  }, subtitle), children)), !hideCloseButton && /*#__PURE__*/React__default.createElement(NotificationButton, {\n    notificationType: \"inline\",\n    onClick: handleCloseButtonClick,\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\"\n  }));\n}\nInlineNotification.propTypes = {\n  /**\n   * Specify the content\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']),\n\n  /**\n   * Specify whether you are using the low contrast variant of the InlineNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Provide a function that is called when the close button is clicked\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"status\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side.\n   */\n  role: PropTypes.oneOf(['alert', 'log', 'status']),\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.string,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string\n};\nInlineNotification.defaultProps = {\n  kind: 'error',\n  role: 'status',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false\n};\nfunction ActionableNotification(_ref6) {\n  var _cx6;\n\n  var actionButtonLabel = _ref6.actionButtonLabel,\n      ariaLabel = _ref6.ariaLabel,\n      children = _ref6.children,\n      role = _ref6.role,\n      onActionButtonClick = _ref6.onActionButtonClick,\n      onClose = _ref6.onClose,\n      onCloseButtonClick = _ref6.onCloseButtonClick,\n      statusIconDescription = _ref6.statusIconDescription,\n      className = _ref6.className,\n      inline = _ref6.inline,\n      kind = _ref6.kind,\n      lowContrast = _ref6.lowContrast,\n      hideCloseButton = _ref6.hideCloseButton,\n      hasFocus = _ref6.hasFocus,\n      closeOnEscape = _ref6.closeOnEscape,\n      title = _ref6.title,\n      subtitle = _ref6.subtitle,\n      rest = _objectWithoutProperties(_ref6, _excluded5);\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isOpen = _useState6[0],\n      setIsOpen = _useState6[1];\n\n  var prefix = usePrefix();\n  var id = useId('actionable-notification');\n  var containerClassName = cx(className, (_cx6 = {}, _defineProperty(_cx6, \"\".concat(prefix, \"--actionable-notification\"), true), _defineProperty(_cx6, \"\".concat(prefix, \"--actionable-notification--toast\"), !inline), _defineProperty(_cx6, \"\".concat(prefix, \"--actionable-notification--low-contrast\"), lowContrast), _defineProperty(_cx6, \"\".concat(prefix, \"--actionable-notification--\").concat(kind), kind), _defineProperty(_cx6, \"\".concat(prefix, \"--actionable-notification--hide-close-button\"), hideCloseButton), _cx6));\n  var ref = useRef(null);\n  useIsomorphicEffect(function () {\n    if (ref.current && hasFocus) {\n      ref.current.focus();\n    }\n  });\n\n  var handleClose = function handleClose(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  };\n\n  useEscapeToClose(ref, handleCloseButtonClick, closeOnEscape);\n\n  function handleCloseButtonClick(event) {\n    onCloseButtonClick(event);\n    handleClose(event);\n  }\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    ref: ref,\n    role: role,\n    className: containerClassName,\n    \"aria-labelledby\": title ? id : undefined\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--actionable-notification__details\")\n  }, /*#__PURE__*/React__default.createElement(NotificationIcon, {\n    notificationType: inline ? 'inline' : 'toast',\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--actionable-notification__text-wrapper\")\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--actionable-notification__content\")\n  }, title && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--actionable-notification__title\"),\n    id: id\n  }, title), subtitle && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--actionable-notification__subtitle\")\n  }, subtitle), children))), /*#__PURE__*/React__default.createElement(NotificationActionButton, {\n    onClick: onActionButtonClick,\n    inline: inline\n  }, actionButtonLabel), !hideCloseButton && /*#__PURE__*/React__default.createElement(NotificationButton, {\n    \"aria-label\": ariaLabel,\n    notificationType: \"actionable\",\n    onClick: handleCloseButtonClick\n  }));\n}\nActionableNotification.propTypes = {\n  /**\n   * Pass in the action button label that will be rendered within the ActionableNotification.\n   */\n  actionButtonLabel: PropTypes.string.isRequired,\n\n  /**\n   * Provide a description for \"close\" icon button that can be read by screen readers\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.string,\n\n  /**\n   * Specify the content\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify if pressing the escape key should close notifications\n   */\n  closeOnEscape: PropTypes.bool,\n\n  /**\n   * Specify if focus should be moved to the component when the notification contains actions\n   */\n  hasFocus: PropTypes.bool,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /*\n   * Specify if the notification should have inline styling applied instead of toast\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the ActionableNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Provide a function that is called when the action is clicked\n   */\n  onActionButtonClick: PropTypes.func,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Provide a function that is called when the close button is clicked\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"alertdialog\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side.\n   */\n  role: PropTypes.string,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.string,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string\n};\nActionableNotification.defaultProps = {\n  kind: 'error',\n  role: 'alertdialog',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  hasFocus: true,\n  closeOnEscape: true,\n  inline: false\n};\n\nexport { ActionableNotification, InlineNotification, NotificationActionButton, NotificationButton, ToastNotification };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}