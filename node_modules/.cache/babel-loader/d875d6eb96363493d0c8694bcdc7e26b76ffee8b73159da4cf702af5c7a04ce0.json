{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, slicedToArray as _slicedToArray, extends as _extends, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { ArrowUp, ArrowDown, Home, End } from '../../internal/keyboard/keys.js';\nimport { matches, match } from '../../internal/keyboard/match.js';\nimport uniqueId from '../../tools/uniqueId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar _excluded = [\"active\", \"children\", \"className\", \"hideLabel\", \"label\", \"multiselect\", \"onSelect\", \"selected\", \"size\"];\nfunction TreeView(_ref) {\n  var prespecifiedActive = _ref.active,\n    children = _ref.children,\n    className = _ref.className,\n    _ref$hideLabel = _ref.hideLabel,\n    hideLabel = _ref$hideLabel === void 0 ? false : _ref$hideLabel,\n    label = _ref.label,\n    _ref$multiselect = _ref.multiselect,\n    multiselect = _ref$multiselect === void 0 ? false : _ref$multiselect,\n    onSelect = _ref.onSelect,\n    _ref$selected = _ref.selected,\n    preselected = _ref$selected === void 0 ? [] : _ref$selected,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'sm' : _ref$size,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useRef = useRef(rest.id || uniqueId()),\n    treeId = _useRef.current;\n  var prefix = usePrefix();\n  var treeClasses = cx(className, \"\".concat(prefix, \"--tree\"), _defineProperty({}, \"\".concat(prefix, \"--tree--\").concat(size), size !== 'default'));\n  var treeRootRef = useRef(null);\n  var treeWalker = useRef(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current);\n  var _useState = useState(preselected),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n  var _useState3 = useState(prespecifiedActive),\n    _useState4 = _slicedToArray(_useState3, 2),\n    active = _useState4[0],\n    setActive = _useState4[1];\n  function resetNodeTabIndices() {\n    var _treeRootRef$current$, _treeRootRef$current;\n    Array.prototype.forEach.call((_treeRootRef$current$ = treeRootRef === null || treeRootRef === void 0 ? void 0 : (_treeRootRef$current = treeRootRef.current) === null || _treeRootRef$current === void 0 ? void 0 : _treeRootRef$current.querySelectorAll('[tabIndex=\"0\"]')) !== null && _treeRootRef$current$ !== void 0 ? _treeRootRef$current$ : [], function (item) {\n      item.tabIndex = -1;\n    });\n  }\n  function handleTreeSelect(event) {\n    var node = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var nodeId = node.id;\n    if (multiselect && (event.metaKey || event.ctrlKey)) {\n      if (!selected.includes(nodeId)) {\n        setSelected(selected.concat(nodeId));\n      } else {\n        setSelected(selected.filter(function (selectedId) {\n          return selectedId !== nodeId;\n        }));\n      }\n      onSelect === null || onSelect === void 0 ? void 0 : onSelect(event, node);\n    } else {\n      setSelected([nodeId]);\n      setActive(nodeId);\n      onSelect === null || onSelect === void 0 ? void 0 : onSelect(event, _objectSpread2({\n        activeNodeId: nodeId\n      }, node));\n    }\n  }\n  function handleFocusEvent(event) {\n    if (event.type === 'blur') {\n      var _treeRootRef$current2;\n      var currentFocusedNode = event.relatedTarget,\n        prevFocusedNode = event.target;\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current2 = treeRootRef.current) !== null && _treeRootRef$current2 !== void 0 && _treeRootRef$current2.contains(currentFocusedNode)) {\n        prevFocusedNode.tabIndex = -1;\n      }\n    }\n    if (event.type === 'focus') {\n      var _treeRootRef$current3;\n      resetNodeTabIndices();\n      var _prevFocusedNode = event.relatedTarget,\n        _currentFocusedNode = event.target;\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current3 = treeRootRef.current) !== null && _treeRootRef$current3 !== void 0 && _treeRootRef$current3.contains(_prevFocusedNode)) {\n        _prevFocusedNode.tabIndex = -1;\n      }\n      _currentFocusedNode.tabIndex = 0;\n    }\n  }\n  var focusTarget = false;\n  var nodesWithProps = React__default.Children.map(children, function (node) {\n    var sharedNodeProps = {\n      active: active,\n      depth: 0,\n      onNodeFocusEvent: handleFocusEvent,\n      onTreeSelect: handleTreeSelect,\n      selected: selected,\n      tabIndex: !node.props.disabled && -1 || null\n    };\n    if (!focusTarget && !node.props.disabled) {\n      sharedNodeProps.tabIndex = 0;\n      focusTarget = true;\n    }\n    if ( /*#__PURE__*/React__default.isValidElement(node)) {\n      return /*#__PURE__*/React__default.cloneElement(node, sharedNodeProps);\n    }\n  });\n  function handleKeyDown(event) {\n    var _rest$onKeyDown;\n    event.stopPropagation();\n    if (matches(event, [ArrowUp, ArrowDown, Home, End, {\n      code: 'KeyA'\n    }])) {\n      event.preventDefault();\n    }\n    treeWalker.current.currentNode = event.target;\n    var nextFocusNode;\n    if (match(event, ArrowUp)) {\n      nextFocusNode = treeWalker.current.previousNode();\n    }\n    if (match(event, ArrowDown)) {\n      nextFocusNode = treeWalker.current.nextNode();\n    }\n    if (matches(event, [Home, End, {\n      code: 'KeyA'\n    }])) {\n      var nodeIds = [];\n      if (matches(event, [Home, End])) {\n        if (multiselect && event.shiftKey && event.ctrlKey && !treeWalker.current.currentNode.getAttribute('aria-disabled')) {\n          var _treeWalker$current$c;\n          nodeIds.push((_treeWalker$current$c = treeWalker.current.currentNode) === null || _treeWalker$current$c === void 0 ? void 0 : _treeWalker$current$c.id);\n        }\n        while (match(event, Home) ? treeWalker.current.previousNode() : treeWalker.current.nextNode()) {\n          nextFocusNode = treeWalker.current.currentNode;\n          if (multiselect && event.shiftKey && event.ctrlKey && !nextFocusNode.getAttribute('aria-disabled')) {\n            var _nextFocusNode;\n            nodeIds.push((_nextFocusNode = nextFocusNode) === null || _nextFocusNode === void 0 ? void 0 : _nextFocusNode.id);\n          }\n        }\n      }\n      if (match(event, {\n        code: 'KeyA'\n      }) && event.ctrlKey) {\n        treeWalker.current.currentNode = treeWalker.current.root;\n        while (treeWalker.current.nextNode()) {\n          if (!treeWalker.current.currentNode.getAttribute('aria-disabled')) {\n            var _treeWalker$current$c2;\n            nodeIds.push((_treeWalker$current$c2 = treeWalker.current.currentNode) === null || _treeWalker$current$c2 === void 0 ? void 0 : _treeWalker$current$c2.id);\n          }\n        }\n      }\n      setSelected(selected.concat(nodeIds));\n    }\n    if (nextFocusNode && nextFocusNode !== event.target) {\n      resetNodeTabIndices();\n      nextFocusNode.tabIndex = 0;\n      nextFocusNode.focus();\n    }\n    rest === null || rest === void 0 ? void 0 : (_rest$onKeyDown = rest.onKeyDown) === null || _rest$onKeyDown === void 0 ? void 0 : _rest$onKeyDown.call(rest, event);\n  }\n  useEffect(function () {\n    var _treeWalker$current;\n    treeWalker.current = (_treeWalker$current = treeWalker.current) !== null && _treeWalker$current !== void 0 ? _treeWalker$current : document.createTreeWalker(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current, NodeFilter.SHOW_ELEMENT, {\n      acceptNode: function acceptNode(node) {\n        if (node.classList.contains(\"\".concat(prefix, \"--tree-node--disabled\"))) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        if (node.matches(\"li.\".concat(prefix, \"--tree-node\"))) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n        return NodeFilter.FILTER_SKIP;\n      }\n    });\n  }, [prefix]);\n  var useActiveAndSelectedOnMount = function useActiveAndSelectedOnMount() {\n    return useEffect(function () {\n      if (preselected.length) {\n        setSelected(preselected);\n      }\n      if (prespecifiedActive) {\n        setActive(prespecifiedActive);\n      }\n    }, []);\n  };\n  useActiveAndSelectedOnMount();\n  var labelId = \"\".concat(treeId, \"__label\");\n  var TreeLabel = function TreeLabel() {\n    return !hideLabel && /*#__PURE__*/React__default.createElement(\"label\", {\n      id: labelId,\n      className: \"\".concat(prefix, \"--label\")\n    }, label);\n  };\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(TreeLabel, null), /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, rest, {\n    \"aria-label\": hideLabel ? label : null,\n    \"aria-labelledby\": !hideLabel ? labelId : null,\n    \"aria-multiselectable\": multiselect || null,\n    className: treeClasses,\n    onKeyDown: handleKeyDown,\n    ref: treeRootRef,\n    role: \"tree\"\n  }), nodesWithProps));\n}\nTreeView.propTypes = {\n  /**\n   * Mark the active node in the tree, represented by its value\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify the children of the TreeView\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the TreeView\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether or not the label should be hidden\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Provide the label text that will be read by a screen reader\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * **[Experimental]** Specify the selection mode of the tree.\n   * If `multiselect` is `false` then only one node can be selected at a time\n   */\n  multiselect: PropTypes.bool,\n  /**\n   * Callback function that is called when any node is selected\n   */\n  onSelect: PropTypes.func,\n  /**\n   * Array representing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * Specify the size of the tree from a list of available sizes.\n   */\n  size: PropTypes.oneOf(['xs', 'sm'])\n};\nexport { TreeView as default };","map":{"version":3,"names":["objectWithoutProperties","_objectWithoutProperties","defineProperty","_defineProperty","slicedToArray","_slicedToArray","extends","_extends","objectSpread2","_objectSpread2","React__default","useRef","useState","useEffect","PropTypes","cx","ArrowUp","ArrowDown","Home","End","matches","match","uniqueId","usePrefix","_excluded","TreeView","_ref","prespecifiedActive","active","children","className","_ref$hideLabel","hideLabel","label","_ref$multiselect","multiselect","onSelect","_ref$selected","selected","preselected","_ref$size","size","rest","_useRef","id","treeId","current","prefix","treeClasses","concat","treeRootRef","treeWalker","_useState","_useState2","setSelected","_useState3","_useState4","setActive","resetNodeTabIndices","_treeRootRef$current$","_treeRootRef$current","Array","prototype","forEach","call","querySelectorAll","item","tabIndex","handleTreeSelect","event","node","arguments","length","undefined","nodeId","metaKey","ctrlKey","includes","filter","selectedId","activeNodeId","handleFocusEvent","type","_treeRootRef$current2","currentFocusedNode","relatedTarget","prevFocusedNode","target","contains","_treeRootRef$current3","_prevFocusedNode","_currentFocusedNode","focusTarget","nodesWithProps","Children","map","sharedNodeProps","depth","onNodeFocusEvent","onTreeSelect","props","disabled","isValidElement","cloneElement","handleKeyDown","_rest$onKeyDown","stopPropagation","code","preventDefault","currentNode","nextFocusNode","previousNode","nextNode","nodeIds","shiftKey","getAttribute","_treeWalker$current$c","push","_nextFocusNode","root","_treeWalker$current$c2","focus","onKeyDown","_treeWalker$current","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","classList","FILTER_REJECT","FILTER_ACCEPT","FILTER_SKIP","useActiveAndSelectedOnMount","labelId","TreeLabel","createElement","Fragment","ref","role","propTypes","oneOfType","string","number","bool","isRequired","func","arrayOf","oneOf","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/TreeView/TreeView.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, slicedToArray as _slicedToArray, extends as _extends, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { ArrowUp, ArrowDown, Home, End } from '../../internal/keyboard/keys.js';\nimport { matches, match } from '../../internal/keyboard/match.js';\nimport uniqueId from '../../tools/uniqueId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar _excluded = [\"active\", \"children\", \"className\", \"hideLabel\", \"label\", \"multiselect\", \"onSelect\", \"selected\", \"size\"];\nfunction TreeView(_ref) {\n  var prespecifiedActive = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$hideLabel = _ref.hideLabel,\n      hideLabel = _ref$hideLabel === void 0 ? false : _ref$hideLabel,\n      label = _ref.label,\n      _ref$multiselect = _ref.multiselect,\n      multiselect = _ref$multiselect === void 0 ? false : _ref$multiselect,\n      onSelect = _ref.onSelect,\n      _ref$selected = _ref.selected,\n      preselected = _ref$selected === void 0 ? [] : _ref$selected,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'sm' : _ref$size,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useRef = useRef(rest.id || uniqueId()),\n      treeId = _useRef.current;\n\n  var prefix = usePrefix();\n  var treeClasses = cx(className, \"\".concat(prefix, \"--tree\"), _defineProperty({}, \"\".concat(prefix, \"--tree--\").concat(size), size !== 'default'));\n  var treeRootRef = useRef(null);\n  var treeWalker = useRef(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current);\n\n  var _useState = useState(preselected),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(prespecifiedActive),\n      _useState4 = _slicedToArray(_useState3, 2),\n      active = _useState4[0],\n      setActive = _useState4[1];\n\n  function resetNodeTabIndices() {\n    var _treeRootRef$current$, _treeRootRef$current;\n\n    Array.prototype.forEach.call((_treeRootRef$current$ = treeRootRef === null || treeRootRef === void 0 ? void 0 : (_treeRootRef$current = treeRootRef.current) === null || _treeRootRef$current === void 0 ? void 0 : _treeRootRef$current.querySelectorAll('[tabIndex=\"0\"]')) !== null && _treeRootRef$current$ !== void 0 ? _treeRootRef$current$ : [], function (item) {\n      item.tabIndex = -1;\n    });\n  }\n\n  function handleTreeSelect(event) {\n    var node = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var nodeId = node.id;\n\n    if (multiselect && (event.metaKey || event.ctrlKey)) {\n      if (!selected.includes(nodeId)) {\n        setSelected(selected.concat(nodeId));\n      } else {\n        setSelected(selected.filter(function (selectedId) {\n          return selectedId !== nodeId;\n        }));\n      }\n\n      onSelect === null || onSelect === void 0 ? void 0 : onSelect(event, node);\n    } else {\n      setSelected([nodeId]);\n      setActive(nodeId);\n      onSelect === null || onSelect === void 0 ? void 0 : onSelect(event, _objectSpread2({\n        activeNodeId: nodeId\n      }, node));\n    }\n  }\n\n  function handleFocusEvent(event) {\n    if (event.type === 'blur') {\n      var _treeRootRef$current2;\n\n      var currentFocusedNode = event.relatedTarget,\n          prevFocusedNode = event.target;\n\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current2 = treeRootRef.current) !== null && _treeRootRef$current2 !== void 0 && _treeRootRef$current2.contains(currentFocusedNode)) {\n        prevFocusedNode.tabIndex = -1;\n      }\n    }\n\n    if (event.type === 'focus') {\n      var _treeRootRef$current3;\n\n      resetNodeTabIndices();\n      var _prevFocusedNode = event.relatedTarget,\n          _currentFocusedNode = event.target;\n\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current3 = treeRootRef.current) !== null && _treeRootRef$current3 !== void 0 && _treeRootRef$current3.contains(_prevFocusedNode)) {\n        _prevFocusedNode.tabIndex = -1;\n      }\n\n      _currentFocusedNode.tabIndex = 0;\n    }\n  }\n\n  var focusTarget = false;\n  var nodesWithProps = React__default.Children.map(children, function (node) {\n    var sharedNodeProps = {\n      active: active,\n      depth: 0,\n      onNodeFocusEvent: handleFocusEvent,\n      onTreeSelect: handleTreeSelect,\n      selected: selected,\n      tabIndex: !node.props.disabled && -1 || null\n    };\n\n    if (!focusTarget && !node.props.disabled) {\n      sharedNodeProps.tabIndex = 0;\n      focusTarget = true;\n    }\n\n    if ( /*#__PURE__*/React__default.isValidElement(node)) {\n      return /*#__PURE__*/React__default.cloneElement(node, sharedNodeProps);\n    }\n  });\n\n  function handleKeyDown(event) {\n    var _rest$onKeyDown;\n\n    event.stopPropagation();\n\n    if (matches(event, [ArrowUp, ArrowDown, Home, End, {\n      code: 'KeyA'\n    }])) {\n      event.preventDefault();\n    }\n\n    treeWalker.current.currentNode = event.target;\n    var nextFocusNode;\n\n    if (match(event, ArrowUp)) {\n      nextFocusNode = treeWalker.current.previousNode();\n    }\n\n    if (match(event, ArrowDown)) {\n      nextFocusNode = treeWalker.current.nextNode();\n    }\n\n    if (matches(event, [Home, End, {\n      code: 'KeyA'\n    }])) {\n      var nodeIds = [];\n\n      if (matches(event, [Home, End])) {\n        if (multiselect && event.shiftKey && event.ctrlKey && !treeWalker.current.currentNode.getAttribute('aria-disabled')) {\n          var _treeWalker$current$c;\n\n          nodeIds.push((_treeWalker$current$c = treeWalker.current.currentNode) === null || _treeWalker$current$c === void 0 ? void 0 : _treeWalker$current$c.id);\n        }\n\n        while (match(event, Home) ? treeWalker.current.previousNode() : treeWalker.current.nextNode()) {\n          nextFocusNode = treeWalker.current.currentNode;\n\n          if (multiselect && event.shiftKey && event.ctrlKey && !nextFocusNode.getAttribute('aria-disabled')) {\n            var _nextFocusNode;\n\n            nodeIds.push((_nextFocusNode = nextFocusNode) === null || _nextFocusNode === void 0 ? void 0 : _nextFocusNode.id);\n          }\n        }\n      }\n\n      if (match(event, {\n        code: 'KeyA'\n      }) && event.ctrlKey) {\n        treeWalker.current.currentNode = treeWalker.current.root;\n\n        while (treeWalker.current.nextNode()) {\n          if (!treeWalker.current.currentNode.getAttribute('aria-disabled')) {\n            var _treeWalker$current$c2;\n\n            nodeIds.push((_treeWalker$current$c2 = treeWalker.current.currentNode) === null || _treeWalker$current$c2 === void 0 ? void 0 : _treeWalker$current$c2.id);\n          }\n        }\n      }\n\n      setSelected(selected.concat(nodeIds));\n    }\n\n    if (nextFocusNode && nextFocusNode !== event.target) {\n      resetNodeTabIndices();\n      nextFocusNode.tabIndex = 0;\n      nextFocusNode.focus();\n    }\n\n    rest === null || rest === void 0 ? void 0 : (_rest$onKeyDown = rest.onKeyDown) === null || _rest$onKeyDown === void 0 ? void 0 : _rest$onKeyDown.call(rest, event);\n  }\n\n  useEffect(function () {\n    var _treeWalker$current;\n\n    treeWalker.current = (_treeWalker$current = treeWalker.current) !== null && _treeWalker$current !== void 0 ? _treeWalker$current : document.createTreeWalker(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current, NodeFilter.SHOW_ELEMENT, {\n      acceptNode: function acceptNode(node) {\n        if (node.classList.contains(\"\".concat(prefix, \"--tree-node--disabled\"))) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if (node.matches(\"li.\".concat(prefix, \"--tree-node\"))) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    });\n  }, [prefix]);\n\n  var useActiveAndSelectedOnMount = function useActiveAndSelectedOnMount() {\n    return useEffect(function () {\n      if (preselected.length) {\n        setSelected(preselected);\n      }\n\n      if (prespecifiedActive) {\n        setActive(prespecifiedActive);\n      }\n    }, []);\n  };\n\n  useActiveAndSelectedOnMount();\n  var labelId = \"\".concat(treeId, \"__label\");\n\n  var TreeLabel = function TreeLabel() {\n    return !hideLabel && /*#__PURE__*/React__default.createElement(\"label\", {\n      id: labelId,\n      className: \"\".concat(prefix, \"--label\")\n    }, label);\n  };\n\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(TreeLabel, null), /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, rest, {\n    \"aria-label\": hideLabel ? label : null,\n    \"aria-labelledby\": !hideLabel ? labelId : null,\n    \"aria-multiselectable\": multiselect || null,\n    className: treeClasses,\n    onKeyDown: handleKeyDown,\n    ref: treeRootRef,\n    role: \"tree\"\n  }), nodesWithProps));\n}\nTreeView.propTypes = {\n  /**\n   * Mark the active node in the tree, represented by its value\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify the children of the TreeView\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the TreeView\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether or not the label should be hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide the label text that will be read by a screen reader\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * **[Experimental]** Specify the selection mode of the tree.\n   * If `multiselect` is `false` then only one node can be selected at a time\n   */\n  multiselect: PropTypes.bool,\n\n  /**\n   * Callback function that is called when any node is selected\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Array representing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * Specify the size of the tree from a list of available sizes.\n   */\n  size: PropTypes.oneOf(['xs', 'sm'])\n};\n\nexport { TreeView as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}