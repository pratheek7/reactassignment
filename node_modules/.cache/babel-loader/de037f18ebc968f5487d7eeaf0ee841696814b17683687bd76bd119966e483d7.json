{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { slicedToArray as _slicedToArray } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { createScope, FeatureFlags as FeatureFlags$1 } from '@carbon/feature-flags';\nimport PropTypes from 'prop-types';\nimport React__default, { useContext, useState, useRef, useEffect, createContext } from 'react';\n\n/**\n * Our FeatureFlagContext is used alongside the FeatureFlags component to enable\n * or disable feature flags in a given React tree\n */\n\nvar FeatureFlagContext = /*#__PURE__*/createContext(FeatureFlags$1);\n/**\n * Supports an object of feature flag values with the `flags` prop, merging them\n * along with the current `FeatureFlagContext` to provide consumers to check if\n * a feature flag is enabled or disabled in a given React tree\n */\n\nfunction FeatureFlags(_ref) {\n  var children = _ref.children,\n    _ref$flags = _ref.flags,\n    flags = _ref$flags === void 0 ? {} : _ref$flags;\n  var parentScope = useContext(FeatureFlagContext);\n  var _useState = useState(parentScope),\n    _useState2 = _slicedToArray(_useState, 2),\n    prevParentScope = _useState2[0],\n    setPrevParentScope = _useState2[1];\n  var _useState3 = useState(function () {\n      var scope = createScope(flags);\n      scope.mergeWithScope(parentScope);\n      return scope;\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scope = _useState4[0],\n    updateScope = _useState4[1];\n  if (parentScope !== prevParentScope) {\n    var _scope = createScope(flags);\n    _scope.mergeWithScope(parentScope);\n    updateScope(_scope);\n    setPrevParentScope(parentScope);\n  } // We use a custom hook to detect if any of the keys or their values change\n  // for flags that are passed in. If they have changed, then we re-create the\n  // FeatureFlagScope using the new flags\n\n  useChangedValue(flags, isEqual, function (changedFlags) {\n    var scope = createScope(changedFlags);\n    scope.mergeWithScope(parentScope);\n    updateScope(scope);\n  });\n  return /*#__PURE__*/React__default.createElement(FeatureFlagContext.Provider, {\n    value: scope\n  }, children);\n}\nFeatureFlags.propTypes = {\n  children: PropTypes.node,\n  /**\n   * Provide the feature flags to enabled or disabled in the current React tree\n   */\n  flags: PropTypes.objectOf(PropTypes.bool)\n};\n/**\n * This hook will store previous versions of the given `value` and compare the\n * current value to the previous one using the `compare` function. If the\n * compare function returns true, then the given `callback` is invoked in an\n * effect.\n *\n * @param {any} value\n * @param {Function} compare\n * @param {Function} callback\n */\n\nfunction useChangedValue(value, compare, callback) {\n  var initialRender = useRef(false);\n  var savedCallback = useRef(callback);\n  var _useState5 = useState(value),\n    _useState6 = _slicedToArray(_useState5, 2),\n    prevValue = _useState6[0],\n    setPrevValue = _useState6[1];\n  if (!compare(prevValue, value)) {\n    setPrevValue(value);\n  }\n  useEffect(function () {\n    savedCallback.current = callback;\n  });\n  useEffect(function () {\n    // We only want the callback triggered after the first render\n    if (initialRender.current) {\n      savedCallback.current(prevValue);\n    }\n  }, [prevValue]);\n  useEffect(function () {\n    initialRender.current = true;\n  }, []);\n}\n/**\n * Access whether a given flag is enabled or disabled in a given\n * FeatureFlagContext\n *\n * @returns {boolean}\n */\n\nfunction useFeatureFlag(flag) {\n  var scope = useContext(FeatureFlagContext);\n  return scope.enabled(flag);\n}\n/**\n * Access all feature flag information for the given FeatureFlagContext\n *\n * @returns {FeatureFlagScope}\n */\n\nfunction useFeatureFlags() {\n  return useContext(FeatureFlagContext);\n}\n/**\n * Compare two objects and determine if they are equal. This is a shallow\n * comparison since the objects we are comparing are objects with boolean flags\n * from the flags prop in the `FeatureFlags` component\n *\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\n\nfunction isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  for (var _i = 0, _Object$keys = Object.keys(a); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  for (var _i2 = 0, _Object$keys2 = Object.keys(b); _i2 < _Object$keys2.length; _i2++) {\n    var _key = _Object$keys2[_i2];\n    if (b[_key] !== a[_key]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport { FeatureFlagContext, FeatureFlags, useFeatureFlag, useFeatureFlags };","map":{"version":3,"names":["slicedToArray","_slicedToArray","createScope","FeatureFlags","FeatureFlags$1","PropTypes","React__default","useContext","useState","useRef","useEffect","createContext","FeatureFlagContext","_ref","children","_ref$flags","flags","parentScope","_useState","_useState2","prevParentScope","setPrevParentScope","_useState3","scope","mergeWithScope","_useState4","updateScope","_scope","useChangedValue","isEqual","changedFlags","createElement","Provider","value","propTypes","node","objectOf","bool","compare","callback","initialRender","savedCallback","_useState5","_useState6","prevValue","setPrevValue","current","useFeatureFlag","flag","enabled","useFeatureFlags","a","b","_i","_Object$keys","Object","keys","length","key","_i2","_Object$keys2","_key"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/FeatureFlags/index.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { slicedToArray as _slicedToArray } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { createScope, FeatureFlags as FeatureFlags$1 } from '@carbon/feature-flags';\nimport PropTypes from 'prop-types';\nimport React__default, { useContext, useState, useRef, useEffect, createContext } from 'react';\n\n/**\n * Our FeatureFlagContext is used alongside the FeatureFlags component to enable\n * or disable feature flags in a given React tree\n */\n\nvar FeatureFlagContext = /*#__PURE__*/createContext(FeatureFlags$1);\n/**\n * Supports an object of feature flag values with the `flags` prop, merging them\n * along with the current `FeatureFlagContext` to provide consumers to check if\n * a feature flag is enabled or disabled in a given React tree\n */\n\nfunction FeatureFlags(_ref) {\n  var children = _ref.children,\n      _ref$flags = _ref.flags,\n      flags = _ref$flags === void 0 ? {} : _ref$flags;\n  var parentScope = useContext(FeatureFlagContext);\n\n  var _useState = useState(parentScope),\n      _useState2 = _slicedToArray(_useState, 2),\n      prevParentScope = _useState2[0],\n      setPrevParentScope = _useState2[1];\n\n  var _useState3 = useState(function () {\n    var scope = createScope(flags);\n    scope.mergeWithScope(parentScope);\n    return scope;\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scope = _useState4[0],\n      updateScope = _useState4[1];\n\n  if (parentScope !== prevParentScope) {\n    var _scope = createScope(flags);\n\n    _scope.mergeWithScope(parentScope);\n\n    updateScope(_scope);\n    setPrevParentScope(parentScope);\n  } // We use a custom hook to detect if any of the keys or their values change\n  // for flags that are passed in. If they have changed, then we re-create the\n  // FeatureFlagScope using the new flags\n\n\n  useChangedValue(flags, isEqual, function (changedFlags) {\n    var scope = createScope(changedFlags);\n    scope.mergeWithScope(parentScope);\n    updateScope(scope);\n  });\n  return /*#__PURE__*/React__default.createElement(FeatureFlagContext.Provider, {\n    value: scope\n  }, children);\n}\n\nFeatureFlags.propTypes = {\n  children: PropTypes.node,\n\n  /**\n   * Provide the feature flags to enabled or disabled in the current React tree\n   */\n  flags: PropTypes.objectOf(PropTypes.bool)\n};\n/**\n * This hook will store previous versions of the given `value` and compare the\n * current value to the previous one using the `compare` function. If the\n * compare function returns true, then the given `callback` is invoked in an\n * effect.\n *\n * @param {any} value\n * @param {Function} compare\n * @param {Function} callback\n */\n\nfunction useChangedValue(value, compare, callback) {\n  var initialRender = useRef(false);\n  var savedCallback = useRef(callback);\n\n  var _useState5 = useState(value),\n      _useState6 = _slicedToArray(_useState5, 2),\n      prevValue = _useState6[0],\n      setPrevValue = _useState6[1];\n\n  if (!compare(prevValue, value)) {\n    setPrevValue(value);\n  }\n\n  useEffect(function () {\n    savedCallback.current = callback;\n  });\n  useEffect(function () {\n    // We only want the callback triggered after the first render\n    if (initialRender.current) {\n      savedCallback.current(prevValue);\n    }\n  }, [prevValue]);\n  useEffect(function () {\n    initialRender.current = true;\n  }, []);\n}\n/**\n * Access whether a given flag is enabled or disabled in a given\n * FeatureFlagContext\n *\n * @returns {boolean}\n */\n\n\nfunction useFeatureFlag(flag) {\n  var scope = useContext(FeatureFlagContext);\n  return scope.enabled(flag);\n}\n/**\n * Access all feature flag information for the given FeatureFlagContext\n *\n * @returns {FeatureFlagScope}\n */\n\n\nfunction useFeatureFlags() {\n  return useContext(FeatureFlagContext);\n}\n/**\n * Compare two objects and determine if they are equal. This is a shallow\n * comparison since the objects we are comparing are objects with boolean flags\n * from the flags prop in the `FeatureFlags` component\n *\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\n\n\nfunction isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(a); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  for (var _i2 = 0, _Object$keys2 = Object.keys(b); _i2 < _Object$keys2.length; _i2++) {\n    var _key = _Object$keys2[_i2];\n\n    if (b[_key] !== a[_key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport { FeatureFlagContext, FeatureFlags, useFeatureFlag, useFeatureFlags };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}