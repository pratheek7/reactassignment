{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash.omit';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar TableRow = function TableRow(props) {\n  var prefix = usePrefix(); // Remove unnecessary props if provided to this component, these are\n  // only useful in `TableExpandRow`\n\n  var className = cx(props.className, _defineProperty({}, \"\".concat(prefix, \"--data-table--selected\"), props.isSelected));\n  var cleanProps = _objectSpread2(_objectSpread2({}, omit(props, ['ariaLabel', 'onExpand', 'isExpanded', 'isSelected'])), {}, {\n    className: className || undefined\n  });\n  return /*#__PURE__*/React__default.createElement(\"tr\", cleanProps);\n};\nTableRow.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify if the row is selected\n   */\n  isSelected: PropTypes.bool\n};\nexport { TableRow as default };","map":{"version":3,"names":["defineProperty","_defineProperty","objectSpread2","_objectSpread2","React__default","PropTypes","omit","cx","usePrefix","TableRow","props","prefix","className","concat","isSelected","cleanProps","undefined","createElement","propTypes","string","bool","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/DataTable/TableRow.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash.omit';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar TableRow = function TableRow(props) {\n  var prefix = usePrefix(); // Remove unnecessary props if provided to this component, these are\n  // only useful in `TableExpandRow`\n\n  var className = cx(props.className, _defineProperty({}, \"\".concat(prefix, \"--data-table--selected\"), props.isSelected));\n\n  var cleanProps = _objectSpread2(_objectSpread2({}, omit(props, ['ariaLabel', 'onExpand', 'isExpanded', 'isSelected'])), {}, {\n    className: className || undefined\n  });\n\n  return /*#__PURE__*/React__default.createElement(\"tr\", cleanProps);\n};\n\nTableRow.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify if the row is selected\n   */\n  isSelected: PropTypes.bool\n};\n\nexport { TableRow as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,IAAIC,eAAe,EAAEC,aAAa,IAAIC,cAAc,QAAQ,6CAA6C;AAChI,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,IAAIC,QAAQ,GAAG,SAASA,QAAQ,CAACC,KAAK,EAAE;EACtC,IAAIC,MAAM,GAAGH,SAAS,EAAE,CAAC,CAAC;EAC1B;;EAEA,IAAII,SAAS,GAAGL,EAAE,CAACG,KAAK,CAACE,SAAS,EAAEX,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,CAACY,MAAM,CAACF,MAAM,EAAE,wBAAwB,CAAC,EAAED,KAAK,CAACI,UAAU,CAAC,CAAC;EAEvH,IAAIC,UAAU,GAAGZ,cAAc,CAACA,cAAc,CAAC,CAAC,CAAC,EAAEG,IAAI,CAACI,KAAK,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IAC1HE,SAAS,EAAEA,SAAS,IAAII;EAC1B,CAAC,CAAC;EAEF,OAAO,aAAaZ,cAAc,CAACa,aAAa,CAAC,IAAI,EAAEF,UAAU,CAAC;AACpE,CAAC;AAEDN,QAAQ,CAACS,SAAS,GAAG;EACnB;AACF;AACA;EACEN,SAAS,EAAEP,SAAS,CAACc,MAAM;EAE3B;AACF;AACA;EACEL,UAAU,EAAET,SAAS,CAACe;AACxB,CAAC;AAED,SAASX,QAAQ,IAAIY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}