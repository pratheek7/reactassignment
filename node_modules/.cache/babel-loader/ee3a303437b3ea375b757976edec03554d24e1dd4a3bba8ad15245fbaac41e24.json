{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport rangePlugin from '../../../node_modules/flatpickr/dist/plugins/rangePlugin.js';\n\n/**\n * @param {object} config Plugin configuration.\n * @returns {Plugin} An extension of Flatpickr `rangePlugin` that does the following:\n *   * Better ensures the calendar dropdown is always aligned to the `<input>` for the starting date.\n *     Workaround for: https://github.com/flatpickr/flatpickr/issues/1944\n *   * A logic to ensure `fp.setDate()` call won't end up with \"startDate to endDate\" set to the first `<input>`\n */\n\nvar carbonFlatpickrRangePlugin = function (config) {\n  var factory = rangePlugin(Object.assign({\n    position: 'left'\n  }, config));\n  return function (fp) {\n    var origSetDate = fp.setDate;\n    var init = function init() {\n      fp.setDate = function setDate(dates, triggerChange, format) {\n        origSetDate.call(this, dates, triggerChange, format); // If `triggerChange` is `true`, `onValueUpdate` Flatpickr event is fired\n        // where Flatpickr's range plugin takes care of fixing the first `<input>`\n\n        if (!triggerChange) {\n          var inputFrom = fp._input;\n          var inputTo = config.input;\n          [inputFrom, inputTo].forEach(function (input, i) {\n            if (input) {\n              input.value = !dates[i] ? '' : fp.formatDate(new Date(dates[i]), fp.config.dateFormat);\n            }\n          });\n        }\n      };\n    };\n    var origRangePlugin = factory(fp);\n    var origOnReady = origRangePlugin.onReady;\n    return Object.assign(origRangePlugin, {\n      onReady: [init, origOnReady],\n      onPreCalendarPosition: function onPreCalendarPosition() {}\n    });\n  };\n};\nexport { carbonFlatpickrRangePlugin as default };","map":{"version":3,"names":["rangePlugin","carbonFlatpickrRangePlugin","config","factory","Object","assign","position","fp","origSetDate","setDate","init","dates","triggerChange","format","call","inputFrom","_input","inputTo","input","forEach","i","value","formatDate","Date","dateFormat","origRangePlugin","origOnReady","onReady","onPreCalendarPosition","default"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/DatePicker/plugins/rangePlugin.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport rangePlugin from '../../../node_modules/flatpickr/dist/plugins/rangePlugin.js';\n\n/**\n * @param {object} config Plugin configuration.\n * @returns {Plugin} An extension of Flatpickr `rangePlugin` that does the following:\n *   * Better ensures the calendar dropdown is always aligned to the `<input>` for the starting date.\n *     Workaround for: https://github.com/flatpickr/flatpickr/issues/1944\n *   * A logic to ensure `fp.setDate()` call won't end up with \"startDate to endDate\" set to the first `<input>`\n */\n\nvar carbonFlatpickrRangePlugin = (function (config) {\n  var factory = rangePlugin(Object.assign({\n    position: 'left'\n  }, config));\n  return function (fp) {\n    var origSetDate = fp.setDate;\n\n    var init = function init() {\n      fp.setDate = function setDate(dates, triggerChange, format) {\n        origSetDate.call(this, dates, triggerChange, format); // If `triggerChange` is `true`, `onValueUpdate` Flatpickr event is fired\n        // where Flatpickr's range plugin takes care of fixing the first `<input>`\n\n        if (!triggerChange) {\n          var inputFrom = fp._input;\n          var inputTo = config.input;\n          [inputFrom, inputTo].forEach(function (input, i) {\n            if (input) {\n              input.value = !dates[i] ? '' : fp.formatDate(new Date(dates[i]), fp.config.dateFormat);\n            }\n          });\n        }\n      };\n    };\n\n    var origRangePlugin = factory(fp);\n    var origOnReady = origRangePlugin.onReady;\n    return Object.assign(origRangePlugin, {\n      onReady: [init, origOnReady],\n      onPreCalendarPosition: function onPreCalendarPosition() {}\n    });\n  };\n});\n\nexport { carbonFlatpickrRangePlugin as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,WAAW,MAAM,6DAA6D;;AAErF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,0BAA0B,GAAI,UAAUC,MAAM,EAAE;EAClD,IAAIC,OAAO,GAAGH,WAAW,CAACI,MAAM,CAACC,MAAM,CAAC;IACtCC,QAAQ,EAAE;EACZ,CAAC,EAAEJ,MAAM,CAAC,CAAC;EACX,OAAO,UAAUK,EAAE,EAAE;IACnB,IAAIC,WAAW,GAAGD,EAAE,CAACE,OAAO;IAE5B,IAAIC,IAAI,GAAG,SAASA,IAAI,GAAG;MACzBH,EAAE,CAACE,OAAO,GAAG,SAASA,OAAO,CAACE,KAAK,EAAEC,aAAa,EAAEC,MAAM,EAAE;QAC1DL,WAAW,CAACM,IAAI,CAAC,IAAI,EAAEH,KAAK,EAAEC,aAAa,EAAEC,MAAM,CAAC,CAAC,CAAC;QACtD;;QAEA,IAAI,CAACD,aAAa,EAAE;UAClB,IAAIG,SAAS,GAAGR,EAAE,CAACS,MAAM;UACzB,IAAIC,OAAO,GAAGf,MAAM,CAACgB,KAAK;UAC1B,CAACH,SAAS,EAAEE,OAAO,CAAC,CAACE,OAAO,CAAC,UAAUD,KAAK,EAAEE,CAAC,EAAE;YAC/C,IAAIF,KAAK,EAAE;cACTA,KAAK,CAACG,KAAK,GAAG,CAACV,KAAK,CAACS,CAAC,CAAC,GAAG,EAAE,GAAGb,EAAE,CAACe,UAAU,CAAC,IAAIC,IAAI,CAACZ,KAAK,CAACS,CAAC,CAAC,CAAC,EAAEb,EAAE,CAACL,MAAM,CAACsB,UAAU,CAAC;YACxF;UACF,CAAC,CAAC;QACJ;MACF,CAAC;IACH,CAAC;IAED,IAAIC,eAAe,GAAGtB,OAAO,CAACI,EAAE,CAAC;IACjC,IAAImB,WAAW,GAAGD,eAAe,CAACE,OAAO;IACzC,OAAOvB,MAAM,CAACC,MAAM,CAACoB,eAAe,EAAE;MACpCE,OAAO,EAAE,CAACjB,IAAI,EAAEgB,WAAW,CAAC;MAC5BE,qBAAqB,EAAE,SAASA,qBAAqB,GAAG,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC;AACH,CAAE;AAEF,SAAS3B,0BAA0B,IAAI4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}