{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectSpread2 as _objectSpread2, objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar _excluded = [\"aria-label\", \"aria-labelledby\", \"children\", \"className\"];\nfunction HeaderNavigation(props) {\n  var ariaLabel = props['aria-label'],\n    ariaLabelledBy = props['aria-labelledby'],\n    children = props.children,\n    customClassName = props.className,\n    rest = _objectWithoutProperties(props, _excluded);\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--header__nav\"), customClassName); // Assign both label strategies in this option, only one should be defined\n  // so when we spread that should be the one that is applied to the node\n\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n  return /*#__PURE__*/React__default.createElement(\"nav\", _extends({}, rest, accessibilityLabel, {\n    className: className\n  }), /*#__PURE__*/React__default.createElement(\"ul\", {\n    className: \"\".concat(prefix, \"--header__menu-bar\")\n  }, children));\n}\nHeaderNavigation.propTypes = _objectSpread2(_objectSpread2({}, AriaLabelPropType), {}, {\n  /**\n   * Provide valid children of HeaderNavigation, for example `HeaderMenuItem`\n   * or `HeaderMenu`\n   */\n  children: PropTypes.node,\n  /**\n   * Optionally provide a custom class to apply to the underlying <nav> node\n   */\n  className: PropTypes.string\n});\nexport { HeaderNavigation };","map":{"version":3,"names":["objectSpread2","_objectSpread2","objectWithoutProperties","_objectWithoutProperties","extends","_extends","cx","React__default","PropTypes","AriaLabelPropType","usePrefix","_excluded","HeaderNavigation","props","ariaLabel","ariaLabelledBy","children","customClassName","className","rest","prefix","concat","accessibilityLabel","createElement","propTypes","node","string"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/UIShell/HeaderNavigation.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectSpread2 as _objectSpread2, objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar _excluded = [\"aria-label\", \"aria-labelledby\", \"children\", \"className\"];\n\nfunction HeaderNavigation(props) {\n  var ariaLabel = props['aria-label'],\n      ariaLabelledBy = props['aria-labelledby'],\n      children = props.children,\n      customClassName = props.className,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--header__nav\"), customClassName); // Assign both label strategies in this option, only one should be defined\n  // so when we spread that should be the one that is applied to the node\n\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n  return /*#__PURE__*/React__default.createElement(\"nav\", _extends({}, rest, accessibilityLabel, {\n    className: className\n  }), /*#__PURE__*/React__default.createElement(\"ul\", {\n    className: \"\".concat(prefix, \"--header__menu-bar\")\n  }, children));\n}\n\nHeaderNavigation.propTypes = _objectSpread2(_objectSpread2({}, AriaLabelPropType), {}, {\n  /**\n   * Provide valid children of HeaderNavigation, for example `HeaderMenuItem`\n   * or `HeaderMenu`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Optionally provide a custom class to apply to the underlying <nav> node\n   */\n  className: PropTypes.string\n});\n\nexport { HeaderNavigation };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,IAAIC,cAAc,EAAEC,uBAAuB,IAAIC,wBAAwB,EAAEC,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACvK,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,IAAIC,SAAS,GAAG,CAAC,YAAY,EAAE,iBAAiB,EAAE,UAAU,EAAE,WAAW,CAAC;AAE1E,SAASC,gBAAgB,CAACC,KAAK,EAAE;EAC/B,IAAIC,SAAS,GAAGD,KAAK,CAAC,YAAY,CAAC;IAC/BE,cAAc,GAAGF,KAAK,CAAC,iBAAiB,CAAC;IACzCG,QAAQ,GAAGH,KAAK,CAACG,QAAQ;IACzBC,eAAe,GAAGJ,KAAK,CAACK,SAAS;IACjCC,IAAI,GAAGhB,wBAAwB,CAACU,KAAK,EAAEF,SAAS,CAAC;EAErD,IAAIS,MAAM,GAAGV,SAAS,EAAE;EACxB,IAAIQ,SAAS,GAAGZ,EAAE,CAAC,EAAE,CAACe,MAAM,CAACD,MAAM,EAAE,eAAe,CAAC,EAAEH,eAAe,CAAC,CAAC,CAAC;EACzE;;EAEA,IAAIK,kBAAkB,GAAG;IACvB,YAAY,EAAER,SAAS;IACvB,iBAAiB,EAAEC;EACrB,CAAC;EACD,OAAO,aAAaR,cAAc,CAACgB,aAAa,CAAC,KAAK,EAAElB,QAAQ,CAAC,CAAC,CAAC,EAAEc,IAAI,EAAEG,kBAAkB,EAAE;IAC7FJ,SAAS,EAAEA;EACb,CAAC,CAAC,EAAE,aAAaX,cAAc,CAACgB,aAAa,CAAC,IAAI,EAAE;IAClDL,SAAS,EAAE,EAAE,CAACG,MAAM,CAACD,MAAM,EAAE,oBAAoB;EACnD,CAAC,EAAEJ,QAAQ,CAAC,CAAC;AACf;AAEAJ,gBAAgB,CAACY,SAAS,GAAGvB,cAAc,CAACA,cAAc,CAAC,CAAC,CAAC,EAAEQ,iBAAiB,CAAC,EAAE,CAAC,CAAC,EAAE;EACrF;AACF;AACA;AACA;EACEO,QAAQ,EAAER,SAAS,CAACiB,IAAI;EAExB;AACF;AACA;EACEP,SAAS,EAAEV,SAAS,CAACkB;AACvB,CAAC,CAAC;AAEF,SAASd,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}