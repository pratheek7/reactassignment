{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { GridSettings } from './GridContext.js';\nvar _excluded = [\"as\", \"condensed\", \"narrow\", \"fullWidth\", \"className\", \"children\"];\nfunction FlexGrid(_ref) {\n  var _cx;\n  var _ref$as = _ref.as,\n    BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n    _ref$condensed = _ref.condensed,\n    condensed = _ref$condensed === void 0 ? false : _ref$condensed,\n    _ref$narrow = _ref.narrow,\n    narrow = _ref$narrow === void 0 ? false : _ref$narrow,\n    _ref$fullWidth = _ref.fullWidth,\n    fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n    containerClassName = _ref.className,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var className = cx(containerClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--grid\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--grid--condensed\"), condensed), _defineProperty(_cx, \"\".concat(prefix, \"--grid--narrow\"), narrow), _defineProperty(_cx, \"\".concat(prefix, \"--grid--full-width\"), fullWidth), _cx));\n  return /*#__PURE__*/React__default.createElement(GridSettings, {\n    mode: \"flexbox\",\n    subgrid: false\n  }, /*#__PURE__*/React__default.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children));\n}\nFlexGrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Pass in content that will be rendered within the `FlexGrid`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify a custom className to be applied to the `FlexGrid`\n   */\n  className: PropTypes.string,\n  /**\n   * Collapse the gutter to 1px. Useful for fluid layouts.\n   * Rows have 1px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n  /**\n   * Remove the default max width that the grid has set\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Container hangs 16px into the gutter. Useful for\n   * typographic alignment with and without containers.\n   */\n  narrow: PropTypes.bool\n};\nexport { FlexGrid };","map":{"version":3,"names":["objectWithoutProperties","_objectWithoutProperties","defineProperty","_defineProperty","extends","_extends","cx","PropTypes","React__default","usePrefix","GridSettings","_excluded","FlexGrid","_ref","_cx","_ref$as","as","BaseComponent","_ref$condensed","condensed","_ref$narrow","narrow","_ref$fullWidth","fullWidth","containerClassName","className","children","rest","prefix","concat","createElement","mode","subgrid","propTypes","oneOfType","string","elementType","node","bool"],"sources":["C:/Users/Administrator/Desktop/nerf/node_modules/@carbon/react/es/components/Grid/FlexGrid.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { GridSettings } from './GridContext.js';\n\nvar _excluded = [\"as\", \"condensed\", \"narrow\", \"fullWidth\", \"className\", \"children\"];\n\nfunction FlexGrid(_ref) {\n  var _cx;\n\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      _ref$condensed = _ref.condensed,\n      condensed = _ref$condensed === void 0 ? false : _ref$condensed,\n      _ref$narrow = _ref.narrow,\n      narrow = _ref$narrow === void 0 ? false : _ref$narrow,\n      _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n      containerClassName = _ref.className,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(containerClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--grid\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--grid--condensed\"), condensed), _defineProperty(_cx, \"\".concat(prefix, \"--grid--narrow\"), narrow), _defineProperty(_cx, \"\".concat(prefix, \"--grid--full-width\"), fullWidth), _cx));\n  return /*#__PURE__*/React__default.createElement(GridSettings, {\n    mode: \"flexbox\",\n    subgrid: false\n  }, /*#__PURE__*/React__default.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children));\n}\n\nFlexGrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `FlexGrid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `FlexGrid`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Collapse the gutter to 1px. Useful for fluid layouts.\n   * Rows have 1px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n\n  /**\n   * Remove the default max width that the grid has set\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Container hangs 16px into the gutter. Useful for\n   * typographic alignment with and without containers.\n   */\n  narrow: PropTypes.bool\n};\n\nexport { FlexGrid };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}